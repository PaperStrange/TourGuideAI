name: TourGuideAI CI/CD Pipeline

on:
  push:
    branches: 
      - main
      - develop
      - 'feat-*'
      - 'release-*'
  pull_request:
    branches: 
      - main
      - develop
      - 'release-*'

# Set default permissions as least privilege
permissions:
  contents: read

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Dependency Review
      uses: actions/dependency-review-action@v3
      if: github.event_name == 'pull_request'
    
    - name: Lint
      run: npm run lint || true
    
    - name: Frontend Stability Check
      run: |
        # Check for Router nesting issues
        ! grep -r --include="*.js" --include="*.jsx" --include="*.ts" --include="*.tsx" "BrowserRouter.*Router\|Router.*BrowserRouter" src/ || echo "Warning: Potential Router nesting detected"
        
        # Check for Theme Provider
        grep -r --include="*.js" --include="*.jsx" --include="*.ts" --include="*.tsx" "ThemeProvider" src/
        
        # Check for proper ESLint globals
        grep -r --include="*.js" --include="*.jsx" --include="*.ts" --include="*.tsx" "\/\* global " src/
    
    - name: Build
      run: npm run build
      env:
        DISABLE_ESLINT_PLUGIN: "true"
    
    - name: Test
      run: npm test -- --watchAll=false
    
    - name: Setup CodeQL
      uses: github/codeql-action/init@v2
      if: github.event_name == 'push'
      with:
        languages: javascript
    
    - name: Run CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      if: github.event_name == 'push'
    
    - name: Archive build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: build/
        retention-days: 5

  deploy-staging:
    needs: build-and-test
    if: github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/release-')
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: build/
    
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_STAGING }}
        aws-region: us-east-1
    
    - name: Deploy to S3 (Staging)
      run: |
        aws s3 sync build/ s3://tourguideai-staging/ --delete
        aws cloudfront create-invalidation --distribution-id ${{ secrets.STAGING_CLOUDFRONT_ID }} --paths "/*"

  deploy-production:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    permissions:
      id-token: write
      contents: read
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: build/
    
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_PRODUCTION }}
        aws-region: us-east-1
    
    - name: Deploy to S3 (Production)
      run: |
        aws s3 sync build/ s3://tourguideai-production/ --delete
        aws cloudfront create-invalidation --distribution-id ${{ secrets.PRODUCTION_CLOUDFRONT_ID }} --paths "/*"

  smoke-test:
    needs: [deploy-staging, deploy-production]
    if: always() && (needs.deploy-staging.result == 'success' || needs.deploy-production.result == 'success')
    runs-on: ubuntu-latest
    permissions: {}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install Playwright
      run: |
        npm ci
        npx playwright install --with-deps chromium
    
    - name: Run Smoke Tests
      env:
        BASE_URL: ${{ github.ref == 'refs/heads/main' && 'https://app.tourguideai.com' || 'https://staging.tourguideai.com' }}
      run: |
        npx playwright test smoke.test.js
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: smoke-test-results
        path: test-results/
        retention-days: 7 