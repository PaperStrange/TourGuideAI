{"version":3,"file":"static/js/25.51d335c4.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/Email.js","../node_modules/@mui/icons-material/CheckCircle.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js","../node_modules/@mui/icons-material/MarkEmailRead.js","../node_modules/@mui/icons-material/Error.js","features/beta-program/services/EmailService.js","features/beta-program/pages/VerifyEmailPage.jsx"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4-8 5-8-5V6l8 5 8-5z\"\n}), 'Email');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m-2 15-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n}), 'CheckCircle');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport { getCircularProgressUtilityClass } from './circularProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes(_t || (_t = _`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`));\nconst circularDashKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-block'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('transform')\n}, ownerState.color !== 'inherit' && {\n  color: (theme.vars || theme).palette[ownerState.color].main\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.4s linear infinite;\n    `), circularRotateKeyframe));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  stroke: 'currentColor'\n}, ownerState.variant === 'determinate' && {\n  transition: theme.transitions.create('stroke-dashoffset')\n}, ownerState.variant === 'indeterminate' && {\n  // Some default value that looks fine waiting for the animation to kicks in.\n  strokeDasharray: '80px, 200px',\n  strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n}), ({\n  ownerState\n}) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink && css(_t4 || (_t4 = _`\n      animation: ${0} 1.4s ease-in-out infinite;\n    `), circularDashKeyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      disableShrink = false,\n      size = 40,\n      style,\n      thickness = 3.6,\n      value = 0,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other, {\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, for example '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 19c0-3.87 3.13-7 7-7 1.08 0 2.09.25 3 .68V6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h8.08c-.05-.33-.08-.66-.08-1M4 6l8 5 8-5v2l-8 5-8-5zm13.34 16-3.54-3.54 1.41-1.41 2.12 2.12 4.24-4.24L23 16.34z\"\n}), 'MarkEmailRead');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m1 15h-2v-2h2zm0-4h-2V7h2z\"\n}), 'Error');","/**\r\n * Email Service\r\n * \r\n * Service for handling email-related operations in the beta program\r\n */\r\n\r\nimport apiClient from '../../../core/services/apiClient';\r\nimport { getAuthHeaders } from './AuthService';\r\n\r\nconst API_BASE_URL = '/api/emails';\r\n\r\n/**\r\n * Request email verification\r\n * \r\n * Resends the verification email to the current user\r\n * \r\n * @returns {Promise<Object>} Response data\r\n */\r\nconst requestEmailVerification = async () => {\r\n  try {\r\n    const response = await apiClient.post(\r\n      `${API_BASE_URL}/resend-verification`,\r\n      {},\r\n      { headers: getAuthHeaders() }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error requesting email verification:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Verify email with token\r\n * \r\n * @param {string} token - Email verification token\r\n * @returns {Promise<Object>} Response data with token and user info\r\n */\r\nconst verifyEmail = async (token) => {\r\n  try {\r\n    const response = await apiClient.post(`${API_BASE_URL}/verify`, { token });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error verifying email:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Request password reset\r\n * \r\n * @param {string} email - User's email address\r\n * @returns {Promise<Object>} Response data\r\n */\r\nconst requestPasswordReset = async (email) => {\r\n  try {\r\n    const response = await apiClient.post('/auth/request-password-reset', { email });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error requesting password reset:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Reset password with token\r\n * \r\n * @param {string} token - Password reset token\r\n * @param {string} newPassword - New password\r\n * @returns {Promise<Object>} Response data\r\n */\r\nconst resetPassword = async (token, newPassword) => {\r\n  try {\r\n    const response = await apiClient.post('/auth/reset-password', { token, newPassword });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error resetting password:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Send invitation code to email\r\n * \r\n * @param {string} code - Invitation code\r\n * @param {string} email - Recipient email address\r\n * @returns {Promise<Object>} Response data\r\n */\r\nconst sendInviteCode = async (code, email) => {\r\n  try {\r\n    const response = await apiClient.post(\r\n      `${API_BASE_URL}/send-invite`,\r\n      { email, code },\r\n      { headers: getAuthHeaders() }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error sending invitation code:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst emailService = {\r\n  requestEmailVerification,\r\n  verifyEmail,\r\n  requestPasswordReset,\r\n  resetPassword,\r\n  sendInviteCode\r\n};\r\n\r\nexport default emailService; ","import React, { useState, useEffect } from 'react';\r\nimport { useSearchParams, useNavigate } from 'react-router-dom';\r\nimport {\r\n  Container,\r\n  Paper,\r\n  Typography,\r\n  Box,\r\n  TextField,\r\n  Button,\r\n  CircularProgress,\r\n  Alert,\r\n  Link\r\n} from '@mui/material';\r\nimport MarkEmailReadIcon from '@mui/icons-material/MarkEmailRead';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport LoginIcon from '@mui/icons-material/Login';\r\n\r\nimport authService from '../services/AuthService';\r\nimport emailService from '../services/EmailService';\r\n\r\n/**\r\n * Email Verification Page\r\n * \r\n * This page handles two scenarios:\r\n * 1. User clicks verification link from email (with token in URL)\r\n * 2. User visits page directly to request a new verification email\r\n */\r\nconst VerifyEmailPage = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const token = searchParams.get('token');\r\n  const navigate = useNavigate();\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n  const [verifying, setVerifying] = useState(!!token);\r\n  const [verified, setVerified] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [emailSent, setEmailSent] = useState(false);\r\n  const [emailError, setEmailError] = useState('');\r\n  \r\n  // If token is present, verify email on component mount\r\n  useEffect(() => {\r\n    if (token) {\r\n      verifyEmail();\r\n    }\r\n  }, [token]);\r\n  \r\n  // Function to verify email with token\r\n  const verifyEmail = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      // Try to verify with token by logging in\r\n      await authService.loginWithToken(token);\r\n      setVerified(true);\r\n    } catch (err) {\r\n      console.error('Error verifying email:', err);\r\n      \r\n      // Extract error message from response if available\r\n      const errorMessage = err.response?.data?.error || \r\n                          'Unable to verify your email. The link may have expired or is invalid.';\r\n      setError(errorMessage);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Function to request a new verification email\r\n  const requestVerification = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Validate email\r\n    if (!email || !/\\S+@\\S+\\.\\S+/.test(email)) {\r\n      setEmailError('Please enter a valid email address');\r\n      return;\r\n    } else {\r\n      setEmailError('');\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      await emailService.resendVerificationEmail(email);\r\n      setEmailSent(true);\r\n    } catch (err) {\r\n      console.error('Error requesting verification email:', err);\r\n      \r\n      // Don't show error message to prevent email enumeration\r\n      // Just say it was sent anyway for security\r\n      setEmailSent(true);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Navigate to login\r\n  const handleGoToLogin = () => {\r\n    navigate('/login');\r\n  };\r\n  \r\n  // Navigate to beta portal if already verified\r\n  const handleGoToBeta = () => {\r\n    navigate('/beta');\r\n  };\r\n  \r\n  // Render verification result if token was present\r\n  if (verifying) {\r\n    return (\r\n      <Container maxWidth=\"sm\" sx={{ mt: 8, mb: 4 }}>\r\n        <Paper elevation={3} sx={{ p: 4 }}>\r\n          {loading ? (\r\n            <Box sx={{ textAlign: 'center', py: 4 }}>\r\n              <CircularProgress size={60} sx={{ mb: 3 }} />\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                Verifying Your Email\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"text.secondary\">\r\n                Please wait while we verify your email address...\r\n              </Typography>\r\n            </Box>\r\n          ) : verified ? (\r\n            <Box sx={{ textAlign: 'center' }}>\r\n              <CheckCircleIcon color=\"success\" sx={{ fontSize: 60, mb: 2 }} />\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                Email Verified Successfully!\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\r\n                Thank you for verifying your email address. You can now access all beta features.\r\n              </Typography>\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                onClick={handleGoToBeta}\r\n                sx={{ mt: 2 }}\r\n              >\r\n                Go to Beta Portal\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <Box sx={{ textAlign: 'center' }}>\r\n              <ErrorIcon color=\"error\" sx={{ fontSize: 60, mb: 2 }} />\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                Verification Failed\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\r\n                {error || 'We could not verify your email address. The link may have expired or is invalid.'}\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ mb: 3 }}>\r\n                You can request a new verification email below:\r\n              </Typography>\r\n              \r\n              <Box component=\"form\" onSubmit={requestVerification}>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  label=\"Your Email Address\"\r\n                  type=\"email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  error={!!emailError}\r\n                  helperText={emailError}\r\n                />\r\n                \r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={loading}\r\n                  startIcon={loading ? <CircularProgress size={20} /> : <EmailIcon />}\r\n                  sx={{ mt: 2 }}\r\n                >\r\n                  {loading ? 'Sending...' : 'Resend Verification Email'}\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n        </Paper>\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  // Render the request verification email form\r\n  return (\r\n    <Container maxWidth=\"sm\" sx={{ mt: 8, mb: 4 }}>\r\n      <Paper elevation={3} sx={{ p: 4 }}>\r\n        {!emailSent ? (\r\n          <>\r\n            <Box sx={{ textAlign: 'center', mb: 3 }}>\r\n              <MarkEmailReadIcon color=\"primary\" sx={{ fontSize: 60, mb: 2 }} />\r\n              <Typography variant=\"h5\" gutterBottom>\r\n                Verify Your Email\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\r\n                Enter your email address below and we'll send you a verification link.\r\n              </Typography>\r\n            </Box>\r\n            \r\n            <Box component=\"form\" onSubmit={requestVerification}>\r\n              <TextField\r\n                fullWidth\r\n                margin=\"normal\"\r\n                label=\"Your Email Address\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                error={!!emailError}\r\n                helperText={emailError}\r\n              />\r\n              \r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={loading}\r\n                startIcon={loading ? <CircularProgress size={20} /> : <EmailIcon />}\r\n                sx={{ mt: 3, mb: 2 }}\r\n              >\r\n                {loading ? 'Sending...' : 'Send Verification Email'}\r\n              </Button>\r\n            </Box>\r\n          </>\r\n        ) : (\r\n          <Box sx={{ textAlign: 'center' }}>\r\n            <CheckCircleIcon color=\"success\" sx={{ fontSize: 60, mb: 2 }} />\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              Check Your Email\r\n            </Typography>\r\n            <Typography variant=\"body1\" color=\"text.secondary\" paragraph>\r\n              If an account exists with the email you provided, we've sent a verification link.\r\n              Please check your email and follow the instructions to verify your account.\r\n            </Typography>\r\n            <Button \r\n              variant=\"outlined\" \r\n              onClick={() => navigate('/')}\r\n              sx={{ mt: 2, mr: 2 }}\r\n            >\r\n              Return to Home\r\n            </Button>\r\n            <Button \r\n              variant=\"contained\" \r\n              color=\"primary\" \r\n              startIcon={<LoginIcon />}\r\n              onClick={handleGoToLogin}\r\n              sx={{ mt: 2 }}\r\n            >\r\n              Go to Login\r\n            </Button>\r\n          </Box>\r\n        )}\r\n      </Paper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default VerifyEmailPage; "],"names":["_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","_t","_t2","_t3","_t4","_","t","SIZE","circularRotateKeyframe","keyframes","circularDashKeyframe","CircularProgressRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","capitalize","color","_ref","theme","_extends","display","transition","transitions","create","vars","palette","main","_ref2","css","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","_ref3","stroke","strokeDasharray","strokeDashoffset","_ref4","React","inProps","ref","useDefaultProps","className","size","style","thickness","value","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","_jsx","clsx","width","height","role","children","viewBox","cx","cy","r","fill","strokeWidth","API_BASE_URL","requestEmailVerification","async","apiClient","post","headers","getAuthHeaders","data","error","console","verifyEmail","token","requestPasswordReset","email","resetPassword","newPassword","sendInviteCode","code","VerifyEmailPage","searchParams","useSearchParams","get","navigate","useNavigate","loading","setLoading","useState","verifying","setVerifying","verified","setVerified","setError","setEmail","emailSent","setEmailSent","emailError","setEmailError","useEffect","authService","loginWithToken","err","_err$response","_err$response$data","errorMessage","response","requestVerification","e","preventDefault","test","emailService","resendVerificationEmail","handleGoToBeta","Container","maxWidth","sx","mt","mb","Paper","elevation","p","_jsxs","Box","textAlign","py","CircularProgress","Typography","gutterBottom","CheckCircleIcon","fontSize","paragraph","Button","onClick","ErrorIcon","component","onSubmit","TextField","fullWidth","margin","label","type","onChange","target","helperText","disabled","startIcon","EmailIcon","mr","LoginIcon","handleGoToLogin","_Fragment","MarkEmailReadIcon"],"sourceRoot":""}