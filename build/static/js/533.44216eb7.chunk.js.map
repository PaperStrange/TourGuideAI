{"version":3,"file":"static/js/533.44216eb7.chunk.js","mappings":"yZAwBA,MAmWA,EAnWyBA,IAAoB,IAAnB,UAAEC,GAAWD,EAErC,MAAOE,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,CAC3CC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,SAAU,MAILC,EAAcC,IAAmBP,EAAAA,EAAAA,WAAS,IAC1CQ,EAAqBC,IAA0BT,EAAAA,EAAAA,WAAS,IACxDU,EAAQC,IAAaX,EAAAA,EAAAA,UAAS,CAAC,IAC/BY,EAAWC,IAAgBb,EAAAA,EAAAA,UAAS,OACpCc,EAAaC,IAAkBf,EAAAA,EAAAA,UAAS,OACxCgB,EAAcC,IAAmBjB,EAAAA,EAAAA,WAAS,GAG3CkB,EAAuB,CAC3B,CAAEC,GAAI,SAAUC,MAAO,wBAAyBC,KAAOlB,GAAaA,EAASmB,QAAU,GACvF,CAAEH,GAAI,YAAaC,MAAO,gCAAiCC,KAAOlB,GAAa,QAAQkB,KAAKlB,IAC5F,CAAEgB,GAAI,YAAaC,MAAO,gCAAiCC,KAAOlB,GAAa,QAAQkB,KAAKlB,IAC5F,CAAEgB,GAAI,SAAUC,MAAO,sBAAuBC,KAAOlB,GAAa,KAAKkB,KAAKlB,IAC5E,CAAEgB,GAAI,UAAWC,MAAO,iCAAkCC,KAAOlB,GAAa,eAAekB,KAAKlB,KAI9FoB,EAA6BpB,GAC1Be,EAAqBM,KAAIC,IAAG,IAC9BA,EACHC,UAAWD,EAAIJ,KAAKlB,OAKlBwB,EAAqBC,IACzB,MAAM,KAAE3B,EAAI,MAAE4B,GAAUD,EAAEE,OAC1B/B,EAAc,IACTD,EACH,CAACG,GAAO4B,IAINnB,EAAOT,IACTU,EAAU,IACLD,EACH,CAACT,GAAO,OAKRW,GACFC,EAAa,KACf,EAsKF,OACEkB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,UAAU,OAAOC,SA5GHC,UAGnB,GAFAP,EAAEQ,iBA9CiBC,MACnB,MAAMC,EAAY,CAAC,EAGdxC,EAAWG,KAAKsC,SACnBD,EAAUrC,KAAO,oBAIdH,EAAWI,MAEJ,eAAemB,KAAKvB,EAAWI,SACzCoC,EAAUpC,MAAQ,oBAFlBoC,EAAUpC,MAAQ,oBAMfJ,EAAWK,SAGOoB,EAA0BzB,EAAWK,UAClBqC,QAAOf,IAAQA,EAAIC,YACpCJ,OAAS,IAC9BgB,EAAUnC,SAAW,uCALvBmC,EAAUnC,SAAW,uBAwBvB,OAdKL,EAAWM,gBAELN,EAAWK,WAAaL,EAAWM,kBAC5CkC,EAAUlC,gBAAkB,0BAF5BkC,EAAUlC,gBAAkB,+BAMzBN,EAAWO,SAE0B,IAA/BP,EAAWO,SAASiB,SAC7BgB,EAAUjC,SAAW,kCAFrBiC,EAAUjC,SAAW,+BAKvBM,EAAU2B,GAC+B,IAAlCG,OAAOC,KAAKJ,GAAWhB,MAAY,EAOrCe,GAAL,CAIApB,GAAgB,GAChBJ,EAAa,MACbE,EAAe,MAEf,IAIE,UAF0B4B,EAAAA,EAAYC,iBAAiB9C,EAAWO,UAQhE,OALAM,EAAU,IACLD,EACHL,SAAU,sCAEZY,GAAgB,GAKlB,MAAM4B,QAAeF,EAAAA,EAAYG,SAC/BhD,EAAWI,MACXJ,EAAWO,SACXP,EAAWG,KACXH,EAAWK,UAGb,IAAK0C,EAGH,OAFAhC,EAAa,qDACbI,GAAgB,GAIlBF,EAAe,6DAGfgC,YAAW,KACLlD,GACFA,EAAUgD,EACZ,GACC,KAEL,CAAE,MAAOG,GAGP,GAFAC,QAAQD,MAAM,sBAAuBA,GAEjCA,EAAME,UAAYF,EAAME,SAASC,MAAQH,EAAME,SAASC,KAAKH,MAAO,CAEtE,MAAMI,EAAWJ,EAAME,SAASC,KAAKH,MAEf,oBAAlBI,EAASC,KACX1C,EAAU,IACLD,EACHR,MAAO,qCAEkB,wBAAlBkD,EAASC,KAClB1C,EAAU,IACLD,EACHL,SAAU,iCAGZQ,EAAauC,EAASE,SAAW,sBAErC,MACEzC,EAAa,yBAA2BmC,EAAMM,SAAW,iBAE7D,CAAC,QACCrC,GAAgB,EAClB,CAnEA,CAmEA,EAoC8CsC,YAAU,EAAAC,SAAA,CACrD5C,IACC6C,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,SAAS,QAAQC,GAAI,CAAEC,GAAI,GAAIL,SACnC5C,IAIJE,IACC2C,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,SAAS,UAAUC,GAAI,CAAEC,GAAI,GAAIL,SACrC1C,KAILiB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAER,SAAA,EACzBC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,UAChBC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRlE,KAAK,OACLmB,MAAM,YACNgD,WAAS,EACTvC,MAAO/B,EAAWG,KAClBoE,SAAU1C,EACVqB,QAAStC,EAAOT,KAChBqE,WAAY5D,EAAOT,KACnBsE,SAAUvD,EACVwD,UAAQ,OAIZf,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,UAChBC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRlE,KAAK,QACLmB,MAAM,gBACNgD,WAAS,EACTf,KAAK,QACLxB,MAAO/B,EAAWI,MAClBmE,SAAU1C,EACVqB,QAAStC,EAAOR,MAChBoE,WAAY5D,EAAOR,MACnBqE,SAAUvD,EACVwD,UAAQ,OAIZzC,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,SAAA,EAChBC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRlE,KAAK,WACLmB,MAAM,WACNgD,WAAS,EACTf,KAAM/C,EAAe,OAAS,WAC9BuB,MAAO/B,EAAWK,SAClBkE,SAAU1C,EACVqB,QAAStC,EAAOP,SAChBmE,WAAY5D,EAAOP,SACnBoE,SAAUvD,EACVwD,UAAQ,EACRC,WAAY,CACVC,cACEjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAc,CAACC,SAAS,MAAKpB,UAC5BC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CACTC,QA9NqBC,KACrCxE,GAAiBD,EAAa,EA8Nd0E,KAAK,MAAKxB,SAETlD,GAAemD,EAAAA,EAAAA,KAACwB,EAAAA,EAAa,KAAMxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,WA9F9BC,MACjC,IAAKrF,EAAWK,SACd,OAAO,KAGT,MAAMiF,EAAe7D,EAA0BzB,EAAWK,UAE1D,OACE4B,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAEyB,GAAI,EAAGxB,GAAI,GAAIL,SAAA,EACxBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,UAAUC,MAAM,gBAAehC,SAAC,4BAGpDC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAER,SACxB4B,EAAa5D,KAAKC,IACjBgC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuB,GAAI,EAAEjC,UACvBzB,EAAAA,EAAAA,MAAC2D,EAAAA,EAAc,CACb9B,GAAI,CACF4B,MAAO/D,EAAIC,UAAY,eAAiB,iBACxCiE,QAAS,OACTC,WAAY,UACZpC,SAAA,CAED/B,EAAIC,UAAY,SAAM,SAAI,IAAED,EAAIL,UARNK,EAAIN,UAanC,EAyEDgE,OAGH1B,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,UAChBC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRlE,KAAK,kBACLmB,MAAM,mBACNgD,WAAS,EACTf,KAAM7C,EAAsB,OAAS,WACrCqB,MAAO/B,EAAWM,gBAClBiE,SAAU1C,EACVqB,QAAStC,EAAON,gBAChBkE,WAAY5D,EAAON,gBACnBmE,SAAUvD,EACVwD,UAAQ,EACRC,WAAY,CACVC,cACEjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAc,CAACC,SAAS,MAAKpB,UAC5BC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CACTC,QArP4Be,KAC5CpF,GAAwBD,EAAoB,EAqP5BwE,KAAK,MAAKxB,SAEThD,GAAsBiD,EAAAA,EAAAA,KAACwB,EAAAA,EAAa,KAAMxB,EAAAA,EAAAA,KAACyB,EAAAA,EAAU,cAQlEzB,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,UAChBC,EAAAA,EAAAA,KAACqC,EAAAA,EAAO,CAAClC,GAAI,CAAEmC,GAAI,QAGrBtC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,UAChBC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRlE,KAAK,WACLmB,MAAM,mBACNgD,WAAS,EACTvC,MAAO/B,EAAWO,SAClBgE,SAAU1C,EACVqB,QAAStC,EAAOL,SAChBiE,WAAY5D,EAAOL,UAAY,oDAC/BkE,SAAUvD,EACVwD,UAAQ,EACRwB,WAAY,CAAEC,UAAW,QAI7BxC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,UAChBC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACL7C,KAAK,SACLe,WAAS,EACTmB,QAAQ,YACRC,MAAM,UACNjB,SAAUvD,EACV4C,GAAI,CAAEyB,GAAI,GAAI7B,SAEbxC,GAAeyC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAgB,CAACC,KAAM,KAAS,oBAInD,E,4JC9VV,MAmOA,EAnO2BxG,IAA6B,IAA5B,UAAEC,EAAS,QAAEwG,GAASzG,EAChD,MAAO0G,EAAMC,IAAWvG,EAAAA,EAAAA,UAAS,KAC1BwG,EAASC,IAAczG,EAAAA,EAAAA,WAAS,IAChCgD,EAAO0D,IAAY1G,EAAAA,EAAAA,UAAS,OAC5B2G,EAASC,IAAc5G,EAAAA,EAAAA,WAAS,IAChC6G,EAAUC,IAAe9G,EAAAA,EAAAA,WAAS,IAClC+G,EAAiBC,IAAsBhH,EAAAA,EAAAA,UAAS,MAOjDiH,EAAqBC,GAEL,iDACD7F,KAAK6F,GAyF1B,OACEnF,EAAAA,EAAAA,MAACoF,EAAAA,EAAI,CACHvD,GAAI,CACFwD,SAAU,IACVC,GAAI,OACJhC,GAAI,EACJiC,UAAW,EACXC,aAAc,GACd/D,SAAA,EAEFzB,EAAAA,EAAAA,MAACyF,EAAAA,EAAW,CAAAhE,SAAA,EACVC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKtD,UAAU,KAAKwF,cAAY,EAACC,MAAM,SAAQlE,SAAC,4BAIpEC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAiBmC,WAAS,EAACD,MAAM,SAAQlE,SAAC,oFAI3ER,IACCS,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJC,SAAS,QACTC,GAAI,CAAEC,GAAI,GACV+D,QACEnE,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CACT,aAAW,QACXW,MAAM,UACNY,KAAK,QACLtB,QAASA,IAAM4B,EAAS,MAAMlD,UAE9BC,EAAAA,EAAAA,KAACoE,EAAAA,EAAS,CAACC,SAAS,cAEvBtE,SAEAR,IAIJ2D,IACClD,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJC,SAAS,UACTC,GAAI,CAAEC,GAAI,GACV+D,QACEnE,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CACT,aAAW,QACXW,MAAM,UACNY,KAAK,QACLtB,QAASA,IAAM8B,GAAW,GAAOpD,UAEjCC,EAAAA,EAAAA,KAACoE,EAAAA,EAAS,CAACC,SAAS,cAEvBtE,SACF,mDAKHzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,UAAU,OAAOC,SA/GPC,UAGnB,GAFA4F,EAAM3F,iBAED6E,EAAkBX,GAAvB,CAKAG,GAAW,GACXC,EAAS,MAET,IAEE,MAAMxD,QAAiB8E,EAAAA,EAAWC,KAAK,oBAAqB,CAAE3B,SAE9DG,GAAW,GAEPvD,EAASgF,OACXtB,GAAW,GACXI,EAAmB,SAGfnH,GACFkD,YAAW,KACTlD,EAAUqD,EAASiF,SAAS,GAC3B,OAGLzB,EAASxD,EAASI,SAAW,2BAC7B0D,EAAmB,WACfX,GAASA,EAAQnD,EAASI,SAElC,CAAE,MAAO8E,GACP3B,GAAW,GACXC,EAAS0B,EAAI9E,SAAW,8CACxB0D,EAAmB,WACfX,GAASA,EAAQ+B,EAAI9E,QAC3B,CA/BA,MAFEoD,EAAS,oDAiCX,EA0EkDnD,YAAU,EAAAC,SAAA,EACtDC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRC,WAAS,EACThD,MAAM,mBACNmE,QAAQ,WACR1D,MAAOyE,EACPjC,SAlJgB0D,IACxB,MAAMM,EAAUN,EAAMjG,OAAOD,MAC7B0E,EAAQ8B,GACR3B,EAAS,MAGc,IAAnB2B,EAAQ/G,QAAiB+G,EAAQC,SAAS,KAEhB,IAAnBD,EAAQ/G,SAA6C,IAA7B+G,EAAQE,QAAQ,IAAK,IACtDhC,EAAQ8B,EAAU,KAFlB9B,EAAQ8B,EAAU,KAMhBA,EAAQ/G,OAAS,EACf2F,EAAkBoB,GACpBrB,EAAmB,SACVqB,EAAQ/G,QAAU,GAC3B0F,EAAmB,WAEnBA,EAAmB,cAGrBA,EAAmB,KACrB,EA4HQwB,OAAO,SACPC,YAAY,iBACZlE,SAAUiC,GAAWG,EACrB3D,MAA2B,YAApB+D,EACPzC,WAAgC,YAApByC,EAAgC,sBAAwB,GACpEtC,WAAY,CACVC,cACEjB,EAAAA,EAAAA,KAACkB,EAAAA,EAAc,CAACC,SAAS,MAAKpB,SAjFlB,UAApBuD,GACKtD,EAAAA,EAAAA,KAACiF,EAAAA,EAAe,CAAClD,MAAM,YACD,YAApBuB,GACFtD,EAAAA,EAAAA,KAACkF,EAAAA,EAAS,CAACnD,MAAM,UACK,eAApBuB,GAAoCT,EAAKhF,OAAS,GACpDmC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAgB,CAACC,KAAM,KAE1B,QA+ECxC,GAAI,CAAEC,GAAI,MAGZJ,EAAAA,EAAAA,KAACmF,EAAAA,EAAQ,CAACC,GAAIhC,EAASrD,UACrBzB,EAAAA,EAAAA,MAAC2B,EAAAA,EAAK,CAACC,SAAS,OAAOC,GAAI,CAAEC,GAAI,GAAIL,SAAA,EACnCC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAO/B,SAAC,wKAI5BC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQ3B,GAAI,CAAEyB,GAAI,GAAI7B,SAAC,yGAM/CzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC2D,QAAQ,OAAOmD,eAAe,gBAAgBlD,WAAW,SAAQpC,SAAA,EACpEC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACL6C,WAAWtF,EAAAA,EAAAA,KAACuF,EAAAA,EAAQ,IACpBlE,QAASA,IAAMgC,GAAaD,GAC5BrB,MAAM,YAAWhC,SAEhBqD,EAAW,YAAc,gBAG5BpD,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLX,QAAQ,YACRC,MAAM,UACNnC,KAAK,SACLkB,SAAUiC,GAAWG,GAA+B,UAApBI,EAChCnD,GAAI,CAAEqF,SAAU,KAAMzF,SAErBgD,GAAU/C,EAAAA,EAAAA,KAAC0C,EAAAA,EAAgB,CAACC,KAAM,KAAS,0BAMpD3C,EAAAA,EAAAA,KAACyF,EAAAA,EAAW,CAACtF,GAAI,CAAEkF,eAAgB,SAAUK,GAAI,GAAI3F,UACnDzB,EAAAA,EAAAA,MAACuD,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAgBhC,SAAA,CAAC,uBAC9BC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CAACV,MAAM,YAAYY,KAAK,QAAO5C,SAAC,0BAGzD,E,qCC9NX,MAgcA,EAhcyB5D,IAAuC,IAADwJ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAArC,YAAEC,EAAc,CAAC,EAAC,WAAEC,GAAY/J,EACxD,MAAOgK,EAAUC,IAAe7J,EAAAA,EAAAA,UAAS,CACvCC,KAAMyJ,EAAYzJ,MAAQ,GAC1BC,MAAOwJ,EAAYxJ,OAAS,GAC5B4J,SAAUJ,EAAYI,UAAY,GAClCC,eAAgBL,EAAYK,gBAAkB,QAGzCC,EAASC,IAAcjK,EAAAA,EAAAA,UAAS,OAChCkK,EAAYC,IAAiBnK,EAAAA,EAAAA,UAAS,CAC3C8J,UAAU,EACV5J,OAAO,KAEFkK,EAAYC,IAAiBrK,EAAAA,EAAAA,UAAS,CAC3CC,KAAM,KACNC,MAAO,KACP4J,SAAU,QAELtD,EAASC,IAAczG,EAAAA,EAAAA,WAAS,IAChCgD,EAAO0D,IAAY1G,EAAAA,EAAAA,UAAS,OAGnCsK,EAAAA,EAAAA,YAAU,KACR,GAAIV,EAASG,gBAAqD,kBAA5BH,EAASG,eAA6B,CAC1E,MAAMQ,EAAS,IAAIC,WACnBD,EAAOE,UAAY,KACjBR,EAAWM,EAAO1H,OAAO,EAE3B0H,EAAOG,cAAcd,EAASG,eAChC,MAAWH,EAASG,gBAAqD,kBAA5BH,EAASG,eAEpDE,EAAWL,EAASG,gBAEpBE,EAAW,KACb,GACC,CAACL,EAASG,iBAKb,MAAMY,EAAgB/I,IACpB,MAAM,KAAE3B,EAAI,MAAE4B,GAAUD,EAAEE,OAC1B+H,GAAYe,IAAI,IACXA,EACH,CAAC3K,GAAO4B,MAINuI,EAAWnK,IACboK,GAAcO,IAAI,IACbA,EACH,CAAC3K,GAAO,SAKC,UAATA,EACF4K,EAAchJ,GAAO,GACH,aAAT5B,GACT6K,EAAiBjJ,GAAO,EAC1B,EAyCIgJ,EAAgB1I,eAAOjC,GAAgC,IAAzB6K,IAAYC,UAAA1J,OAAA,QAAA2J,IAAAD,UAAA,KAAAA,UAAA,GAG9C,IADmB,mDACH3J,KAAKnB,GAKnB,OAJAmK,GAAcO,IAAI,IACbA,EACH1K,MAAO,CAAEgI,OAAO,EAAO5E,QAAS,2CAE3B,EAGLyH,GACFZ,GAAcS,IAAI,IAAUA,EAAM1K,OAAO,MAG3C,IAEE,MAAMgD,QAAiB8E,EAAAA,EAAWkD,IAAI,8BAA8BC,mBAAmBjL,MAIvF,OAFAiK,GAAcS,IAAI,IAAUA,EAAM1K,OAAO,MAErCgD,EAASkI,WACXf,GAAcO,IAAI,IACbA,EACH1K,MAAO,CAAEgI,OAAO,EAAM5E,QAAS,2BAE1B,IAEP+G,GAAcO,IAAI,IACbA,EACH1K,MAAO,CAAEgI,OAAO,EAAO5E,QAAS,gCAE3B,EAEX,CAAE,MAAO8E,GAMP,OALA+B,GAAcS,IAAI,IAAUA,EAAM1K,OAAO,MACzCmK,GAAcO,IAAI,IACbA,EACH1K,MAAO,CAAEgI,OAAO,EAAO5E,QAAS,iCAE3B,CACT,CACF,EAKMwH,EAAmB3I,eAAO2H,GAAmC,IAAzBiB,IAAYC,UAAA1J,OAAA,QAAA2J,IAAAD,UAAA,KAAAA,UAAA,GAGpD,IADsB,uBACH3J,KAAKyI,GAQtB,OAPAO,GAAcO,IAAI,IACbA,EACHd,SAAU,CACR5B,OAAO,EACP5E,QAAS,4FAGN,EAGLyH,GACFZ,GAAcS,IAAI,IAAUA,EAAMd,UAAU,MAG9C,IAEE,MAAM5G,QAAiB8E,EAAAA,EAAWkD,IAAI,oCAAoCC,mBAAmBrB,MAI7F,OAFAK,GAAcS,IAAI,IAAUA,EAAMd,UAAU,MAExC5G,EAASkI,WACXf,GAAcO,IAAI,IACbA,EACHd,SAAU,CAAE5B,OAAO,EAAM5E,QAAS,8BAE7B,IAEP+G,GAAcO,IAAI,IACbA,EACHd,SAAU,CAAE5B,OAAO,EAAO5E,QAAS,kCAE9B,EAEX,CAAE,MAAO8E,GAMP,OALA+B,GAAcS,IAAI,IAAUA,EAAMd,UAAU,MAC5CO,GAAcO,IAAI,IACbA,EACHd,SAAU,CAAE5B,OAAO,EAAO5E,QAAS,oCAE9B,CACT,CACF,EAwBMjB,EAAeF,UACnB,MAAMkJ,IApBcpL,EAoBW2J,EAAS3J,OAnB3BA,EAAKsC,OAAOjB,OAAS,GAChC+I,GAAcO,IAAI,IACbA,EACH3K,KAAM,CAAEiI,OAAO,EAAO5E,QAAS,sDAE1B,IAGT+G,GAAcO,IAAI,IACbA,EACH3K,KAAM,CAAEiI,OAAO,EAAM5E,QAAS,WAEzB,GAbarD,MAqBpB,MAAMqL,QAAmBT,EAAcjB,EAAS1J,OAC1CqL,QAAsBT,EAAiBlB,EAASE,UAEtD,OAAOuB,GAAaC,GAAcC,CAAa,EAyC3CC,EAAoBC,IACxB,IAAKrB,EAAWqB,GAAY,OAAO,KAEnC,MAAM,MAAEvD,EAAK,QAAE5E,GAAY8G,EAAWqB,GAEtC,OAAIvD,GAEAzE,EAAAA,EAAAA,KAACkB,EAAAA,EAAc,CAACC,SAAS,MAAKpB,UAC5BC,EAAAA,EAAAA,KAACiF,EAAAA,EAAe,CAAClD,MAAM,eAKzB/B,EAAAA,EAAAA,KAACkB,EAAAA,EAAc,CAACC,SAAS,MAAKpB,UAC5BC,EAAAA,EAAAA,KAACkF,EAAAA,EAAS,CAACnD,MAAM,WAGvB,EAGF,OACE/B,EAAAA,EAAAA,KAAC0D,EAAAA,EAAI,CAACvD,GAAI,CAAEwD,SAAU,IAAKC,GAAI,OAAQC,UAAW,GAAI9D,UACpDzB,EAAAA,EAAAA,MAACyF,EAAAA,EAAW,CAAAhE,SAAA,EACVC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKtD,UAAU,KAAKwF,cAAY,EAACC,MAAM,SAAQlE,SAAC,yBAIpEC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAiBmC,WAAS,EAACD,MAAM,SAAQlE,SAAC,0DAI3ER,IACCS,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJC,SAAS,QACTC,GAAI,CAAEC,GAAI,GACV+D,QACEnE,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CACT,aAAW,QACXW,MAAM,UACNY,KAAK,QACLtB,QAASA,IAAM4B,EAAS,MAAMlD,UAE9BC,EAAAA,EAAAA,KAACiI,EAAAA,EAAS,CAAC5D,SAAS,cAEvBtE,SAEAR,KAILjB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,UAAU,OAAOC,SArFPC,UACnBP,EAAEQ,iBAEFqE,GAAW,GACXC,EAAS,MAIT,UAFsBrE,IAKpB,OAFAoE,GAAW,QACXC,EAAS,sDAIX,IAEMkD,EAASG,gBAAqD,kBAA5BH,EAASG,iBAG7C9G,QAAQ0I,IAAI,gCAEZ/B,EAASG,eAAiB6B,IAAIC,gBAAgBjC,EAASG,iBAIzDJ,EAAWC,EACb,CAAE,MAAOxB,GACP1B,EAAS0B,EAAI9E,SAAW,6CACxBmD,GAAW,EACb,GAwDkDlD,YAAU,EAAAC,SAAA,EACtDzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAER,SAAA,EAEzBC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIyB,QAAQ,OAAOmD,eAAe,SAAQtF,UACvDzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC8J,UAAU,SAAQtI,SAAA,EACrBC,EAAAA,EAAAA,KAACsI,EAAAA,EAAM,CACLC,IAAKhC,EACLpG,GAAI,CACFqI,MAAO,IACPC,OAAQ,IACRrI,GAAI,EACJsI,QAAS,gBACT3I,UAEAwG,IAAYJ,EAAS3J,KAAO2J,EAAS3J,KAAKmM,OAAO,GAAGC,cAAgB,QAGxEtK,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQ2G,IAAK,EAAGxD,eAAgB,UAAWtF,SAAA,EAC7DzB,EAAAA,EAAAA,MAACmE,EAAAA,EAAM,CACLX,QAAQ,WACRtD,UAAU,QACV8G,WAAWtF,EAAAA,EAAAA,KAAC8I,EAAAA,EAAe,IAAI/I,SAAA,CAE9BwG,EAAU,eAAiB,gBAC5BvG,EAAAA,EAAAA,KAAA,SACEJ,KAAK,OACLmJ,QAAM,EACNC,OAAO,UACPpI,SAnRgBzC,IAClC,MAAM8K,EAAO9K,EAAEE,OAAO6K,MAAM,GAC5B,GAAID,EAAM,CACR,GAAIA,EAAKtG,KAAO,QAEd,YADAM,EAAS,yCAIX,IAAKgG,EAAKrJ,KAAKuJ,WAAW,UAExB,YADAlG,EAAS,kCAIXmD,GAAYe,IAAI,IACXA,EACHb,eAAgB2C,MAElBhG,EAAS,KACX,QAqQesD,IACCvG,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLX,QAAQ,WACRC,MAAM,QACNV,QAnQe+H,KACjChD,GAAYe,IAAI,IACXA,EACHb,eAAgB,SAElBE,EAAW,KAAK,EA8PsCzG,SACrC,eAMLC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,UAAUC,MAAM,iBAAiBG,QAAQ,QAAQN,GAAI,EAAE7B,SAAC,gDAOhFC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,UAChBC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRC,WAAS,EACThD,MAAM,YACNnB,KAAK,OACL4B,MAAO+H,EAAS3J,KAChBoE,SAAUsG,EACVpF,QAAQ,WACRkD,YAAY,uBACZnE,YAA2B,QAAf8E,EAAAgB,EAAWnK,YAAI,IAAAmJ,OAAA,EAAfA,EAAiB9F,UAAW,2DACxCN,OAAkC,KAAZ,QAAfqG,EAAAe,EAAWnK,YAAI,IAAAoJ,OAAA,EAAfA,EAAiBnB,OACxBzD,WAAY,CACVC,aAAc8G,EAAiB,SAEjChH,UAAQ,OAKZf,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuB,GAAI,EAAEjC,UACvBC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRC,WAAS,EACThD,MAAM,QACNnB,KAAK,QACLoD,KAAK,QACLxB,MAAO+H,EAAS1J,MAChBmE,SAAUsG,EACVpF,QAAQ,WACRkD,YAAY,iBACZnE,YAA4B,QAAhBgF,EAAAc,EAAWlK,aAAK,IAAAoJ,OAAA,EAAhBA,EAAkBhG,UAAW,wCACzCN,OAAmC,KAAZ,QAAhBuG,EAAAa,EAAWlK,aAAK,IAAAqJ,OAAA,EAAhBA,EAAkBrB,OACzBzD,WAAY,CACVC,aAAcwF,EAAWhK,OACvBuD,EAAAA,EAAAA,KAACkB,EAAAA,EAAc,CAACC,SAAS,MAAKpB,UAC5BC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAgB,CAACC,KAAM,OAExBoF,EAAiB,UAEvBhH,UAAQ,OAKZf,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuB,GAAI,EAAEjC,UACvBC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRC,WAAS,EACThD,MAAM,WACNnB,KAAK,WACL4B,MAAO+H,EAASE,SAChBzF,SAAUsG,EACVpF,QAAQ,WACRkD,YAAY,WACZnE,YAA+B,QAAnBkF,EAAAY,EAAWN,gBAAQ,IAAAN,OAAA,EAAnBA,EAAqBlG,UAAW,6CAC5CN,OAAsC,KAAZ,QAAnByG,EAAAW,EAAWN,gBAAQ,IAAAL,OAAA,EAAnBA,EAAqBvB,OAC5BzD,WAAY,CACVqI,gBAAgBrJ,EAAAA,EAAAA,KAACkB,EAAAA,EAAc,CAACC,SAAS,QAAOpB,SAAC,MACjDkB,aAAcwF,EAAWJ,UACvBrG,EAAAA,EAAAA,KAACkB,EAAAA,EAAc,CAACC,SAAS,MAAKpB,UAC5BC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAgB,CAACC,KAAM,OAExBoF,EAAiB,aAEvBhH,UAAQ,UAKdf,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC4B,GAAI,CAAEyB,GAAI,EAAGM,QAAS,OAAQmD,eAAgB,YAAatF,UAC9DC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACL7C,KAAK,SACLkC,QAAQ,YACRC,MAAM,UACNY,KAAK,QACL7B,SAAUiC,EACV5C,GAAI,CAAEqF,SAAU,KAAMzF,SAErBgD,GAAU/C,EAAAA,EAAAA,KAAC0C,EAAAA,EAAgB,CAACC,KAAM,KAAS,0BAK/C,E,6ICpbX,MA8SA,GA9SyBxG,IAA8C,IAA7C,mBAAEmN,EAAqB,CAAC,EAAC,WAAEpD,GAAY/J,EAE/D,MAAMoN,EAAqB,CACzBC,cAAe,CACb/M,OAAO,EACPgN,MAAM,EACNC,OAAQ,SAEVC,QAAS,CACPC,aAAa,EACbC,qBAAqB,EACrBC,iBAAiB,GAEnBC,SAAU,CACRC,aAAa,EACbC,cAAc,EACdC,sBAAsB,KAKnBC,EAAaC,IAAkB7N,EAAAA,EAAAA,UAAS,IAC1CgN,KACAD,EACHE,cAAe,IACVD,EAAmBC,iBAClBF,EAAmBE,eAAiB,CAAC,GAE3CG,QAAS,IACJJ,EAAmBI,WAClBL,EAAmBK,SAAW,CAAC,GAErCI,SAAU,IACLR,EAAmBQ,YAClBT,EAAmBS,UAAY,CAAC,KASlCM,EAAqBA,CAACC,EAAS9N,IAAU8H,IAC7C8F,EAAe,IACVD,EACH,CAACG,GAAU,IACNH,EAAYG,GACf,CAAC9N,GAAO8H,EAAMjG,OAAOkM,UAEvB,EA0BJ,OACEvK,EAAAA,EAAAA,KAAC0D,EAAAA,EAAI,CAACvD,GAAI,CAAEwD,SAAU,IAAKC,GAAI,OAAQC,UAAW,GAAI9D,UACpDzB,EAAAA,EAAAA,MAACyF,EAAAA,EAAW,CAAAhE,SAAA,EACVC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKtD,UAAU,KAAKwF,cAAY,EAACC,MAAM,SAAQlE,SAAC,0BAIpEC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAiBmC,WAAS,EAACD,MAAM,SAAQlE,SAAC,yGAI5EzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,UAAU,OAAOC,SAhBN6F,IACpBA,EAAM3F,iBACNuH,EAAWiE,EAAY,EAc2BhK,GAAI,CAAEyB,GAAI,GAAI7B,SAAA,EAC1DzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAER,SAAA,EAEzBC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,UAChBzB,EAAAA,EAAAA,MAACkM,EAAAA,EAAK,CAAC1I,QAAQ,WAAW3B,GAAI,CAAEsK,EAAG,EAAG3G,aAAc,GAAI/D,SAAA,EACtDzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC2D,QAAQ,OAAOC,WAAW,SAAS/B,GAAI,EAAEL,SAAA,EAC5CC,EAAAA,EAAAA,KAAC0K,GAAAA,EAAiB,CAAC3I,MAAM,UAAU5B,GAAI,CAAEwK,GAAI,MAC7C3K,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAI/B,SAAC,iCAG3BzB,EAAAA,EAAAA,MAACsM,EAAAA,EAAS,CAAA7K,SAAA,EACRC,EAAAA,EAAAA,KAAC6K,EAAAA,EAAgB,CACfC,SACE9K,EAAAA,EAAAA,KAAC+K,EAAAA,EAAM,CACLR,QAASJ,EAAYX,cAAc/M,MACnCmE,SAAUyJ,EAAmB,gBAAiB,SAC9CtI,MAAM,YAGVpE,MAAM,yBAERqC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,UAAUC,MAAM,iBAAiB5B,GAAI,CAAE6K,GAAI,EAAGpJ,IAAK,EAAGxB,GAAI,EAAG8B,QAAS,SAAUnC,SAAC,uFAIrGC,EAAAA,EAAAA,KAAC6K,EAAAA,EAAgB,CACfC,SACE9K,EAAAA,EAAAA,KAAC+K,EAAAA,EAAM,CACLR,QAASJ,EAAYX,cAAcC,KACnC7I,SAAUyJ,EAAmB,gBAAiB,QAC9CtI,MAAM,YAGVpE,MAAM,wBAERqC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,UAAUC,MAAM,iBAAiB5B,GAAI,CAAE6K,GAAI,EAAGpJ,IAAK,EAAGxB,GAAI,EAAG8B,QAAS,SAAUnC,SAAC,oEAIrGC,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAACqD,GAAI,EAAE7B,UACTzB,EAAAA,EAAAA,MAAC2M,EAAAA,EAAW,CAACzM,UAAU,WAAUuB,SAAA,EAC/BC,EAAAA,EAAAA,KAACkL,EAAAA,EAAS,CAAC1M,UAAU,SAAQuB,SAAC,sBAC9BzB,EAAAA,EAAAA,MAAC6M,EAAAA,EAAU,CACT/M,MAAO+L,EAAYX,cAAcE,OACjC9I,UAzEK0J,EAyEuB,gBAzEd9N,EAyE+B,SAzErB8H,IAC5C8F,EAAe,IACVD,EACH,CAACG,GAAU,IACNH,EAAYG,GACf,CAAC9N,GAAO8H,EAAMjG,OAAOD,QAEvB,GAmEkBgN,KAAG,EAAArL,SAAA,EAEHC,EAAAA,EAAAA,KAAC6K,EAAAA,EAAgB,CAACzM,MAAM,QAAQ0M,SAAS9K,EAAAA,EAAAA,KAACqL,EAAAA,EAAK,IAAK1N,MAAM,WAC1DqC,EAAAA,EAAAA,KAAC6K,EAAAA,EAAgB,CAACzM,MAAM,SAAS0M,SAAS9K,EAAAA,EAAAA,KAACqL,EAAAA,EAAK,IAAK1N,MAAM,YAC3DqC,EAAAA,EAAAA,KAAC6K,EAAAA,EAAgB,CAACzM,MAAM,QAAQ0M,SAAS9K,EAAAA,EAAAA,KAACqL,EAAAA,EAAK,IAAK1N,MAAM,2BAStEqC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,UAChBzB,EAAAA,EAAAA,MAACkM,EAAAA,EAAK,CAAC1I,QAAQ,WAAW3B,GAAI,CAAEsK,EAAG,EAAG3G,aAAc,GAAI/D,SAAA,EACtDzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC2D,QAAQ,OAAOC,WAAW,SAAS/B,GAAI,EAAEL,SAAA,EAC5CC,EAAAA,EAAAA,KAACsL,GAAAA,EAAY,CAACvJ,MAAM,UAAU5B,GAAI,CAAEwK,GAAI,MACxC3K,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAI/B,SAAC,4BAG3BC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,SAAS,OAAOC,GAAI,CAAEC,GAAI,GAAIL,SAAC,wIAKtCzB,EAAAA,EAAAA,MAACsM,EAAAA,EAAS,CAAA7K,SAAA,EACRC,EAAAA,EAAAA,KAAC6K,EAAAA,EAAgB,CACfC,SACE9K,EAAAA,EAAAA,KAAC+K,EAAAA,EAAM,CACLR,QAASJ,EAAYR,QAAQC,YAC7BhJ,SAAUyJ,EAAmB,UAAW,eACxCtI,MAAM,YAGVpE,OACEW,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC2D,QAAQ,OAAOC,WAAW,SAAQpC,SAAA,CAAC,sBAEtCC,EAAAA,EAAAA,KAACuL,GAAAA,EAAO,CAACC,MAAM,wIAAuIzL,UACpJC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAACuB,KAAK,QAAO5C,UACtBC,EAAAA,EAAAA,KAACyL,GAAAA,EAAQ,CAACpH,SAAS,oBAO7BrE,EAAAA,EAAAA,KAAC6K,EAAAA,EAAgB,CACfC,SACE9K,EAAAA,EAAAA,KAAC+K,EAAAA,EAAM,CACLR,QAASJ,EAAYR,QAAQE,oBAC7BjJ,SAAUyJ,EAAmB,UAAW,uBACxCtI,MAAM,YAGVpE,OACEW,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC2D,QAAQ,OAAOC,WAAW,SAAQpC,SAAA,CAAC,yBAEtCC,EAAAA,EAAAA,KAACuL,GAAAA,EAAO,CAACC,MAAM,4EAA2EzL,UACxFC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAACuB,KAAK,QAAO5C,UACtBC,EAAAA,EAAAA,KAACyL,GAAAA,EAAQ,CAACpH,SAAS,oBAO7BrE,EAAAA,EAAAA,KAAC6K,EAAAA,EAAgB,CACfC,SACE9K,EAAAA,EAAAA,KAAC+K,EAAAA,EAAM,CACLR,QAASJ,EAAYR,QAAQG,gBAC7BlJ,SAAUyJ,EAAmB,UAAW,mBACxCtI,MAAM,YAGVpE,OACEW,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC2D,QAAQ,OAAOC,WAAW,SAAQpC,SAAA,CAAC,oBAEtCC,EAAAA,EAAAA,KAACuL,GAAAA,EAAO,CAACC,MAAM,+FAA8FzL,UAC3GC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAACuB,KAAK,QAAO5C,UACtBC,EAAAA,EAAAA,KAACyL,GAAAA,EAAQ,CAACpH,SAAS,4BAWnCrE,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,UAChBzB,EAAAA,EAAAA,MAACkM,EAAAA,EAAK,CAAC1I,QAAQ,WAAW3B,GAAI,CAAEsK,EAAG,EAAG3G,aAAc,GAAI/D,SAAA,EACtDzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC2D,QAAQ,OAAOC,WAAW,SAAS/B,GAAI,EAAEL,SAAA,EAC5CC,EAAAA,EAAAA,KAAC0L,GAAAA,EAAQ,CAAC3J,MAAM,UAAU5B,GAAI,CAAEwK,GAAI,MACpC3K,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAI/B,SAAC,4BAG3BzB,EAAAA,EAAAA,MAACsM,EAAAA,EAAS,CAAA7K,SAAA,EACRC,EAAAA,EAAAA,KAAC6K,EAAAA,EAAgB,CACfC,SACE9K,EAAAA,EAAAA,KAAC+K,EAAAA,EAAM,CACLR,QAASJ,EAAYJ,SAASC,YAC9BpJ,SAAUyJ,EAAmB,WAAY,eACzCtI,MAAM,YAGVpE,MAAM,2BAERqC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,UAAUC,MAAM,iBAAiB5B,GAAI,CAAE6K,GAAI,EAAGpJ,IAAK,EAAGxB,GAAI,EAAG8B,QAAS,SAAUnC,SAAC,sEAIrGC,EAAAA,EAAAA,KAAC6K,EAAAA,EAAgB,CACfC,SACE9K,EAAAA,EAAAA,KAAC+K,EAAAA,EAAM,CACLR,QAASJ,EAAYJ,SAASE,aAC9BrJ,SAAUyJ,EAAmB,WAAY,gBACzCtI,MAAM,YAGVpE,MAAM,mBAERqC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,UAAUC,MAAM,iBAAiB5B,GAAI,CAAE6K,GAAI,EAAGpJ,IAAK,EAAGxB,GAAI,EAAG8B,QAAS,SAAUnC,SAAC,kEAIrGC,EAAAA,EAAAA,KAAC6K,EAAAA,EAAgB,CACfC,SACE9K,EAAAA,EAAAA,KAAC+K,EAAAA,EAAM,CACLR,QAASJ,EAAYJ,SAASG,qBAC9BtJ,SAAUyJ,EAAmB,WAAY,wBACzCtI,MAAM,YAGVpE,OACEW,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC2D,QAAQ,OAAOC,WAAW,SAAQpC,SAAA,CAAC,yBAEtCC,EAAAA,EAAAA,KAACuL,GAAAA,EAAO,CAACC,MAAM,+EAA8EzL,UAC3FC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAACuB,KAAK,QAAO5C,UACtBC,EAAAA,EAAAA,KAACyL,GAAAA,EAAQ,CAACpH,SAAS,QAAQtC,MAAM,sBAM3C/B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,UAAUC,MAAM,iBAAiB5B,GAAI,CAAE6K,GAAI,EAAGpJ,IAAK,EAAGxB,GAAI,EAAG8B,QAAS,SAAUnC,SAAC,kFAQ7GC,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC4B,GAAI,CAAEyB,GAAI,EAAGM,QAAS,OAAQmD,eAAgB,YAAatF,UAC9DC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACL7C,KAAK,SACLkC,QAAQ,YACRC,MAAM,UACNY,KAAK,QACLxC,GAAI,CAAEqF,SAAU,KAAMzF,SACvB,+BA1Oe4L,IAACrB,EAAS9N,CAgP3B,E,4GChTX,MA+KA,GA/KsBL,IAA+C,IAA9C,SAAEyP,EAAQ,WAAE1F,EAAU,QAAEnD,EAAO,MAAExD,GAAOpD,EAE7D,MAAM0P,EAAc,CAClB,CACEC,MAAM9L,EAAAA,EAAAA,KAAC+L,GAAAA,EAAQ,CAAChK,MAAM,YACtByJ,MAAO,kBACPQ,YAAa,sFAEf,CACEF,MAAM9L,EAAAA,EAAAA,KAACiM,GAAAA,EAAO,CAAClK,MAAM,YACrByJ,MAAO,mBACPQ,YAAa,8EAEf,CACEF,MAAM9L,EAAAA,EAAAA,KAACkM,GAAAA,EAAW,CAACnK,MAAM,YACzByJ,MAAO,yBACPQ,YAAa,oFAEf,CACEF,MAAM9L,EAAAA,EAAAA,KAACmM,GAAAA,EAAY,CAACpK,MAAM,YAC1ByJ,MAAO,gBACPQ,YAAa,gFAKXI,EAAY,CAChB,2DACA,uDACA,8CACA,6CAYF,OACEpM,EAAAA,EAAAA,KAAC0D,EAAAA,EAAI,CAACvD,GAAI,CAAEwD,SAAU,IAAKC,GAAI,OAAQC,UAAW,GAAI9D,UACpDzB,EAAAA,EAAAA,MAACyF,EAAAA,EAAW,CAAAhE,SAAA,EACVzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC8J,UAAU,SAASjI,GAAI,EAAEL,SAAA,EAC5BzB,EAAAA,EAAAA,MAACuD,EAAAA,EAAU,CAACC,QAAQ,KAAKtD,UAAU,KAAKwF,cAAY,EAAAjE,SAAA,CAAC,gCACrB6L,GAAY,WAAW,QAGvD5L,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAgBhC,SAAC,sHAKpDR,IACCS,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,SAAS,QAAQC,GAAI,CAAEC,GAAI,GAAIL,SACnCR,KAILjB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAER,SAAA,EAEzBzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,SAAA,EAChBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAC7D,GAAI,CAAE6K,GAAI,GAAIjL,SAAC,6BAIrDC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAER,SACxB8L,EAAY9N,KAAI,CAACsO,EAASC,KACzBtM,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuB,GAAI,EAAEjC,UACvBzB,EAAAA,EAAAA,MAACkM,EAAAA,EAAK,CACJ+B,UAAW,EACXpM,GAAI,CACFsK,EAAG,EACHhC,OAAQ,OACR3E,aAAc,EACd0I,WAAY,kCACZ,UAAW,CACTC,UAAW,mBACX5I,UAAW,IAEb9D,SAAA,EAEFzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC2D,QAAQ,OAAOC,WAAW,SAAS/B,GAAI,EAAEL,SAAA,EAC5CC,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAACoM,GAAI,EAAE5K,SAAEsM,EAAQP,QACrB9L,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,YAAY4K,WAAW,OAAM3M,SAC9CsM,EAAQb,YAGbxL,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAgBhC,SAC/CsM,EAAQL,kBArBgBM,WA8BrChO,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,SAAA,EAChBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAC7D,GAAI,CAAE6K,GAAI,GAAIjL,SAAC,qBAIrDC,EAAAA,EAAAA,KAACwK,EAAAA,EAAK,CACJ+B,UAAW,EACXpM,GAAI,CACFsK,EAAG,EACH3G,aAAc,GACd/D,UAEFC,EAAAA,EAAAA,KAAC2M,GAAAA,EAAI,CAAA5M,SACFqM,EAAUrO,KAAI,CAAC6O,EAAMN,KACpBhO,EAAAA,EAAAA,MAACuO,EAAAA,SAAc,CAAA9M,SAAA,EACbzB,EAAAA,EAAAA,MAACwO,GAAAA,GAAQ,CAAA/M,SAAA,EACPC,EAAAA,EAAAA,KAAC+M,GAAAA,EAAY,CAAAhN,UACXC,EAAAA,EAAAA,KAACiF,EAAAA,EAAe,CAAClD,MAAM,eAEzB/B,EAAAA,EAAAA,KAACgN,GAAAA,EAAY,CAACC,QAASL,OAExBN,EAAQF,EAAUvO,OAAS,IAAKmC,EAAAA,EAAAA,KAACqC,EAAAA,EAAO,CAAC7D,UAAU,SAPjC8N,aAe7BtM,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,UAChBC,EAAAA,EAAAA,KAACwK,EAAAA,EAAK,CACJ+B,UAAW,EACXpM,GAAI,CACFsK,EAAG,EACH3G,aAAc,EACd4E,QAAS,gBACT3G,MAAO,wBACPhC,UAEFzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC2D,QAAQ,OAAOC,WAAW,SAASkD,eAAe,SAAQtF,SAAA,EAC7DC,EAAAA,EAAAA,KAACkN,GAAAA,EAAU,CAAC/M,GAAI,CAAEwK,GAAI,MACtB3K,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQ4K,WAAW,SAAQ3M,SAAC,mHAQxDC,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC2D,QAAQ,OAAOmD,eAAe,SAASzD,GAAI,EAAE7B,UAChDC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLX,QAAQ,YACRC,MAAM,UACNY,KAAK,QACLtB,QAtHe8L,KACnBjH,GACFA,GACF,EAoHQpF,SAAUiC,EACV5C,GAAI,CACFqF,SAAU,IACV4H,GAAI,IACJ/I,SAAU,SACVR,UAAW,GACX9D,SAEDgD,GACC/C,EAAAA,EAAAA,KAAC0C,EAAAA,EAAgB,CAACC,KAAM,GAAIZ,MAAM,YAElC,uBAKH,EChLLsL,IAAkBC,EAAAA,EAAAA,IAAO9C,EAAAA,EAAP8C,EAAcnR,IAAA,IAAC,MAAEoR,GAAOpR,EAAA,MAAM,CACpDqR,QAASD,EAAMhN,QAAQ,GACvBkN,UAAWF,EAAMhN,QAAQ,GACzBmN,aAAcH,EAAMhN,QAAQ,GAC5BsD,UAAW0J,EAAMI,QAAQ,GACzB7J,aAAyC,EAA3ByJ,EAAMK,MAAM9J,aAC3B,IAEK+J,IAAgBP,EAAAA,EAAAA,IAAO/O,EAAAA,EAAP+O,EAAYQ,IAAA,IAAC,MAAEP,GAAOO,EAAA,MAAM,CAChDL,UAAWF,EAAMhN,QAAQ,GACzBmN,aAAcH,EAAMhN,QAAQ,GAC5BwN,UAAW,QACZ,IAEKC,IAAkBV,EAAAA,EAAAA,IAAO/O,EAAAA,EAAP+O,EAAYW,IAAA,IAAC,MAAEV,GAAOU,EAAA,MAAM,CAClD/L,QAAS,OACTmD,eAAgB,gBAChBoI,UAAWF,EAAMhN,QAAQ,GAC1B,IAuPD,GA7OuB2N,IAAuC,IAAtC,WAAEhI,EAAU,YAAEiI,EAAc,IAAID,EAEtD,MAAME,EAAQ,CACZ,mBACA,qBACA,kBACA,oBAIKC,EAAYC,IAAiB/R,EAAAA,EAAAA,UAAS,IACtCwG,EAASC,IAAczG,EAAAA,EAAAA,WAAS,IAChCgD,EAAO0D,IAAY1G,EAAAA,EAAAA,UAAS,OAC5B2G,EAASC,IAAc5G,EAAAA,EAAAA,UAAS,OAChCK,EAAU2R,IAAehS,EAAAA,EAAAA,UAAS4R,IAClCK,EAAaC,IAAkBlS,EAAAA,EAAAA,UAAS,CAC7CmS,YAAa,GACbC,SAAU,GACVC,QAAS,GACTtI,eAAgB,KAChBuI,IAAK,MAEA1E,EAAaC,IAAkB7N,EAAAA,EAAAA,UAAS,CAC7CuS,mBAAmB,EACnBC,iBAAkB,UAClBC,gBAAiB,GACjBC,eAAgB,MAIlBpI,EAAAA,EAAAA,YAAU,KACJsH,IACFI,EAAYJ,GAEZe,EAAmBf,GACrB,GACC,CAACA,IAGJ,MAAMe,EAAqBxQ,UACzBsE,GAAW,GACXC,EAAS,MAET,UACwBkM,EAAAA,EAAkBC,aAAavM,IAGnDM,EAAW,uBACX7D,YAAW,KACTgP,EAAc,GACdnL,EAAW,KAAK,GACf,MAEHF,EAAS,4DAEb,CAAE,MAAO0B,GACPnF,QAAQD,MAAM,8BAA+BoF,GAC7C1B,EAAS,gDACX,CAAC,QACCD,GAAW,EACb,GAIIqM,EAAwBxM,IAC5B0L,EAAY1L,GACZqM,EAAmBrM,EAAK,EAIpByM,EAAsBC,IAC1Bd,EAAec,GACfjB,EAAc,EAAE,EAIZkB,EAA0BC,IAC9BrF,EAAeqF,GACfnB,EAAc,EAAE,EAIZoB,EAAyBhR,UAC7BsE,GAAW,GACXC,EAAS,MAET,UAEQ/D,EAAAA,EAAYyQ,kBAAkB,IAC/BnB,EACHrE,cACAyF,qBAAqB,IAGvBzM,EAAW,sCAGX7D,YAAW,KACL4G,GACFA,EAAW,CACTtJ,WACAiT,QAASrB,EACTrE,eAEJ,GACC,KACL,CAAE,MAAOxF,GACPnF,QAAQD,MAAM,+BAAgCoF,GAC9C1B,EAAS,mDACX,CAAC,QACCD,GAAW,EACb,GAiDF,OACEhD,EAAAA,EAAAA,KAAC8P,EAAAA,EAAS,CAACnM,SAAS,KAAI5D,UACtBzB,EAAAA,EAAAA,MAAC+O,GAAe,CAAAtN,SAAA,EACdC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKtD,UAAU,KAAKyF,MAAM,SAASD,cAAY,EAAAjE,SAAC,6BAIpEC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,gBAAgBkC,MAAM,SAASC,WAAS,EAAAnE,SAAC,iEAI3EC,EAAAA,EAAAA,KAACqC,EAAAA,EAAO,CAAClC,GAAI,CAAEmC,GAAI,KAElB/C,IACCS,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,SAAS,QAAQC,GAAI,CAAEmC,GAAI,GAAIvC,SACnCR,IAIJ2D,IACClD,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,SAAS,UAAUC,GAAI,CAAEmC,GAAI,GAAIvC,SACrCmD,KAILlD,EAAAA,EAAAA,KAAC+P,EAAAA,EAAO,CAAC1B,WAAYA,EAAYlO,GAAI,CAAEyB,GAAI,EAAGxB,GAAI,GAAIL,SACnDqO,EAAMrQ,KAAKJ,IACVqC,EAAAA,EAAAA,KAACgQ,EAAAA,EAAI,CAAAjQ,UACHC,EAAAA,EAAAA,KAACiQ,EAAAA,EAAS,CAAAlQ,SAAEpC,KADHA,QAMfqC,EAAAA,EAAAA,KAAC6N,GAAa,CAAA9N,SACXgD,GACC/C,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC2D,QAAQ,OAAOmD,eAAe,SAASlD,WAAW,SAASsG,OAAO,OAAM1I,UAC3EC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAgB,MAvELkK,KACtB,OAAQA,GACN,KAAK,EACH,OACE5M,EAAAA,EAAAA,KAACkQ,EAAkB,CACjB/B,YAAavR,EACb6B,SAAU4Q,IAGhB,KAAK,EACH,OACErP,EAAAA,EAAAA,KAACmQ,EAAgB,CACflK,YAAauI,EACb/P,SAAU6Q,IAGhB,KAAK,EACH,OACEtP,EAAAA,EAAAA,KAACoQ,GAAgB,CACfnK,YAAakE,EACb1L,SAAU+Q,IAGhB,KAAK,EACH,OACExP,EAAAA,EAAAA,KAACqQ,GAAa,CACZR,QAASrB,EACT8B,SAAUZ,IAGhB,QACE,MAAO,eACX,EA0CQa,CAAelC,MAInB/P,EAAAA,EAAAA,MAAC0P,GAAe,CAAAjO,SAAA,EACdC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACL3B,SAAyB,IAAfuN,GAAoBtL,EAC9B1B,QAtFSmP,KACjBlC,GAAcmC,GAAYA,EAAW,GAAE,EAsF/B3O,QAAQ,WAAU/B,SACnB,SAIAsO,EAAaD,EAAMvQ,OAAS,GAC3BmC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLX,QAAQ,YACRC,MAAM,UACNV,QArGOqP,KACjBpC,GAAcmC,GAAYA,EAAW,GAAE,EAqG7B3P,SAAUiC,GAA2B,IAAfsL,IAAqBzR,EAAUmD,SACtD,UAIDC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLX,QAAQ,YACRC,MAAM,UACNV,QAASqO,EACT5O,SAAUiC,EAAQhD,SACnB,kBAMG,E,4BCrRhB,MAuFA,GAvF8B4Q,KAC5B,MAAOC,EAAaC,IAAkBtU,EAAAA,EAAAA,UAAS,KACxCuU,EAAOC,IAAYxU,EAAAA,EAAAA,UAAS,KAC5ByU,EAASC,IAAc1U,EAAAA,EAAAA,WAAS,IAChC2U,EAAaC,IAAkB5U,EAAAA,EAAAA,WAAS,IACxC6U,EAAcC,IAAmB9U,EAAAA,EAAAA,WAAS,IAC1C+U,EAAWC,IAAgBhV,EAAAA,EAAAA,WAAS,IAE3CsK,EAAAA,EAAAA,YAAU,KACiBnI,WACvB,IACE6S,GAAa,SAGPC,GAAAA,GAAmBC,aAGzB,MAAMC,EAAiBF,GAAAA,GAAmBG,oBACpCC,EAAWJ,GAAAA,GAAmBK,cAEpChB,EAAea,GACfX,EAASa,GAGTX,QAAiBO,GAAAA,GAAmBR,WACpCG,QAAqBK,GAAAA,GAAmBN,eACxCG,QAAsBG,GAAAA,GAAmBJ,eAC3C,CAAE,MAAO7R,GACPC,QAAQD,MAAM,8BAA+BA,EAC/C,CAAC,QACCgS,GAAa,EACf,GAGFO,EAAkB,GACjB,IAsCH,MAAO,CACLlB,cACAE,QACAE,UACAE,cACAE,eACAE,YACAS,cAtCoBrT,eACP8S,GAAAA,GAAmBO,cAAcC,GAsC9CC,QA9BcvT,eACD8S,GAAAA,GAAmBS,QAAQC,GA8BxCC,iBAtBuBzT,eACV8S,GAAAA,GAAmBW,iBAAiBC,GAsBjDC,kBAdwB3T,eACX8S,GAAAA,GAAmBa,kBAAkBD,GAcnD,E,kDClEH,MA0HA,GA1H4BE,KAC1B,MAAM,YACJ1B,EAAW,MACXE,EAAK,QACLE,EAAO,YACPE,EAAW,aACXE,EAAY,UACZE,GACEX,KAEJ,GAAIW,EACF,OACEtR,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC2D,QAAQ,OAAOmD,eAAe,SAASoF,EAAG,EAAE1K,UAC/CC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAgB,MAMvB,MAAM6P,EAAqB,CAAC,EAS5B,OARA3B,EAAY4B,SAAQR,IAClB,MAAMS,EAAWT,EAAWU,MAAM,KAAK,GAClCH,EAAmBE,KACtBF,EAAmBE,GAAY,IAEjCF,EAAmBE,GAAUhJ,KAAKuI,EAAW,KAI7C1T,EAAAA,EAAAA,MAACkM,EAAAA,EAAK,CAAC+B,UAAW,EAAGpM,GAAI,CAAEsK,EAAG,GAAI1K,SAAA,EAChCzB,EAAAA,EAAAA,MAACuD,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAAjE,SAAA,EACnCC,EAAAA,EAAAA,KAACsL,GAAAA,EAAY,CAACnL,GAAI,CAAEwK,GAAI,EAAGgI,cAAe,iBAAmB,mCAI/DrU,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACqD,GAAI,EAAE7B,SAAA,EACTC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,YAAW/B,SAAC,gBAGhCzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC2D,QAAQ,OAAO2G,IAAK,EAAGjH,GAAI,EAAGxB,GAAI,EAAEL,SAAA,CACtCiR,IACChR,EAAAA,EAAAA,KAAC4S,EAAAA,EAAI,CACH9G,MAAM9L,EAAAA,EAAAA,KAAC6S,GAAAA,EAAgB,IACvBlV,MAAM,QACNoE,MAAM,QACND,QAAQ,aAGXoP,IACClR,EAAAA,EAAAA,KAAC4S,EAAAA,EAAI,CACH9G,MAAM9L,EAAAA,EAAAA,KAAC6S,GAAAA,EAAgB,IACvBlV,MAAM,YACNoE,MAAM,UACND,QAAQ,aAGXsP,IACCpR,EAAAA,EAAAA,KAAC4S,EAAAA,EAAI,CACH9G,MAAM9L,EAAAA,EAAAA,KAAC6S,GAAAA,EAAgB,IACvBlV,MAAM,cACNoE,MAAM,UACND,QAAQ,cAGVkP,IAAYE,IAAgBE,IAC5BpR,EAAAA,EAAAA,KAAC4S,EAAAA,EAAI,CACH9G,MAAM9L,EAAAA,EAAAA,KAAC8S,GAAAA,EAAU,IACjBnV,MAAM,WACNoE,MAAM,UACND,QAAQ,oBAMhB9B,EAAAA,EAAAA,KAACqC,EAAAA,EAAO,CAAClC,GAAI,CAAEmC,GAAI,MAEnBtC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,YAAYkC,cAAY,EAAAjE,SAAC,qBAID,IAA3Cf,OAAOC,KAAKsT,GAAoB1U,QAC/BmC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAgBhC,SAAC,uDAInDC,EAAAA,EAAAA,KAAC2M,GAAAA,EAAI,CAACoG,OAAK,EAAC5S,GAAI,CAAEC,GAAI,GAAIL,SACvBf,OAAOgU,QAAQT,GAAoBxU,KAAI5B,IAAA,IAAEsW,EAAUQ,GAAM9W,EAAA,OACxDmC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAgB6B,GAAI,EAAEL,SAAA,EACxBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CACTC,QAAQ,YACRC,MAAM,UACN5B,GAAI,CAAE+S,cAAe,cAAenT,SAEnC0S,IAEFQ,EAAMlV,KAAIiU,IACT1T,EAAAA,EAAAA,MAACwO,GAAAA,GAAQ,CAAkBiG,OAAK,EAAAhT,SAAA,EAC9BC,EAAAA,EAAAA,KAAC+M,GAAAA,EAAY,CAAC5M,GAAI,CAAEqF,SAAU,IAAKzF,UACjCC,EAAAA,EAAAA,KAACmT,GAAAA,EAAQ,CAAC9O,SAAS,QAAQtC,MAAM,cAEnC/B,EAAAA,EAAAA,KAACgN,GAAAA,EAAY,CACXC,QAAS+E,EAAWU,MAAM,KAAK,GAC/BU,uBAAwB,CACtBtR,QAAS,QACT3B,GAAI,CAAE+S,cAAe,mBARZlB,OATTS,EAsBJ,OAKZzS,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,UAAUC,MAAM,iBAAgBhC,SAAC,wFAG/C,ECzICsT,GAAeC,4BCiaE,IAha9B,MAOE,wBAAMC,GAAkC,IAAfC,EAAOjM,UAAA1J,OAAA,QAAA2J,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClC,IAKE,MAAO,CACL,CACE7J,GAAI,YACJ8N,MAAO,yBACPQ,YAAa,wDACbyH,OAAQ,eACRhB,SAAU,eACViB,MAAO,GACPC,OAAQ,WACR/H,SAAU,eACVgI,UAAW,uBACXC,UAAW,uBACXC,SAAU,EACVC,KAAM,CAAC,uBAAwB,YAC/BC,yBAA0B,SAC1BC,cAAe,QAEjB,CACEvW,GAAI,YACJ8N,MAAO,kBACPQ,YAAa,sEACbyH,OAAQ,UACRhB,SAAU,iBACViB,MAAO,GACPC,OAAQ,WACR/H,SAAU,aACVgI,UAAW,uBACXC,UAAW,uBACXC,SAAU,GACVC,KAAM,CAAC,KAAM,gBAAiB,SAC9BC,yBAA0B,MAC1BC,cAAe,SACfC,sBAAuB,SAEzB,CACExW,GAAI,YACJ8N,MAAO,eACPQ,YAAa,6FACbyH,OAAQ,cACRhB,SAAU,gBACViB,MAAO,GACPC,OAAQ,WACR/H,SAAU,eACVgI,UAAW,uBACXC,UAAW,uBACXC,SAAU,EACVC,KAAM,CAAC,UAAW,OAAQ,gBAC1BC,yBAA0B,OAC1BC,cAAe,OACfE,kBAAmB,iBACnBC,oBAAqB,cAEvB,CACE1W,GAAI,YACJ8N,MAAO,qBACPQ,YAAa,mFACbyH,OAAQ,cACRhB,SAAU,kBACViB,MAAO,GACPC,OAAQ,WACR/H,SAAU,aACVgI,UAAW,uBACXC,UAAW,uBACXC,SAAU,EACVC,KAAM,CAAC,SAAU,OAAQ,OACzBC,yBAA0B,MAC1BC,cAAe,SACfI,mBAAoB,QACpBC,YAAa,cAEf,CACE5W,GAAI,YACJ8N,MAAO,yBACPQ,YAAa,yDACbyH,OAAQ,MACRhB,SAAU,mBACViB,MAAO,GACPC,OAAQ,WACR/H,SAAU,eACVgI,UAAW,uBACXC,UAAW,uBACXC,SAAU,EACVC,KAAM,CAAC,SAAU,aAAc,WAC/BC,yBAA0B,SAC1BC,cAAe,WAEjBlV,QAAOwV,IAEP,GAAIf,EAAQC,QAAUc,EAAQd,SAAWD,EAAQC,OAAQ,OAAO,EAChE,GAAID,EAAQf,UAAY8B,EAAQ9B,WAAae,EAAQf,SAAU,OAAO,EACtE,GAAIe,EAAQgB,OAAQ,CAClB,MAAMA,EAAShB,EAAQgB,OAAOC,cAC9B,OACEF,EAAQ/I,MAAMiJ,cAAc5P,SAAS2P,IACrCD,EAAQvI,YAAYyI,cAAc5P,SAAS2P,IAC3CD,EAAQR,KAAKW,MAAKC,GAAOA,EAAIF,cAAc5P,SAAS2P,IAExD,CACA,OAAO,CAAI,IACVI,MAAK,CAACC,EAAGC,IAEa,UAAnBtB,EAAQuB,OAA2BD,EAAEpB,MAAQmB,EAAEnB,MAC5B,WAAnBF,EAAQuB,OAA4B,IAAIC,KAAKF,EAAElB,WAAa,IAAIoB,KAAKH,EAAEjB,WACpD,YAAnBJ,EAAQuB,OAA6B,IAAIC,KAAKF,EAAEjB,WAAa,IAAImB,KAAKH,EAAEhB,WAErEiB,EAAEpB,MAAQmB,EAAEnB,OAEvB,CAAE,MAAOnU,GAEP,MADAC,QAAQD,MAAM,mCAAoCA,GAC5C,IAAI0V,MAAM,mCAClB,CACF,CAQA,2BAAMC,CAAsBC,GAC1B,IAEE,MAAMC,EAAe,CACnB,CACE1X,GAAI,YACJyX,UAAW,YACXxB,OAAQ,WACR/H,SAAU,aACVyJ,QAAS,2DACTzB,UAAW,uBACX0B,MAAO,GAET,CACE5X,GAAI,YACJyX,UAAW,YACXxB,OAAQ,WACR/H,SAAU,eACVyJ,QAAS,mDACTzB,UAAW,uBACX0B,MAAO,GAET,CACE5X,GAAI,YACJyX,UAAW,YACXxB,OAAQ,WACR/H,SAAU,eACVyJ,QAAS,kDACTzB,UAAW,uBACX0B,MAAO,IAMLf,SADiBgB,KAAKhC,sBACHiC,MAAKC,GAAKA,EAAE/X,KAAOyX,IAE5C,IAAKZ,EACH,MAAM,IAAIU,MAAM,6BAIlB,MAAO,IACFV,EACHT,SAAUsB,EAAarW,QAAO2W,GAAKA,EAAEP,YAAcA,IAEvD,CAAE,MAAO5V,GAEP,MADAC,QAAQD,MAAM,kCAAkC4V,KAAc5V,GACxD,IAAI0V,MAAM,kCAClB,CACF,CAQA,0BAAMU,CAAqBC,GACzB,IAKE,GAHApW,QAAQ0I,IAAI,8BAA+B0N,IAGtCA,EAAYpK,MACf,MAAM,IAAIyJ,MAAM,qBAElB,IAAKW,EAAY5J,YACf,MAAM,IAAIiJ,MAAM,2BAIlB,MAAMvQ,EAAW,CACfiP,OAAQ,mBACR/H,SAAU,gBAINiK,EAAa,CACjBnY,GAAI,WAAWsX,KAAKc,QACpBtK,MAAOoK,EAAYpK,MACnBQ,YAAa4J,EAAY5J,YACzByH,OAAQ,MACRhB,SAAUmD,EAAYnD,UAAY,UAClCiB,MAAO,EACPC,OAAQjP,EAASiP,OACjB/H,SAAUlH,EAASkH,SACnBgI,WAAW,IAAIoB,MAAOe,cACtBlC,WAAW,IAAImB,MAAOe,cACtBjC,SAAU,EACVC,KAAM6B,EAAY7B,MAAQ,GAC1BC,yBAA0B,eAC1BC,cAAe,gBAMjB,aAFM,IAAI+B,SAAQC,GAAW3W,WAAW2W,EAAS,OAE1CJ,CACT,CAAE,MAAOtW,GAEP,MADAC,QAAQD,MAAM,oCAAqCA,GAC7C,IAAI0V,MAAM,qCAAqC1V,EAAMM,UAC7D,CACF,CASA,0BAAMqW,CAAqBf,EAAWgB,GACpC,IAQE,OANA3W,QAAQ0I,IAAI,GAAGiO,EAAW,WAAa,uCAAuChB,WAGxE,IAAIa,SAAQC,GAAW3W,WAAW2W,EAAS,OAG1C,CACLd,YACAzB,MAAOyC,EAAW,GAAK,GAE3B,CAAE,MAAO5W,GAEP,MADAC,QAAQD,MAAM,mCAAoCA,GAC5C,IAAI0V,MAAM,oCAClB,CACF,CASA,gBAAMmB,CAAWjB,EAAWE,GAC1B,IAKE,GAHA7V,QAAQ0I,IAAI,qCAAqCiN,KAAcE,IAG1DA,EACH,MAAM,IAAIJ,MAAM,+BAIlB,MAAMvQ,EAAW,CACfiP,OAAQ,mBACR/H,SAAU,gBAINyK,EAAa,CACjB3Y,GAAI,WAAWsX,KAAKc,QACpBX,YACAxB,OAAQjP,EAASiP,OACjB/H,SAAUlH,EAASkH,SACnByJ,UACAzB,WAAW,IAAIoB,MAAOe,cACtBT,MAAO,GAMT,aAFM,IAAIU,SAAQC,GAAW3W,WAAW2W,EAAS,OAE1CI,CACT,CAAE,MAAO9W,GAEP,MADAC,QAAQD,MAAM,wBAAyBA,GACjC,IAAI0V,MAAM,0BAA0B1V,EAAMM,UAClD,CACF,CAOA,mBAAMyW,GACJ,IAEE,MAAO,CACL,CAAE5Y,GAAI,UAAWlB,KAAM,WACvB,CAAEkB,GAAI,KAAMlB,KAAM,kBAClB,CAAEkB,GAAI,gBAAiBlB,KAAM,iBAC7B,CAAEkB,GAAI,cAAelB,KAAM,eAC3B,CAAEkB,GAAI,gBAAiBlB,KAAM,iBAC7B,CAAEkB,GAAI,eAAgBlB,KAAM,gBAC5B,CAAEkB,GAAI,cAAelB,KAAM,eAC3B,CAAEkB,GAAI,kBAAmBlB,KAAM,mBAC/B,CAAEkB,GAAI,mBAAoBlB,KAAM,oBAChC,CAAEkB,GAAI,WAAYlB,KAAM,YAE5B,CAAE,MAAO+C,GAEP,MADAC,QAAQD,MAAM,6BAA8BA,GACtC,IAAI0V,MAAM,6BAClB,CACF,CAUA,gCAAMsB,CAA2BpB,EAAW1B,GAA0B,IAAlB+C,EAAUjP,UAAA1J,OAAA,QAAA2J,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChE,IAEE/H,QAAQ0I,IAAI,4BAA4BiN,eAAuB1B,IAAU+C,GAIzE,IADsB,CAAC,MAAO,eAAgB,UAAW,cAAe,cAAe,YACpE3R,SAAS4O,GAC1B,MAAM,IAAIwB,MAAM,kBAOlB,aAHM,IAAIe,SAAQC,GAAW3W,WAAW2W,EAAS,OAG1C,CACLvY,GAAIyX,EACJ1B,SACAI,WAAW,IAAImB,MAAOe,iBACnBS,EAEP,CAAE,MAAOjX,GAEP,MADAC,QAAQD,MAAM,yCAA0CA,GAClD,IAAI0V,MAAM,0CAClB,CACF,CAOA,kBAAMwB,GACJ,IAEE,MAAO,CACLC,cAAe,GACfC,iBAAkB,CAChBC,IAAK,EACLC,aAAc,EACdC,QAAS,EACTC,YAAa,EACbC,YAAa,EACbC,SAAU,GAEZC,mBAAoB,CAClB,iBAAkB,EAClB,cAAiB,EACjB,YAAe,EACf,kBAAmB,EACnB,aAAgB,EAChB,mBAAoB,EACpB,QAAW,GAEbC,iBAAkB,CAChB,CAAEzZ,GAAI,YAAa8N,MAAO,kBAAmBkI,MAAO,IACpD,CAAEhW,GAAI,YAAa8N,MAAO,qBAAsBkI,MAAO,IACvD,CAAEhW,GAAI,YAAa8N,MAAO,eAAgBkI,MAAO,IACjD,CAAEhW,GAAI,YAAa8N,MAAO,yBAA0BkI,MAAO,IAC3D,CAAEhW,GAAI,YAAa8N,MAAO,qBAAsBkI,MAAO,KAEzD0D,uBAAwB,CACtB,CAAEC,MAAO,OAAQC,MAAO,GACxB,CAAED,MAAO,SAAUC,MAAO,GAC1B,CAAED,MAAO,YAAaP,QAAS,IAGrC,CAAE,MAAOvX,GAEP,MADAC,QAAQD,MAAM,4BAA6BA,GACrC,IAAI0V,MAAM,4BAClB,CACF,G,uLChXF,MA6xBA,GA7xB4B9Y,IAAyB,IAAxB,eAAEob,GAAgBpb,EAE7C,MAAMqb,EAAa,CACjB,QAAS,aAAc,cAAe,aACtC,QAAS,OAAQ,eAAgB,gBACjC,eAAgB,WAAY,kBAAmB,SAI3CC,EAAW,CACfC,UAAW,YACXC,aAAc,eACdC,QAAS,UACTC,YAAa,cACbC,YAAa,cACbC,SAAU,aAILhO,EAAUiO,IAAezb,EAAAA,EAAAA,UAAS,KAClCwG,EAASC,IAAczG,EAAAA,EAAAA,WAAS,IAChCgD,EAAO0D,IAAY1G,EAAAA,EAAAA,UAAS,OAC5B0b,EAAWC,IAAgB3b,EAAAA,EAAAA,UAAS,IACpC4b,EAAeC,IAAoB7b,EAAAA,EAAAA,WAAS,IAC5CwY,EAAQsD,IAAa9b,EAAAA,EAAAA,UAAS,UAC9BiX,EAAS8E,IAAc/b,EAAAA,EAAAA,UAAS,CACrCkW,SAAU,MACVgB,OAAQ,SAIH8E,EAAYC,IAAiBjc,EAAAA,EAAAA,UAAS,CAC3CiP,MAAO,GACPQ,YAAa,GACbyG,SAAU,GACVsB,KAAM,MAID0E,EAAYC,IAAiBnc,EAAAA,EAAAA,UAAS,CAAC,IAG9CsK,EAAAA,EAAAA,YAAU,KACR8R,GAAc,GACb,IAGH,MAAMA,EAAeja,UACnB,IACEsE,GAAW,GACXC,EAAS,MAmGT+U,EA7FqB,CACnB,CACEta,GAAI,SACJ8N,MAAO,wBACPQ,YAAa,gFACbyG,SAAU,QACVgB,OAAQgE,EAASG,QACjBlE,MAAO,GACPI,SAAU,GACV8E,WAAW,EACX7E,KAAM,CAAC,YAAa,aACpB8E,UAAW,CACTnb,GAAI,SACJlB,KAAM,eACNsc,OAAQ,MAEVlF,UAAW,uBACXC,UAAW,wBAEb,CACEnW,GAAI,SACJ8N,MAAO,gCACPQ,YAAa,uGACbyG,SAAU,eACVgB,OAAQgE,EAASI,YACjBnE,MAAO,GACPI,SAAU,GACV8E,WAAW,EACX7E,KAAM,CAAC,UAAW,QAClB8E,UAAW,CACTnb,GAAI,SACJlB,KAAM,eACNsc,OAAQ,sCAEVlF,UAAW,uBACXC,UAAW,wBAEb,CACEnW,GAAI,SACJ8N,MAAO,mCACPQ,YAAa,0GACbyG,SAAU,eACVgB,OAAQgE,EAASC,UACjBhE,MAAO,GACPI,SAAU,EACV8E,WAAW,EACX7E,KAAM,CAAC,SAAU,eACjB8E,UAAW,CACTnb,GAAI,SACJlB,KAAM,aACNsc,OAAQ,sCAEVlF,UAAW,uBACXC,UAAW,wBAEb,CACEnW,GAAI,SACJ8N,MAAO,uCACPQ,YAAa,gHACbyG,SAAU,cACVgB,OAAQgE,EAASE,aACjBjE,MAAO,GACPI,SAAU,GACV8E,WAAW,EACX7E,KAAM,CAAC,YAAa,gBACpB8E,UAAW,CACTnb,GAAI,SACJlB,KAAM,eACNsc,OAAQ,sCAEVlF,UAAW,uBACXC,UAAW,wBAEb,CACEnW,GAAI,SACJ8N,MAAO,mCACPQ,YAAa,6FACbyG,SAAU,kBACVgB,OAAQgE,EAASK,YACjBpE,MAAO,GACPI,SAAU,EACV8E,WAAW,EACX7E,KAAM,CAAC,SAAU,WACjB8E,UAAW,CACTnb,GAAI,SACJlB,KAAM,eACNsc,OAAQ,MAEVlF,UAAW,uBACXC,UAAW,yBAKjB,CAAE,MAAOlP,GACPnF,QAAQD,MAAM,0BAA2BoF,GACzC1B,EAAS,qDACX,CAAC,QACCD,GAAW,EACb,GASI+V,EAAsBA,KAC1BP,EAAc,CACZhN,MAAO,GACPQ,YAAa,GACbyG,SAAU,GACVsB,KAAM,KAER2E,EAAc,CAAC,GACfN,GAAiB,EAAK,EAIlBY,EAAuBA,KAC3BZ,GAAiB,EAAM,EAInBa,EAA4B9a,IAChC,MAAM,KAAE3B,EAAI,MAAE4B,GAAUD,EAAEE,OAC1Bma,GAAcrR,IAAI,IACbA,EACH,CAAC3K,GAAO4B,MAINqa,EAAWjc,IACbkc,GAAcvR,IAAI,IACbA,EACH,CAAC3K,GAAO,QAEZ,EAoHI0c,EAAqBA,CAACtZ,EAAMxB,KAChCka,GAAWnR,IAAI,IACVA,EACH,CAACvH,GAAOxB,KACP,EAcC+a,EAAiB1F,IACrB,OAAQA,GACN,KAAKgE,EAASK,YACZ,OAAO9X,EAAAA,EAAAA,KAACoZ,GAAAA,EAAe,CAACrX,MAAM,YAChC,KAAK0V,EAASG,QACd,KAAKH,EAASI,YACZ,OAAO7X,EAAAA,EAAAA,KAACqZ,GAAAA,EAAW,CAACtX,MAAM,YAC5B,KAAK0V,EAASM,SACZ,OAAO/X,EAAAA,EAAAA,KAACsZ,GAAAA,EAAY,CAACvX,MAAM,UAC7B,QACE,OAAO,KACX,EAIIwX,EAAkB9F,IACtB,OAAQA,GACN,KAAKgE,EAASC,UACZ,MAAO,YACT,KAAKD,EAASE,aACZ,MAAO,eACT,KAAKF,EAASG,QACZ,MAAO,UACT,KAAKH,EAASI,YACZ,MAAO,cACT,KAAKJ,EAASK,YACZ,MAAO,cACT,KAAKL,EAASM,SACZ,MAAO,WACT,QACE,OAAOtE,EACX,EAII+F,EAAkB/F,IACtB,OAAQA,GACN,KAAKgE,EAASC,UACZ,MAAO,UACT,KAAKD,EAASE,aACZ,MAAO,UACT,KAAKF,EAASG,QACZ,MAAO,OACT,KAAKH,EAASI,YACZ,MAAO,UACT,KAAKJ,EAASK,YACZ,MAAO,UACT,KAAKL,EAASM,SACZ,MAAO,QACT,QACE,MAAO,UACX,EAII0B,EAAmB1P,EAAShL,QAAOsN,IACd,QAArBmH,EAAQf,UAAsBpG,EAAQoG,WAAae,EAAQf,aAIxC,QAAnBe,EAAQC,QAAoBpH,EAAQoH,SAAWD,EAAQC,YAKzC,IAAdwE,IAAoB5L,EAAQuM,aAId,IAAdX,GAAmB5L,EAAQoH,SAAWgE,EAASK,iBAQ/C4B,EAAiB,IAAID,GAAkB7E,MAAK,CAACC,EAAGC,KACpD,OAAQC,GACN,IAAK,QAML,QACE,OAAOD,EAAEpB,MAAQmB,EAAEnB,MALrB,IAAK,SACH,OAAO,IAAIsB,KAAKF,EAAElB,WAAa,IAAIoB,KAAKH,EAAEjB,WAC5C,IAAK,SACH,OAAO,IAAIoB,KAAKH,EAAEjB,WAAa,IAAIoB,KAAKF,EAAElB,WAG9C,IAGF,OACEtV,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAwB,SAAA,EAEFzB,EAAAA,EAAAA,MAACqb,GAAAA,EAAM,CACLC,KAAMzB,EACN0B,QAASb,EACTrV,SAAS,KACThD,WAAS,EAAAZ,SAAA,EAETC,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAW,CAAA/Z,SAAC,4BACbC,EAAAA,EAAAA,KAAC+Z,GAAAA,EAAa,CAAAha,UACZzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGJ,GAAI,CAAEyB,GAAI,GAAI7B,SAAA,EACxCC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,UAChBC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRC,WAAS,EACThD,MAAM,QACNnB,KAAK,QACL4B,MAAOma,EAAW/M,MAClB5K,SAAUqY,EACV1Z,QAASkZ,EAAWjN,MACpB3K,WAAY4X,EAAWjN,MACvBxG,YAAY,iDACZjE,UAAQ,OAGZf,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuB,GAAI,EAAEjC,UACvBzB,EAAAA,EAAAA,MAAC2M,EAAAA,EAAW,CAACtK,WAAS,EAACpB,QAASkZ,EAAWhG,SAAS1S,SAAA,EAClDC,EAAAA,EAAAA,KAACga,GAAAA,EAAU,CAACtc,GAAG,iBAAgBqC,SAAC,cAChCC,EAAAA,EAAAA,KAACia,GAAAA,EAAM,CACLC,QAAQ,iBACR1d,KAAK,WACL4B,MAAOma,EAAW9F,SAClB7R,SAAUqY,EACVtb,MAAM,WACNoD,UAAQ,EAAAhB,SAEPyX,EAAWzZ,KAAI0U,IACdzS,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAgB/b,MAAOqU,EAAS1S,SACtC0S,GADYA,OAKlBgG,EAAWhG,WACVzS,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,UAAUC,MAAM,QAAOhC,SACxC0Y,EAAWhG,iBAKpBnU,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuB,GAAI,EAAEjC,SAAA,EACvBC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRC,WAAS,EACThD,MAAM,OACNqH,YAAY,kCACZoV,QAlRUjc,IACtB,MAAMC,EAAQD,EAAEE,OAAOD,MACvB,GAAIA,EAAMic,SAAS,KAAM,CACvB,MAAM1F,EAAMvW,EAAMkc,MAAM,GAAI,GAAGxb,OAC3B6V,IAAQ4D,EAAWxE,KAAKlP,SAAS8P,IACnC6D,GAAcrR,IAAI,IACbA,EACH4M,KAAM,IAAI5M,EAAK4M,KAAMY,OAGzBxW,EAAEE,OAAOD,MAAQ,EACnB,GAwQYyC,WAAW,gDAEbb,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQqY,SAAU,OAAQ1R,IAAK,EAAGjH,GAAI,GAAI7B,SAC3DwY,EAAWxE,KAAKhW,KAAI4W,IACnB3U,EAAAA,EAAAA,KAAC4S,EAAAA,EAAI,CAEHjV,MAAOgX,EACP6F,SAAUA,IA3QH7F,KACvB6D,GAAcrR,IAAI,IACbA,EACH4M,KAAM5M,EAAK4M,KAAKhV,QAAO0b,GAAKA,IAAM9F,OACjC,EAuQ6B+F,CAAgB/F,GAChChS,KAAK,SAHAgS,WAQb3U,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,UAChBC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRC,WAAS,EACThD,MAAM,cACNnB,KAAK,cACL4B,MAAOma,EAAWvM,YAClBpL,SAAUqY,EACV1Z,QAASkZ,EAAWzM,YACpBnL,WAAY4X,EAAWzM,aAAe,sEACtC2O,WAAS,EACTC,KAAM,EACN7Z,UAAQ,YAKhBzC,EAAAA,EAAAA,MAACuc,GAAAA,EAAa,CAAA9a,SAAA,EACZC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CAACpB,QAAS2X,EAAqBjZ,SAAC,YAGvCC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLpB,QA1QkB3C,UAC1B,GArBmBE,MACnB,MAAM3B,EAAS,CAAC,EAehB,OAbKsb,EAAW/M,MAAM1M,SACpB7B,EAAOuO,MAAQ,qBAGZ+M,EAAWvM,YAAYlN,SAC1B7B,EAAO+O,YAAc,2BAGlBuM,EAAW9F,WACdxV,EAAOwV,SAAW,wBAGpBiG,EAAczb,GACwB,IAA/B+B,OAAOC,KAAKhC,GAAQY,MAAY,EAKlCe,GAIL,IACEoE,GAAW,GAMX,MAAM8X,EAAiB,CACrBpd,GAAI,QAAQsX,KAAKc,WACdyC,EACH9E,OAAQgE,EAASC,UACjBhE,MAAO,EACPI,SAAU,EACV8E,WAAW,EACXC,UAAW,CACTnb,GAAI,eACJlB,KAAM,eACNsc,OAAQ,MAEVlF,WAAW,IAAIoB,MAAOe,cACtBlC,WAAW,IAAImB,MAAOe,eAGxBiC,GAAY7Q,GAAQ,CAAC2T,KAAmB3T,KACxCiR,GAAiB,EACnB,CAAE,MAAOzT,GACPnF,QAAQD,MAAM,kCAAmCoF,GACjD1B,EAAS,sDACX,CAAC,QACCD,GAAW,EACb,GAwOQlB,QAAQ,YACRC,MAAM,UACNjB,SAAUiC,EAAQhD,SAEjBgD,GAAU/C,EAAAA,EAAAA,KAAC0C,EAAAA,EAAgB,CAACC,KAAM,KAAS,0BAMlDrE,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQmD,eAAgB,gBAAiBlD,WAAY,SAAU/B,GAAI,GAAIL,SAAA,EACzFC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKtD,UAAU,KAAIuB,SAAC,sBAGxCC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLX,QAAQ,YACRC,MAAM,UACNuD,WAAWtF,EAAAA,EAAAA,KAAC+a,GAAAA,EAAO,IACnB1Z,QAAS0X,EAAoBhZ,SAC9B,uBAMHC,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC4B,GAAI,CAAE6a,aAAc,EAAGC,YAAa,UAAW7a,GAAI,GAAIL,UAC1DzB,EAAAA,EAAAA,MAAC4c,EAAAA,EAAI,CACH9c,MAAO6Z,EACPrX,SAzXgBua,CAAC7W,EAAO8W,KAC9BlD,EAAakD,EAAS,EAyXhB,aAAW,uBAAsBrb,SAAA,EAEjCC,EAAAA,EAAAA,KAACqb,EAAAA,EAAG,CAAC1d,MAAM,kBACXqC,EAAAA,EAAAA,KAACqb,EAAAA,EAAG,CAAC1d,MAAM,cACXqC,EAAAA,EAAAA,KAACqb,EAAAA,EAAG,CAAC1d,MAAM,sBAKfqC,EAAAA,EAAAA,KAACwK,EAAAA,EAAK,CAACrK,GAAI,CAAEsK,EAAG,EAAGrK,GAAI,GAAIL,UACzBzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG4B,WAAW,SAAQpC,SAAA,EAC7CC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAAAT,UACRC,EAAAA,EAAAA,KAACsb,GAAAA,EAAU,CAACvZ,MAAM,cAEpB/B,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuB,GAAI,EAAEjC,UACvBzB,EAAAA,EAAAA,MAAC2M,EAAAA,EAAW,CAACtK,WAAS,EAACgC,KAAK,QAAO5C,SAAA,EACjCC,EAAAA,EAAAA,KAACga,GAAAA,EAAU,CAACtc,GAAG,wBAAuBqC,SAAC,cACvCzB,EAAAA,EAAAA,MAAC2b,GAAAA,EAAM,CACLC,QAAQ,wBACR9b,MAAOoV,EAAQf,SACf7R,SAAWzC,GAAM+a,EAAmB,WAAY/a,EAAEE,OAAOD,OACzDT,MAAM,WAAUoC,SAAA,EAEhBC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC/b,MAAM,MAAK2B,SAAC,mBACrByX,EAAWzZ,KAAI0U,IACdzS,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAgB/b,MAAOqU,EAAS1S,SACtC0S,GADYA,cAOvBzS,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuB,GAAI,EAAEjC,UACvBzB,EAAAA,EAAAA,MAAC2M,EAAAA,EAAW,CAACtK,WAAS,EAACgC,KAAK,QAAO5C,SAAA,EACjCC,EAAAA,EAAAA,KAACga,GAAAA,EAAU,CAACtc,GAAG,sBAAqBqC,SAAC,YACrCzB,EAAAA,EAAAA,MAAC2b,GAAAA,EAAM,CACLC,QAAQ,sBACR9b,MAAOoV,EAAQC,OACf7S,SAAWzC,GAAM+a,EAAmB,SAAU/a,EAAEE,OAAOD,OACvDT,MAAM,SAAQoC,SAAA,EAEdC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC/b,MAAM,MAAK2B,SAAC,iBACrBf,OAAOuc,OAAO9D,GAAU1Z,KAAI0V,IAC3BzT,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAc/b,MAAOqV,EAAO1T,SAClCwZ,EAAe9F,IADHA,cAOvBzT,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuB,GAAI,EAAEjC,UACvBzB,EAAAA,EAAAA,MAAC2M,EAAAA,EAAW,CAACtK,WAAS,EAACgC,KAAK,QAAO5C,SAAA,EACjCC,EAAAA,EAAAA,KAACga,GAAAA,EAAU,CAACtc,GAAG,aAAYqC,SAAC,aAC5BzB,EAAAA,EAAAA,MAAC2b,GAAAA,EAAM,CACLC,QAAQ,aACR9b,MAAO2W,EACPnU,SAhSY0D,IACxB+T,EAAU/T,EAAMjG,OAAOD,MAAM,EAgSjBT,MAAM,UAASoC,SAAA,EAEfC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC/b,MAAM,QAAO2B,SAAC,gBACxBC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC/b,MAAM,SAAQ2B,SAAC,YACzBC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC/b,MAAM,SAAQ2B,SAAC,oBAI/BC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuB,GAAI,EAAEjC,UACvBzB,EAAAA,EAAAA,MAACuD,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,gBAAehC,SAAA,CAC9C0Z,EAAiB5b,OAAO,IAA8B,IAA5B4b,EAAiB5b,OAAe,UAAY,WAAW,mBAOzF0B,IACCS,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,SAAS,QAAQC,GAAI,CAAEC,GAAI,GAAIL,SACnCR,IAKJwD,GACC/C,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQmD,eAAgB,SAAU+H,GAAI,GAAIrN,UAC5DC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAgB,MAEW,IAA5B+W,EAAiB5b,QACnBS,EAAAA,EAAAA,MAACkM,EAAAA,EAAK,CAACrK,GAAI,CAAEsK,EAAG,EAAGpC,UAAW,UAAWtI,SAAA,EACvCC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKC,MAAM,gBAAgBiC,cAAY,EAAAjE,SAAC,+BAG5DC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,gBAAgBmC,WAAS,EAAAnE,SAC1C,IAAdkY,EACC,kDACc,IAAdA,EACE,kDACA,yDAGNjY,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLX,QAAQ,WACRC,MAAM,UACNuD,WAAWtF,EAAAA,EAAAA,KAAC+a,GAAAA,EAAO,IACnB1Z,QAAS0X,EACT5Y,GAAI,CAAEyB,GAAI,GAAI7B,SACf,6BAKHC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAER,SACxB2Z,EAAe3b,KAAIsO,IAClBrM,SAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,UAChBzB,EAAAA,EAAAA,MAACoF,EAAAA,EAAI,CACH5B,QAAQ,WACR3B,GAAI,CACFgB,SAAU,WACVqL,WAAY,kCACZ,UAAW,CACT3I,UAAW,EACX4I,UAAW,qBAEb1M,SAAA,CAGDoZ,EAAc9M,EAAQoH,UACrBzT,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CACF4B,GAAI,CACFgB,SAAU,WACVqa,IAAK,GACLC,MAAO,GACPC,OAAQ,GACR3b,UAEFC,EAAAA,EAAAA,KAACuL,GAAAA,EAAO,CAACC,MAAO+N,EAAelN,EAAQoH,QAAQ1T,SAC5CoZ,EAAc9M,EAAQoH,aAK7BnV,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACC,WAAS,EAAAP,SAAA,EAEbC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGuB,GAAI,EAAEjC,UACtBzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACF4B,GAAI,CACF+B,QAAS,OACTyZ,cAAe,SACfxZ,WAAY,SACZkD,eAAgB,SAChBoF,EAAG,EACHhC,OAAQ,OACRmT,YAAa,EACbX,YAAa,WACblb,SAAA,EAEFC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CACTC,QAASA,IA5ZZ3C,WACjB,IAKEsZ,GAAY7Q,GACVA,EAAKpJ,KAAIsO,GACHA,EAAQ3O,KAAOme,EACV,IACFxP,EACHqH,MAAOrH,EAAQuM,UAAYvM,EAAQqH,MAAQ,EAAIrH,EAAQqH,MAAQ,EAC/DkF,WAAYvM,EAAQuM,WAGjBvM,KAGb,CAAE,MAAO1H,GACPnF,QAAQD,MAAM,4BAA6BoF,EAE7C,GAuYmCmX,CAAWzP,EAAQ3O,IAClCqE,MAAOsK,EAAQuM,UAAY,UAAY,UACvCjW,KAAK,QAAO5C,UAEZC,EAAAA,EAAAA,KAAC+b,GAAAA,EAAW,OAEd/b,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CACTC,QAAQ,KACRC,MAAOsK,EAAQuM,UAAY,UAAY,cACvCzY,GAAI,CAAEuM,WAAYL,EAAQuM,UAAY,OAAS,UAAW7Y,SAEzDsM,EAAQqH,SAEX1T,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,UAAUC,MAAM,gBAAehC,SAAC,gBAOxDC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuB,GAAI,GAAGjC,UACxBzB,EAAAA,EAAAA,MAACyF,EAAAA,EAAW,CAAAhE,SAAA,EACVzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAEC,GAAI,GAAIL,SAAA,EACjBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKtD,UAAU,KAAKwF,cAAY,EAAAjE,SACjDsM,EAAQb,SAEXlN,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQ9B,GAAI,GAAIL,SAAA,EAClCC,EAAAA,EAAAA,KAAC4S,EAAAA,EAAI,CACHjV,MAAO0O,EAAQoG,SACf9P,KAAK,QACLZ,MAAM,UACND,QAAQ,WACR3B,GAAI,CAAEwK,GAAI,MAEZ3K,EAAAA,EAAAA,KAAC4S,EAAAA,EAAI,CACHjV,MAAO4b,EAAelN,EAAQoH,QAC9B9Q,KAAK,QACLZ,MAAOyX,EAAenN,EAAQoH,QAC9B3R,QAAQ,iBAGZ9B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,gBAAgBmC,WAAS,EAAAnE,SACxDsM,EAAQL,cAIVK,EAAQ0H,KAAKlW,OAAS,IACrBmC,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQqY,SAAU,OAAQ1R,IAAK,EAAGzI,GAAI,GAAIL,SAC3DsM,EAAQ0H,KAAKhW,KAAI4W,IAChB3U,EAAAA,EAAAA,KAAC4S,EAAAA,EAAI,CAEHjV,MAAOgX,EACPhS,KAAK,QACLb,QAAQ,WACRgK,MAAM9L,EAAAA,EAAAA,KAACgc,GAAAA,EAAS,KAJXrH,WAWf3U,EAAAA,EAAAA,KAACqC,EAAAA,EAAO,CAAClC,GAAI,CAAEC,GAAI,MAGnB9B,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQmD,eAAgB,gBAAiBlD,WAAY,UAAWpC,SAAA,EAClFzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQC,WAAY,UAAWpC,SAAA,EACjDC,EAAAA,EAAAA,KAACsI,EAAAA,EAAM,CACLC,IAAK8D,EAAQwM,UAAUC,OACvBmD,IAAK5P,EAAQwM,UAAUrc,KACvB2D,GAAI,CAAEqI,MAAO,GAAIC,OAAQ,GAAIkC,GAAI,MAEnC3K,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,gBAAehC,SAC9CsM,EAAQwM,UAAUrc,QAErBwD,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,gBAAgB5B,GAAI,CAAEyD,GAAI,GAAI7D,SAAC,YAGjEC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,gBAAehC,UAncrDmc,EAockB7P,EAAQuH,UAnc/B,IAAIoB,KAAKkH,GACVC,wBAAmB3U,EAAW,CACxC4U,KAAM,UACN/E,MAAO,QACPgF,IAAK,mBAmcarc,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQC,WAAY,UAAWpC,UACjDC,EAAAA,EAAAA,KAACuL,GAAAA,EAAO,CAACC,MAAM,WAAUzL,UACvBzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQC,WAAY,SAAUwI,GAAI,GAAI5K,SAAA,EACxDC,EAAAA,EAAAA,KAACsc,GAAAA,EAAW,CAACjY,SAAS,QAAQtC,MAAM,SAAS5B,GAAI,CAAEwK,GAAI,OACvD3K,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,gBAAehC,SAC9CsM,EAAQyH,iCAnILzH,EAAQ3O,IA1UtBwe,KAwdX,QAGD,E,gHCzxBV,MA6rBA,GA7rB2BK,KAEzB,MAAOC,EAAaC,IAAkBlgB,EAAAA,EAAAA,UAAS,KACxCwG,EAASC,IAAczG,EAAAA,EAAAA,WAAS,IAChCgD,EAAO0D,IAAY1G,EAAAA,EAAAA,UAAS,OAC5BmgB,EAAaC,IAAkBpgB,EAAAA,EAAAA,UAAS,KACxC0b,EAAWC,IAAgB3b,EAAAA,EAAAA,UAAS,IACpCqgB,EAAYC,IAAiBtgB,EAAAA,EAAAA,UAAS,WACtCugB,EAAcC,IAAmBxgB,EAAAA,EAAAA,UAAS,OAC1CygB,EAAoBC,IAAyB1gB,EAAAA,EAAAA,UAAS,OACtD2gB,EAAkBC,IAAuB5gB,EAAAA,EAAAA,WAAS,IAClD6gB,EAAeC,IAAoB9gB,EAAAA,EAAAA,UAAS,CACjDiP,MAAO,GACP6J,QAAS,GACTtB,KAAM,MAED0E,EAAYC,IAAiBnc,EAAAA,EAAAA,UAAS,CAAC,IAG9CsK,EAAAA,EAAAA,YAAU,KACRyW,GAAiB,GAChB,IAGH,MAAMA,EAAkB5e,UACtB,IACEsE,GAAW,GACXC,EAAS,MAGT3D,YAAW,KA8FTmd,EA7FwB,CACtB,CACE/e,GAAI,SACJ8N,MAAO,0CACP6J,QAAS,2KACTkI,OAAQ,CACN7f,GAAI,SACJlB,KAAM,eACNsc,OAAQ,MAEVlF,UAAW,uBACXC,UAAW,uBACX2J,QAAS,GACTC,aAAc,EACd1J,KAAM,CAAC,OAAQ,SAAU,QACzB2J,QAAQ,EACRC,YAAY,EACZlL,SAAU,kBAEZ,CACE/U,GAAI,SACJ8N,MAAO,0BACP6J,QAAS,uKACTkI,OAAQ,CACN7f,GAAI,SACJlB,KAAM,eACNsc,OAAQ,sCAEVlF,UAAW,uBACXC,UAAW,uBACX2J,QAAS,GACTC,aAAc,EACd1J,KAAM,CAAC,UAAW,mBAClB2J,QAAQ,EACRC,YAAY,EACZlL,SAAU,uBAEZ,CACE/U,GAAI,SACJ8N,MAAO,2CACP6J,QAAS,wKACTkI,OAAQ,CACN7f,GAAI,SACJlB,KAAM,aACNsc,OAAQ,sCAEVlF,UAAW,uBACXC,UAAW,uBACX2J,QAAS,GACTC,aAAc,GACd1J,KAAM,CAAC,eAAgB,aACvB2J,QAAQ,EACRC,YAAY,EACZlL,SAAU,WAEZ,CACE/U,GAAI,SACJ8N,MAAO,oCACP6J,QAAS,gJACTkI,OAAQ,CACN7f,GAAI,SACJlB,KAAM,eACNsc,OAAQ,sCAEVlF,UAAW,uBACXC,UAAW,uBACX2J,QAAS,GACTC,aAAc,GACd1J,KAAM,CAAC,UAAW,kBAAmB,eACrC2J,QAAQ,EACRC,YAAY,EACZlL,SAAU,uBAEZ,CACE/U,GAAI,SACJ8N,MAAO,gCACP6J,QAAS,6JACTkI,OAAQ,CACN7f,GAAI,SACJlB,KAAM,eACNsc,OAAQ,MAEVlF,UAAW,uBACXC,UAAW,uBACX2J,QAAS,GACTC,aAAc,EACd1J,KAAM,CAAC,WAAY,UAAW,gBAC9B2J,QAAQ,EACRC,YAAY,EACZlL,SAAU,aAKdzP,GAAW,EAAM,GAChB,IAEL,CAAE,MAAO2B,GACPnF,QAAQD,MAAM,6BAA8BoF,GAC5C1B,EAAS,iDACTD,GAAW,EACb,GA0BI4a,EAAkBA,KACtBb,EAAgB,MAChBE,EAAsB,KAAK,EAIvBY,EAAkBC,IACtBrB,GAAetV,GACbA,EAAKpJ,KAAIggB,GACHA,EAAKrgB,KAAOogB,EACP,IAAKC,EAAMJ,YAAaI,EAAKJ,YAE/BI,MAGXH,GAAiB,EAqBbI,EAAoBC,IACxBpB,EAAcoB,EAAO,EAIjBC,EAAyBA,KAC7Bb,EAAiB,CACf7R,MAAO,GACP6J,QAAS,GACTtB,KAAM,KAER2E,EAAc,CAAC,GACfyE,GAAoB,EAAK,EAIrBgB,EAA0BA,KAC9BhB,GAAoB,EAAM,EAItBiB,EAA6BjgB,IACjC,MAAM,KAAE3B,EAAI,MAAE4B,GAAUD,EAAEE,OAC1Bgf,GAAiBlW,IAAI,IAChBA,EACH,CAAC3K,GAAO4B,MAINqa,EAAWjc,IACbkc,GAAcvR,IAAI,IACbA,EACH,CAAC3K,GAAO,QAEZ,EA2EI6hB,EAAsB7B,EAAYzd,QAAOuf,IAE7C,GAAI5B,EAAa,CACf,MAAM6B,EAAQ7B,EAAYjI,cAC1B,IACG6J,EAAW9S,MAAMiJ,cAAc5P,SAAS0Z,KACxCD,EAAWjJ,QAAQZ,cAAc5P,SAAS0Z,KAC1CD,EAAWvK,KAAKW,MAAKC,GAAOA,EAAIF,cAAc5P,SAAS0Z,KAExD,OAAO,CAEX,CAGA,QAAkB,IAAdtG,IAAoBqG,EAAWZ,YAIjB,IAAdzF,IAAoBqG,EAAWX,eAIjB,IAAd1F,GAA2C,wBAAxBqG,EAAW7L,YAIhB,IAAdwF,GAA2C,mBAAxBqG,EAAW7L,WAIvB,IAIP+L,EAAoB,IAAIH,GAAqBzJ,MAAK,CAACC,EAAGC,KAC1D,OAAQ8H,GACN,IAAK,SAQL,QACE,OAAO,IAAI5H,KAAKF,EAAElB,WAAa,IAAIoB,KAAKH,EAAEjB,WAP5C,IAAK,SACH,OAAO,IAAIoB,KAAKH,EAAEjB,WAAa,IAAIoB,KAAKF,EAAElB,WAC5C,IAAK,eACH,OAAOkB,EAAE0I,QAAU3I,EAAE2I,QACvB,IAAK,iBACH,OAAO1I,EAAE2I,aAAe5I,EAAE4I,aAG9B,IAGF,OACEnf,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAwB,SAAA,EAEFzB,EAAAA,EAAAA,MAACqb,GAAAA,EAAM,CACLC,KAAMsD,EACNrD,QAASsE,EACTxa,SAAS,KACThD,WAAS,EAAAZ,SAAA,EAETC,EAAAA,EAAAA,KAAC8Z,GAAAA,EAAW,CAAA/Z,SAAC,4BACbC,EAAAA,EAAAA,KAAC+Z,GAAAA,EAAa,CAAAha,UACZzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGJ,GAAI,CAAEyB,GAAI,GAAI7B,SAAA,EACxCC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,UAChBC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRC,WAAS,EACThD,MAAM,QACNnB,KAAK,QACL4B,MAAOgf,EAAc5R,MACrB5K,SAAUwd,EACV7e,QAASkZ,EAAWjN,MACpB3K,WAAY4X,EAAWjN,MACvBxG,YAAY,oDACZjE,UAAQ,OAGZf,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,UAChBC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRC,WAAS,EACThD,MAAM,UACNnB,KAAK,UACL4B,MAAOgf,EAAc/H,QACrBzU,SAAUwd,EACV7e,QAASkZ,EAAWpD,QACpBxU,WAAY4X,EAAWpD,QACvBsF,WAAS,EACTC,KAAM,EACN5V,YAAY,qDACZjE,UAAQ,OAGZzC,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,SAAA,EAChBC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRC,WAAS,EACThD,MAAM,OACNqH,YAAY,kCACZoV,QArKUjc,IACtB,MAAMC,EAAQD,EAAEE,OAAOD,MACvB,GAAIA,EAAMic,SAAS,KAAM,CACvB,MAAM1F,EAAMvW,EAAMkc,MAAM,GAAI,GAAGxb,OAC3B6V,IAAQyI,EAAcrJ,KAAKlP,SAAS8P,IACtC0I,GAAiBlW,IAAI,IAChBA,EACH4M,KAAM,IAAI5M,EAAK4M,KAAMY,OAGzBxW,EAAEE,OAAOD,MAAQ,EACnB,GA2JYyC,WAAW,2DAEbb,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQqY,SAAU,OAAQ1R,IAAK,EAAGjH,GAAI,GAAI7B,SAC3Dqd,EAAcrJ,KAAKhW,KAAI4W,IACtB3U,EAAAA,EAAAA,KAAC4S,EAAAA,EAAI,CAEHjV,MAAOgX,EACP6F,SAAUA,IA9JH7F,KACvB0I,GAAiBlW,IAAI,IAChBA,EACH4M,KAAM5M,EAAK4M,KAAKhV,QAAO0b,GAAKA,IAAM9F,OACjC,EA0J6B+F,CAAgB/F,GAChChS,KAAK,SAHAgS,gBAUjBrW,EAAAA,EAAAA,MAACuc,GAAAA,EAAa,CAAA9a,SAAA,EACZC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CAACpB,QAAS8c,EAAwBpe,SAAC,YAG1CC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLpB,QAjJqBod,KAC7B,IAnBmB7f,MACnB,MAAM3B,EAAS,CAAC,EAahB,OAXKmgB,EAAc5R,MAAM1M,SACvB7B,EAAOuO,MAAQ,qBAGZ4R,EAAc/H,QAAQvW,OAEhBse,EAAc/H,QAAQxX,OAAS,KACxCZ,EAAOoY,QAAU,0CAFjBpY,EAAOoY,QAAU,sBAKnBqD,EAAczb,GACwB,IAA/B+B,OAAOC,KAAKhC,GAAQY,MAAY,EAKlCe,GACH,OAIF,MAAM8f,EAAmB,CACvBhhB,GAAI,QAAQsX,KAAKc,QACjBtK,MAAO4R,EAAc5R,MACrB6J,QAAS+H,EAAc/H,QACvBkI,OAAQ,CACN7f,GAAI,eACJlB,KAAM,eACNsc,OAAQ,MAEVlF,WAAW,IAAIoB,MAAOe,cACtBlC,WAAW,IAAImB,MAAOe,cACtByH,QAAS,EACTC,aAAc,EACd1J,KAAMqJ,EAAcrJ,KACpB2J,QAAQ,EACRC,YAAY,EACZlL,SAAU,WAGZgK,GAAetV,GAAQ,CAACuX,KAAqBvX,KAC7CgX,GAAyB,EAwHjBrc,QAAQ,YACRC,MAAM,UAAShC,SAChB,2BAOLzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQmD,eAAgB,gBAAiBlD,WAAY,SAAU/B,GAAI,GAAIL,SAAA,EACzFC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKtD,UAAU,KAAIuB,SAAC,0BAGxCC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLX,QAAQ,YACRC,MAAM,UACNuD,WAAWtF,EAAAA,EAAAA,KAAC+a,GAAAA,EAAO,IACnB1Z,QAAS6c,EAAuBne,SACjC,yBAMHC,EAAAA,EAAAA,KAACwK,EAAAA,EAAK,CAACrK,GAAI,CAAEsK,EAAG,EAAGrK,GAAI,GAAIL,UACzBzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG4B,WAAW,SAAQpC,SAAA,EAC7CC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIke,GAAI,EAAE5e,UACvBC,EAAAA,EAAAA,KAACU,EAAAA,EAAS,CACRC,WAAS,EACTqE,YAAY,wBACZ5G,MAAOse,EACP9b,SA/SgB0D,IAC1BqY,EAAerY,EAAMjG,OAAOD,MAAM,EA+SxBuE,KAAK,QACL3B,WAAY,CACVqI,gBACErJ,EAAAA,EAAAA,KAACkB,EAAAA,EAAc,CAACC,SAAS,QAAOpB,UAC9BC,EAAAA,EAAAA,KAAC4e,GAAAA,EAAU,YAMrB5e,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIke,GAAI,EAAE5e,UACvBzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQC,WAAY,SAAUkD,eAAgB,CAAE5E,GAAI,aAAcke,GAAI,aAAe5e,SAAA,EACvGC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQ3B,GAAI,CAAEwK,GAAI,GAAI5K,SAAC,cAG3CzB,EAAAA,EAAAA,MAACmE,EAAAA,EAAM,CACLE,KAAK,QACLkc,SAAS7e,EAAAA,EAAAA,KAAC8e,GAAAA,EAAQ,IAClBzd,QAAUlD,GAAM4e,EAAgB5e,EAAE4gB,eAAehf,SAAA,CAEjC,WAAf6c,GAA2B,SACZ,WAAfA,GAA2B,SACZ,iBAAfA,GAAiC,eAClB,mBAAfA,GAAmC,qBAEtCte,EAAAA,EAAAA,MAAC0gB,GAAAA,EAAI,CACHC,SAAUnC,EACVlD,KAAMsF,QAAQpC,KAAkBE,EAChCnD,QAASA,IAAMkD,EAAgB,MAAMhd,SAAA,EAErCC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC9Y,QAASA,IAAM2c,EAAiB,UAAUje,SAAC,YACrDC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC9Y,QAASA,IAAM2c,EAAiB,UAAUje,SAAC,YACrDC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC9Y,QAASA,IAAM2c,EAAiB,gBAAgBje,SAAC,kBAC3DC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC9Y,QAASA,IAAM2c,EAAiB,kBAAkBje,SAAC,iCAQvEC,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC4B,GAAI,CAAE6a,aAAc,EAAGC,YAAa,UAAW7a,GAAI,GAAIL,UAC1DzB,EAAAA,EAAAA,MAAC4c,EAAAA,EAAI,CACH9c,MAAO6Z,EACPrX,SAjWgBua,CAAC7W,EAAO8W,KAC9BlD,EAAakD,EAAS,EAiWhB,aAAW,aAAYrb,SAAA,EAEvBC,EAAAA,EAAAA,KAACqb,EAAAA,EAAG,CAAC1d,MAAM,qBACXqC,EAAAA,EAAAA,KAACqb,EAAAA,EAAG,CAAC1d,MAAM,YACXqC,EAAAA,EAAAA,KAACqb,EAAAA,EAAG,CAAC1d,MAAM,gBACXqC,EAAAA,EAAAA,KAACqb,EAAAA,EAAG,CAAC1d,MAAM,yBACXqC,EAAAA,EAAAA,KAACqb,EAAAA,EAAG,CAAC1d,MAAM,wBAKd4B,IACCS,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,SAAS,QAAQC,GAAI,CAAEC,GAAI,GAAIL,SACnCR,IAKJwD,GACC/C,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQmD,eAAgB,SAAU+H,GAAI,GAAIrN,UAC5DC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAgB,MAEc,IAA/B2b,EAAoBxgB,QACtBS,EAAAA,EAAAA,MAACkM,EAAAA,EAAK,CAACrK,GAAI,CAAEsK,EAAG,EAAGpC,UAAW,UAAWtI,SAAA,EACvCC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKC,MAAM,gBAAgBiC,cAAY,EAAAjE,SAAC,0BAG5DC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,gBAAgBmC,WAAS,EAAAnE,SACxD2c,EACC,6CACc,IAAdzE,EACE,gCACc,IAAdA,EACE,mCACc,IAAdA,EACE,sCACc,IAAdA,EACE,oCACA,8CAGZjY,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLX,QAAQ,WACRC,MAAM,UACNuD,WAAWtF,EAAAA,EAAAA,KAAC+a,GAAAA,EAAO,IACnB1Z,QAAS6c,EACT/d,GAAI,CAAEyB,GAAI,GAAI7B,SACf,+BAKHC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAER,SACxBye,EAAkBzgB,KAAIugB,IACrBte,SAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,UAChBzB,EAAAA,EAAAA,MAACkM,EAAAA,EAAK,CACJ1I,QAAQ,WACR3B,GAAI,CACFsK,EAAG,EACHtJ,SAAU,WACVuH,QAAS4V,EAAWZ,OAAS,4BAA8B,cAC3DyB,OAAQb,EAAWZ,OAAS,qCAAuC,gCACnElR,WAAY,kCACZ,UAAW,CACT3I,UAAW,EACX4I,UAAW,qBAEb1M,SAAA,EAGFzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQmD,eAAgB,gBAAiBjF,GAAI,GAAIL,SAAA,EACnEzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQC,WAAY,UAAWpC,SAAA,EACjDC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,YAAY4K,WAAW,SAASvM,GAAI,CAAEwK,GAAI,GAAI5K,SAC/Due,EAAW9S,QAEb8S,EAAWZ,SACV1d,EAAAA,EAAAA,KAAC4S,EAAAA,EAAI,CACHjV,MAAM,SACNgF,KAAK,QACLZ,MAAM,UACND,QAAQ,WACR3B,GAAI,CAAEwK,GAAI,SAIhB3K,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CACTuB,KAAK,QACLtB,QAAUlD,GA/aLihB,EAAC9a,EAAOga,KAC7BvB,EAAgBzY,EAAMya,eACtB9B,EAAsBqB,EAAW,EA6aDc,CAAejhB,EAAGmgB,GAAYve,UAE9CC,EAAAA,EAAAA,KAACqf,GAAAA,EAAY,UAKjB/gB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQC,WAAY,SAAU/B,GAAI,GAAIL,SAAA,EACxDC,EAAAA,EAAAA,KAACsf,GAAAA,EAAc,CAACnf,GAAI,CAAEqF,SAAU,IAAKzF,UACnCC,EAAAA,EAAAA,KAACsI,EAAAA,EAAM,CACLC,IAAK+V,EAAWf,OAAOzE,OACvBmD,IAAKqC,EAAWf,OAAO/gB,KACvB2D,GAAI,CAAEqI,MAAO,GAAIC,OAAQ,SAG7BzI,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,gBAAehC,SAC9Cue,EAAWf,OAAO/gB,QAErBwD,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,gBAAgB5B,GAAI,CAAEyD,GAAI,GAAI7D,SAAC,YAGjEC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,gBAAehC,UApd7Cmc,EAqdUoC,EAAW1K,UAndhC,IAAIoB,KAAKkH,GAAYC,wBAAmB3U,EAD/B,CAAE4U,KAAM,UAAW/E,MAAO,QAASgF,IAAK,gBAsd1Crc,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,gBAAgB5B,GAAI,CAAEyD,GAAI,GAAI7D,SAAC,YAGjEC,EAAAA,EAAAA,KAAC4S,EAAAA,EAAI,CACHjV,MAAO2gB,EAAW7L,SAClB9P,KAAK,QACLZ,MAAM,UACND,QAAQ,iBAKZ9B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQoC,WAAS,EAAAnE,SAClCue,EAAWjJ,QAAQxX,OAAS,IAC3B,GAAGygB,EAAWjJ,QAAQiF,MAAM,EAAG,UAC/BgE,EAAWjJ,UAKdiJ,EAAWvK,KAAKlW,OAAS,IACxBmC,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQqY,SAAU,OAAQ1R,IAAK,EAAGzI,GAAI,GAAIL,SAC3Due,EAAWvK,KAAKhW,KAAI4W,IACnB3U,EAAAA,EAAAA,KAAC4S,EAAAA,EAAI,CAEHjV,MAAOgX,EACPhS,KAAK,QACLb,QAAQ,YAHH6S,QAUbrW,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQC,WAAY,SAAUkD,eAAgB,iBAAkBtF,SAAA,EAClFzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQC,WAAY,UAAWpC,SAAA,EACjDC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLE,KAAK,QACL2C,WAAWtF,EAAAA,EAAAA,KAACuf,GAAAA,EAAW,IACvBle,QAASA,KAAMme,OArdb1B,EAqd0BQ,EAAW5gB,QApdzD+e,GAAetV,GACbA,EAAKpJ,KAAIggB,GACHA,EAAKrgB,KAAOogB,EAGP,IACFC,EACHP,QAASO,EAAKP,QAAU,GAGrBO,MAXSD,KAqdyC,EAAA/d,SAE1Cue,EAAWd,WAEdxd,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLE,KAAK,QACL2C,WAAWtF,EAAAA,EAAAA,KAACsc,GAAAA,EAAW,IACvBnc,GAAI,CAAE6K,GAAI,GAAIjL,SAEbue,EAAWb,mBAIhBzd,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAAwB,SACDue,EAAWX,YACV3d,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CACTuB,KAAK,QACLZ,MAAM,UACNV,QAASA,IAAMwc,EAAeS,EAAW5gB,IAAIqC,UAE7CC,EAAAA,EAAAA,KAACyf,GAAAA,EAAc,OAGjBzf,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CACTuB,KAAK,QACLtB,QAASA,IAAMwc,EAAeS,EAAW5gB,IAAIqC,UAE7CC,EAAAA,EAAAA,KAAC0f,GAAAA,EAAY,eA3HDpB,EAAW5gB,IA9ZzBwe,KAgiBX,OAKL5d,EAAAA,EAAAA,MAAC0gB,GAAAA,EAAI,CACHC,SAAUnC,EACVlD,KAAMsF,QAAQpC,IAAiBoC,QAAQlC,GACvCnD,QAAS+D,EAAgB7d,SAAA,EAEzBC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC9Y,QAASA,IAAMwc,EAAiC,OAAlBb,QAAkB,IAAlBA,OAAkB,EAAlBA,EAAoBtf,IAAIqC,SAC3C,OAAlBid,QAAkB,IAAlBA,GAAAA,EAAoBW,WAAa,kBAAoB,cAExD3d,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAApa,SAAC,qBACVC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAApa,SAAC,WACVC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAApa,SAAC,gBAER,E,6VCpuBV,MAAM4f,GAAW,CAEfC,aAAc,CACZ,CAAEC,KAAM,aAAcvI,MAAO,IAC7B,CAAEuI,KAAM,aAAcvI,MAAO,IAC7B,CAAEuI,KAAM,aAAcvI,MAAO,IAC7B,CAAEuI,KAAM,aAAcvI,MAAO,IAC7B,CAAEuI,KAAM,aAAcvI,MAAO,KAC7B,CAAEuI,KAAM,aAAcvI,MAAO,KAC7B,CAAEuI,KAAM,aAAcvI,MAAO,KAC7B,CAAEuI,KAAM,aAAcvI,MAAO,MAI/BwI,aAAc,CACZ,CAAEzT,QAAS,iBAAkB0T,MAAO,IAAKC,OAAQ,IACjD,CAAE3T,QAAS,iBAAkB0T,MAAO,IAAKC,OAAQ,GACjD,CAAE3T,QAAS,kBAAmB0T,MAAO,IAAKC,OAAQ,IAClD,CAAE3T,QAAS,oBAAqB0T,MAAO,IAAKC,OAAQ,IACpD,CAAE3T,QAAS,yBAA0B0T,MAAO,IAAKC,OAAQ,KAI3DC,kBAAmB,CACjB,CAAExN,SAAU,QAASyN,SAAU,GAAIC,QAAS,GAAIC,SAAU,IAC1D,CAAE3N,SAAU,cAAeyN,SAAU,GAAIC,QAAS,GAAIC,SAAU,IAChE,CAAE3N,SAAU,WAAYyN,SAAU,GAAIC,QAAS,GAAIC,SAAU,IAC7D,CAAE3N,SAAU,UAAWyN,SAAU,GAAIC,QAAS,GAAIC,SAAU,IAI9DC,cAAe,CACb,CAAEC,KAAM,SAAUC,KAAM,IACxB,CAAED,KAAM,SAAUC,KAAM,IACxB,CAAED,KAAM,SAAUC,KAAM,IACxB,CAAED,KAAM,SAAUC,KAAM,KAI1BC,eAAgB,CACd,CAAEC,OAAQ,gBAAiBC,MAAO,KAClC,CAAED,OAAQ,SAAUC,MAAO,KAC3B,CAAED,OAAQ,OAAQC,MAAO,KACzB,CAAED,OAAQ,gBAAiBC,MAAO,IAClC,CAAED,OAAQ,SAAUC,MAAO,IAC3B,CAAED,OAAQ,UAAWC,MAAO,KAI9BC,WAAY,CACV,CAAE/gB,KAAM,UAAWghB,WAAY,IAC/B,CAAEhhB,KAAM,SAAUghB,WAAY,IAC9B,CAAEhhB,KAAM,SAAUghB,WAAY,KAIhCC,YAAa,CACX,CAAErkB,KAAM,SAAUokB,WAAY,IAC9B,CAAEpkB,KAAM,UAAWokB,WAAY,IAC/B,CAAEpkB,KAAM,SAAUokB,WAAY,IAC9B,CAAEpkB,KAAM,OAAQokB,WAAY,GAC5B,CAAEpkB,KAAM,QAASokB,WAAY,IAI/BE,UAAW,CACT,CAAElhB,KAAM,cAAe0X,MAAO,GAAIyJ,SAAU,IAC5C,CAAEnhB,KAAM,mBAAoB0X,MAAO,GAAIyJ,SAAU,IACjD,CAAEnhB,KAAM,eAAgB0X,MAAO,GAAIyJ,SAAU,IAC7C,CAAEnhB,KAAM,qBAAsB0X,MAAO,GAAIyJ,SAAU,MAKjDC,GACgB,GADhBA,GAIuB,GAgqB7B,MAEA,GAFyB,IA7pBzB,MAKEC,OAAAA,GAOE,OALAzhB,QAAQ0I,IAAI,kCAGZqN,KAAK2L,uBAEE,CACT,CAKAA,mBAAAA,GAEwB,qBAAXC,SAETA,OAAOC,iBAAiB,QAAQ,KAC9B7L,KAAK8L,WAAW,YAAa,CAC3BC,WAAYC,SAAS/V,MACrBgW,cAAeL,OAAOM,SAASC,KAC/BC,UAAWR,OAAOM,SAASG,UAC3B,IAIJL,SAASH,iBAAiB,SAAU9c,IAClC,MAAMjG,EAASiG,EAAMjG,QAGE,WAAnBA,EAAOwjB,SACa,MAAnBxjB,EAAOwjB,SAAmD,WAAhCxjB,EAAOyjB,aAAa,UACjDvM,KAAK8L,WAAW,eAAgB,CAC9BU,UAAW1jB,EAAOX,IAAM,UACxBskB,YAAa3jB,EAAO4jB,WAAa,UACjCN,UAAWR,OAAOM,SAASG,UAE/B,IAGN,CAOAP,UAAAA,CAAWa,GAA8B,IAAnBC,EAAW5a,UAAA1J,OAAA,QAAA2J,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EASnC,OAPA/H,QAAQ0I,IAAI,4BAA4Bga,IAAaC,GAG/B,qBAAXhB,QAA0BA,OAAOiB,MAC1CjB,OAAOiB,KAAK,QAASF,EAAWC,IAG3B,CACT,CAOA,qBAAME,GAA2B,IAAXC,EAAI/a,UAAA1J,OAAA,QAAA2J,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC3B,IAGE,UADsBrI,EAAAA,EAAY8R,UAEhC,MAAM,IAAIiE,MAAM,yBAOlB,OAFa0K,GAASC,aAAatF,OAAOgI,EAG5C,CAAE,MAAO/iB,GAEP,MADAC,QAAQD,MAAM,qCAAsCA,GAC9CA,CACR,CACF,CAOA,qBAAMgjB,GAA4B,IAAZC,EAAKjb,UAAA1J,OAAA,QAAA2J,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC5B,IAGE,UADsBrI,EAAAA,EAAY8R,UAEhC,MAAM,IAAIiE,MAAM,yBAOlB,OAFa0K,GAASG,aAAaxF,MAAM,EAAGkI,EAG9C,CAAE,MAAOjjB,GAEP,MADAC,QAAQD,MAAM,qCAAsCA,GAC9CA,CACR,CACF,CAMA,0BAAMkjB,GACJ,IAGE,UADsBvjB,EAAAA,EAAY8R,UAEhC,MAAM,IAAIiE,MAAM,yBAKlB,OAAO0K,GAASM,iBAClB,CAAE,MAAO1gB,GAEP,MADAC,QAAQD,MAAM,0CAA2CA,GACnDA,CACR,CACF,CAMA,sBAAMmjB,GACJ,IAGE,UADsBxjB,EAAAA,EAAY8R,UAEhC,MAAM,IAAIiE,MAAM,yBAKlB,OAAO0K,GAASU,aAClB,CAAE,MAAO9gB,GAEP,MADAC,QAAQD,MAAM,iCAAkCA,GAC1CA,CACR,CACF,CAMA,uBAAMojB,GACJ,IAGE,UADsBzjB,EAAAA,EAAY8R,UAEhC,MAAM,IAAIiE,MAAM,yBAKlB,OAAO0K,GAASa,cAClB,CAAE,MAAOjhB,GAEP,MADAC,QAAQD,MAAM,kCAAmCA,GAC3CA,CACR,CACF,CAMA,mBAAMqjB,GACJ,IAGE,UADsB1jB,EAAAA,EAAY8R,UAEhC,MAAM,IAAIiE,MAAM,yBAKlB,OAAO0K,GAASgB,UAClB,CAAE,MAAOphB,GAEP,MADAC,QAAQD,MAAM,8BAA+BA,GACvCA,CACR,CACF,CAMA,oBAAMsjB,GACJ,IAGE,UADsB3jB,EAAAA,EAAY8R,UAEhC,MAAM,IAAIiE,MAAM,yBAKlB,OAAO0K,GAASkB,WAClB,CAAE,MAAOthB,GAEP,MADAC,QAAQD,MAAM,+BAAgCA,GACxCA,CACR,CACF,CAMA,kBAAMujB,GACJ,IAGE,UADsB5jB,EAAAA,EAAY8R,UAEhC,MAAM,IAAIiE,MAAM,yBAKlB,OAAO0K,GAASmB,SAClB,CAAE,MAAOvhB,GAEP,MADAC,QAAQD,MAAM,6BAA8BA,GACtCA,CACR,CACF,CAMA,qBAAMwjB,GACJ,IAGE,UADsB7jB,EAAAA,EAAY8R,UAEhC,MAAM,IAAIiE,MAAM,yBAKlB,MAAM+N,EAAY,GAGZpD,EAAeD,GAASC,aAC9B,IAAK,IAAIqD,EAAI,EAAGA,EAAIrD,EAAa/hB,OAAQolB,IAAK,CAC5C,MAAMC,EAAYtD,EAAaqD,EAAE,GAAG3L,MAE9B6L,GADYvD,EAAaqD,GAAG3L,MACE4L,GAAaA,EAAa,IAE1DE,KAAKC,IAAIF,GAAiBnC,IAC5BgC,EAAUvZ,KAAK,CACb7J,KAAM,gBACNigB,KAAMD,EAAaqD,GAAGpD,KACtBhgB,QAAS,WAAWsjB,EAAgB,EAAI,WAAa,gCAAgCC,KAAKC,IAAIF,EAAcG,QAAQ,QACpHpjB,SAAUijB,EAAgB,EAAI,OAAS,WAG7C,CAGA,MAAMI,EAAe5D,GAASM,kBAC9B,IAAK,MAAMxN,KAAY8Q,EAAc,CACnC,MAAMC,EAAQ/Q,EAASyN,SAAWzN,EAAS0N,QAAU1N,EAAS2N,SACxDqD,EAAsBhR,EAAS2N,SAAWoD,EAAS,IAErDC,EAAqBzC,IACvBgC,EAAUvZ,KAAK,CACb7J,KAAM,WACN6S,SAAUA,EAASA,SACnB5S,QAAS,6BAA6B4S,EAASA,sBAAsBgR,EAAmBH,QAAQ,OAChGpjB,SAAU,WAGhB,CAEA,OAAO8iB,CACT,CAAE,MAAOzjB,GAEP,MADAC,QAAQD,MAAM,6BAA8BA,GACtCA,CACR,CACF,CAOA,gBAAMmkB,GAA6B,IAAlBC,EAAMpc,UAAA1J,OAAA,QAAA2J,IAAAD,UAAA,GAAAA,UAAA,GAAG,OACxB,IAGE,UADsBrI,EAAAA,EAAY8R,UAEhC,MAAM,IAAIiE,MAAM,yBAIlB,MAAM2O,EAAU,CACdhE,aAAcD,GAASC,aACvBE,aAAcH,GAASG,aACvBG,kBAAmBN,GAASM,kBAC5BI,cAAeV,GAASU,cACxBG,eAAgBb,GAASa,eACzBG,WAAYhB,GAASgB,WACrBE,YAAalB,GAASkB,YACtBC,UAAWnB,GAASmB,UACpB+C,YAAY,IAAI7O,MAAOe,cACvB+N,aAAcH,GAGhB,MAAe,QAAXA,EAEK,CACLjkB,KAAM,mCACNqkB,SAAU,0BAAyB,IAAI/O,MAAOe,oBAC9CiO,YAAa,YAIV,CACLtkB,KAAMkkB,EACNG,SAAU,0BAAyB,IAAI/O,MAAOe,qBAC9CiO,YAAa,mBAEjB,CAAE,MAAOzkB,GAEP,MADAC,QAAQD,MAAM,wBAAyBA,GACjCA,CACR,CACF,CASA,0BAAM0kB,CAAqBC,EAAWC,GAAwB,IAAf3Q,EAAOjM,UAAA1J,OAAA,QAAA2J,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAIxD/H,QAAQ0I,IAAI,4CAA6CsL,SAGnD,IAAIwC,SAAQC,GAAW3W,WAAW2W,EAAS,OAGjD,MAAMmO,EAAaC,MAAMC,KAAK,CAAEzmB,OAAQ,KAAME,KAAI,CAACwmB,EAAGjY,KACpD,MAAMkY,EAAgB,IAAIxP,KACxB,IAAIA,KAAKkP,GAAWO,UACpBrB,KAAKsB,UAAY,IAAI1P,KAAKmP,GAASM,UAAY,IAAIzP,KAAKkP,GAAWO,YAG/DE,EAAWvB,KAAKwB,MAAsB,IAAhBxB,KAAKsB,UAAkB,GAC7CG,EAAWzB,KAAKsB,SAAW,GAAM,YAAc,MAC/CI,EAAS,CAAC,UAAW,SAAU,UAAU1B,KAAKwB,MAAsB,EAAhBxB,KAAKsB,WAEzDK,EAAQ,GACRC,EAAW5B,KAAKwB,MAAsB,EAAhBxB,KAAKsB,UAAgB,EAC3CO,EAAgB,CAAC,YAAa,SAAU,UAAW,WAAY,gBAAiB,eAAgB,YAEtG,IAAK,IAAIhC,EAAI,EAAGA,EAAI+B,EAAU/B,IAAK,CACjC,MAAMiC,EAAOD,EAAc7B,KAAKwB,MAAMxB,KAAKsB,SAAWO,EAAcpnB,SAC/DknB,EAAMlgB,SAASqgB,IAClBH,EAAMtb,KAAKyb,EAEf,CAEA,MAAO,CACLxnB,GAAI,OAAO,IAAW4O,GAAO6Y,SAAS,MACtCtF,KAAM2E,EAAczO,cACpB4O,SAAUA,EACVhR,OAAQyP,KAAKsB,SAAW,GAAM,QAAQtB,KAAKwB,MAAsB,IAAhBxB,KAAKsB,YAAqB,KAC3EG,SAAUA,EACVC,OAAQA,EACRM,QAAS,CAAC,SAAU,UAAW,SAAU,QAAQhC,KAAKwB,MAAsB,EAAhBxB,KAAKsB,WACjEW,QAAS,CAAC,gBAAiB,iBAAkB,SAAU,UAAW,SAAU,QAAS,aAAajC,KAAKwB,MAAsB,EAAhBxB,KAAKsB,WAClHK,MAAOA,EACPO,IAAK,uBAAuBP,EAAM,KACnC,IAIH,IAAIQ,EAAqB,IAAInB,GAU7B,GARI5Q,EAAQqR,UAAiC,QAArBrR,EAAQqR,WAC9BU,EAAqBA,EAAmBxmB,QAAO0W,GAAKA,EAAEoP,WAAarR,EAAQqR,YAGzErR,EAAQsR,QAA6B,QAAnBtR,EAAQsR,SAC5BS,EAAqBA,EAAmBxmB,QAAO0W,GAAKA,EAAEqP,SAAWtR,EAAQsR,UAGvEtR,EAAQmR,UAAiC,QAArBnR,EAAQmR,SAC9B,OAAOnR,EAAQmR,UACb,IAAK,QACHY,EAAqBA,EAAmBxmB,QAAO0W,GAAKA,EAAEkP,SAAW,KACjE,MACF,IAAK,SACHY,EAAqBA,EAAmBxmB,QAAO0W,GAAKA,EAAEkP,UAAY,IAAMlP,EAAEkP,UAAY,MACtF,MACF,IAAK,OACHY,EAAqBA,EAAmBxmB,QAAO0W,GAAKA,EAAEkP,SAAW,MASvE,GAJInR,EAAQ0R,MAAyB,QAAjB1R,EAAQ0R,OAC1BK,EAAqBA,EAAmBxmB,QAAO0W,GAAKA,EAAEsP,MAAMlgB,SAAS2O,EAAQ0R,SAG3E1R,EAAQgB,OAAQ,CAClB,MAAMgR,EAAchS,EAAQgB,OAAOC,cACnC8Q,EAAqBA,EAAmBxmB,QAAO0W,GAC5CA,EAAE9B,QAAU8B,EAAE9B,OAAOc,cAAc5P,SAAS2gB,IAC7C/P,EAAEsP,MAAMrQ,MAAKjK,GAAKA,EAAEgK,cAAc5P,SAAS2gB,MAC3C/P,EAAE6P,IAAI7Q,cAAc5P,SAAS2gB,IAEjC,CAGAD,EAAmB3Q,MAAK,CAACC,EAAGC,IAAM,IAAIE,KAAKF,EAAE+K,MAAQ,IAAI7K,KAAKH,EAAEgL,QAGhE,MAAMqF,EAAO1R,EAAQ0R,MAAQ,EACvB1C,EAAQhP,EAAQgP,OAAS,GACzBiD,GAAUP,EAAO,GAAK1C,EAI5B,MAAO,CACL4B,WAH0BmB,EAAmBjL,MAAMmL,EAAQA,EAASjD,GAIpEgB,MAAO+B,EAAmB1nB,OAE9B,CAWA,oBAAM6nB,CAAeC,EAAQC,EAAiB1B,EAAWC,EAAS0B,GAEhErmB,QAAQ0I,IAAI,kCAAkCyd,0BAA+BC,WAGvE,IAAI5P,SAAQC,GAAW3W,WAAW2W,EAAS,OAGjD,MAAMzN,EAAQ,KACRC,EAAS,KACTqd,EAAY1C,KAAKwB,MAAsB,IAAhBxB,KAAKsB,UAAkB,IA6BpD,MAAO,CACLqB,WAHoB,gBAAgBJ,QAIpCK,aA7BmB3B,MAAMC,KAAK,CAAEzmB,OAAQioB,IAAa/nB,KAAI,KACzD,IAAIkoB,EAAGC,EAGP,GAAI9C,KAAKsB,SAAW,GAAK,CAEvB,MAAMyB,EAAwC,IAA7B/C,KAAKwB,MAAsB,EAAhBxB,KAAKsB,UAA+Blc,IAC1D4d,EAAwC,IAA7BhD,KAAKwB,MAAsB,EAAhBxB,KAAKsB,UAAgCjc,IAEjEwd,EAAI7C,KAAKwB,MAAMuB,EAA+B,KAAnB/C,KAAKsB,SAAW,KAC3CwB,EAAI9C,KAAKwB,MAAMwB,EAA+B,KAAnBhD,KAAKsB,SAAW,IAC7C,MAEEuB,EAAI7C,KAAKwB,MAAMxB,KAAKsB,SAAWlc,GAC/B0d,EAAI9C,KAAKwB,MAAMxB,KAAKsB,SAAWjc,GAGjC,MAAO,CACLwd,EAAGA,EACHC,EAAGA,EACH9nB,MAAOglB,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,EACzC,IAUL,CAWA,2BAAM2B,CAAsBV,EAAQC,EAAiB1B,EAAWC,EAAS0B,GAQvE,OANArmB,QAAQ0I,IAAI,yCAAyCyd,0BAA+BC,WAG9E,IAAI5P,SAAQC,GAAW3W,WAAW2W,EAAS,OAG1C,CACLqQ,kBAAmBlD,KAAKwB,MAAsB,IAAhBxB,KAAKsB,UAAmB,IACtD6B,YAAanD,KAAKwB,MAAsB,IAAhBxB,KAAKsB,UAAkB,IAC/C8B,iBAAkBpD,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,GACnD+B,sBAAuB,CAAC,gBAAiB,aAAc,kBAAmB,eAAgB,iBAAiBrD,KAAKwB,MAAsB,EAAhBxB,KAAKsB,WAE/H,CASA,kBAAMgC,CAAaxC,EAAWC,GAAkC,IAAzBwC,EAASpf,UAAA1J,OAAA,QAAA2J,IAAAD,UAAA,GAAAA,UAAA,GAAG,WAOjD,OANA/H,QAAQ0I,IAAI,4BAA4Bgc,QAAgBC,oBAA0BwC,WAG5E,IAAI3Q,SAAQC,GAAW3W,WAAW2W,EAAS,OAG1C,CACL2Q,WAAY,CACVxoB,MAAOglB,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,GACxCmC,MAAO,CAAC,KAAM,OAAQ,UAAUzD,KAAKwB,MAAsB,EAAhBxB,KAAKsB,WAChD3hB,SAAS,EACTxD,MAAO,MAETunB,YAAa,CACX1oB,MAAOglB,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,GACxCmC,MAAO,CAAC,KAAM,SAAU,QAAQzD,KAAKwB,MAAsB,EAAhBxB,KAAKsB,WAChD3hB,SAAS,EACTxD,MAAO,MAETwnB,UAAW,CACT3oB,MAAOglB,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,EACxCmC,MAAO,CAAC,OAAQ,SAAU,MAAMzD,KAAKwB,MAAsB,EAAhBxB,KAAKsB,WAChD3hB,SAAS,EACTxD,MAAO,MAETynB,kBAAmB,CACjB5oB,MAAOglB,KAAKwB,MAAsB,EAAhBxB,KAAKsB,UAAgB,EACvCmC,MAAO,CAAC,KAAM,SAAU,QAAQzD,KAAKwB,MAAsB,EAAhBxB,KAAKsB,WAChD3hB,SAAS,EACTxD,MAAO,MAET0nB,mBAAoB,CAClB7oB,MAAOglB,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,GACxCmC,MAAO,CAAC,OAAQ,SAAU,MAAMzD,KAAKwB,MAAsB,EAAhBxB,KAAKsB,WAChD3hB,SAAS,EACTxD,MAAO,MAGb,CAQA,4BAAM2nB,CAAuBhD,EAAWC,GACtC3kB,QAAQ0I,IAAI,uCAAuCgc,QAAgBC,WAG7D,IAAInO,SAAQC,GAAW3W,WAAW2W,EAAS,OAgBjD,MAbmB,CACjB,cACA,kBACA,YACA,gBACA,eACA,iBACA,cACA,kBACA,uBACA,oBAGgBlY,KAAI,CAACvB,EAAM8P,KAAK,CAChC5O,GAAI4O,EAAQ,EACZ9P,OACA2qB,WAAY/D,KAAKwB,MAAsB,IAAhBxB,KAAKsB,UAAmB,IAC/C0C,aAAchE,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,EAC/CqC,UAAW3D,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAC3B2C,aAAcjE,KAAKwB,MAAsB,EAAhBxB,KAAKsB,UAAgB,KAElD,CAQA,4BAAM4C,CAAuBpD,EAAWC,GACtC3kB,QAAQ0I,IAAI,wCAAwCgc,QAAgBC,WAG9D,IAAInO,SAAQC,GAAW3W,WAAW2W,EAAS,OAGjD,MAAMsR,EAAQ,IAAIvS,KAAKkP,GACjBsD,EAAM,IAAIxS,KAAKmP,GACfsD,EAAWrE,KAAKsE,OAAOF,EAAMD,GAAK,OAClCzB,EAAY1C,KAAKuE,IAAIF,EAAU,IAUrC,MAAO,CACLG,OARavD,MAAMC,KAAK,CAAEzmB,OAAQioB,IAAa/nB,KAAI,CAACwmB,EAAGtB,KACvD,MAAMpD,EAAO,IAAI7K,KAAKuS,GAEtB,OADA1H,EAAKgI,QAAQhI,EAAKiI,UAAY1E,KAAKsE,MAAMzE,GAAKwE,EAAW3B,KAClDjG,EAAK1D,mBAAmB,QAAS,CAAE9E,MAAO,QAASgF,IAAK,WAAY,IAM3E0L,SAAU,CACR,CACEpqB,MAAO,mBACP+B,KAAM2kB,MAAMC,KAAK,CAAEzmB,OAAQioB,IAAa/nB,KAAI,IAAMqlB,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,KACnFzJ,YAAa,UACb+M,gBAAiB,yBACjBC,QAAS,GACTC,MAAM,GAER,CACEvqB,MAAO,iBACP+B,KAAM2kB,MAAMC,KAAK,CAAEzmB,OAAQioB,IAAa/nB,KAAI,IAAMqlB,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,IACnFzJ,YAAa,UACb+M,gBAAiB,yBACjBC,QAAS,GACTC,MAAM,GAER,CACEvqB,MAAO,qBACP+B,KAAM2kB,MAAMC,KAAK,CAAEzmB,OAAQioB,IAAa/nB,KAAI,IAAMqlB,KAAKwB,MAAsB,EAAhBxB,KAAKsB,UAAgB,IAClFzJ,YAAa,UACb+M,gBAAiB,0BACjBC,QAAS,GACTC,MAAM,IAId,GCjvBF,GAAiC,kCAAjC,GAAiF,+BAAjF,GAA8H,+BAA9H,GAA4K,gCAA5K,GAA+N,oCAA/N,GAAkR,gCAAlR,GAA0jB,gCAA1jB,GAA2pB,+BAA3pB,GAAwsB,+BAAxsB,GAAyhC,mCAAzhC,GAA2kC,gCAA3kC,GAA8nC,oCAA9nC,GAAkrC,iCAAlrC,GAAguC,8B,6JCuNhuC,SAjNA,MAME,iCAAajE,GAAoC,IAAfzQ,EAAOjM,UAAA1J,OAAA,QAAA2J,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3C,IAIE,aAHuB4gB,GAAAA,EAAM1gB,IAAI,GAAG4L,wBAAmC,CACrE+U,OAAQ5U,KAEM9T,IAClB,CAAE,MAAOH,GAEP,MADAC,QAAQD,MAAM,qCAAsCA,GAC9CA,CACR,CACF,CAOA,gCAAa8oB,CAAoBC,GAC/B,IAEE,aADuBH,GAAAA,EAAM1gB,IAAI,GAAG4L,yBAAmCiV,MACvD5oB,IAClB,CAAE,MAAOH,GAEP,MADAC,QAAQD,MAAM,oCAAoC+oB,KAAc/oB,GAC1DA,CACR,CACF,CAQA,wBAAagpB,CAAYD,EAAWE,GAClC,IAKE,aAJuBL,GAAAA,EAAM3jB,KAC3B,GAAG6O,yBAAmCiV,cACtCE,IAEc9oB,IAClB,CAAE,MAAOH,GAEP,MADAC,QAAQD,MAAM,yBAA0BA,GAClCA,CACR,CACF,CAQA,wBAAakpB,CAAYH,EAAWI,GAClC,IAKE,aAJuBP,GAAAA,EAAM3jB,KAC3B,GAAG6O,yBAAmCiV,WACtCI,IAEchpB,IAClB,CAAE,MAAOH,GAEP,MADAC,QAAQD,MAAM,yBAA0BA,GAClCA,CACR,CACF,CAOA,8BAAaopB,CAAkBL,GAC7B,IACE,MAAM7oB,QAAiB0oB,GAAAA,EAAM1gB,IAC3B,GAAG4L,yBAAmCiV,WACtC,CAAEM,aAAc,SAIZtD,EAAMnE,OAAOhZ,IAAIC,gBAAgB,IAAIygB,KAAK,CAACppB,EAASC,QACpDopB,EAAOvH,SAASwH,cAAc,KAOpC,OANAD,EAAKpH,KAAO4D,EACZwD,EAAKE,aAAa,WAAY,WAAWV,UACzC/G,SAAS0H,KAAKC,YAAYJ,GAC1BA,EAAKK,QACLL,EAAKM,SAEE3pB,EAASC,IAClB,CAAE,MAAOH,GAEP,MADAC,QAAQD,MAAM,gCAAiCA,GACzCA,CACR,CACF,CAOA,2BAAa8pB,GAA8B,IAAfC,EAAO/hB,UAAA1J,OAAA,QAAA2J,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACrC,IACE,MAAMgiB,EAAW,CACfC,WAAW,IAAIxU,MAAOe,cACtB0T,UAAWC,UAAUD,UACrB3E,OAAQvP,KAAKoU,eACbvE,QAAS7P,KAAKqU,gBACdC,WAAY,CACVrhB,MAAO2Y,OAAO2I,WACdrhB,OAAQ0Y,OAAO4I,gBAEdT,GAQL,aALuBnB,GAAAA,EAAM3jB,KAAK,GAAG6O,wBAAmC,CACtEkW,WACAS,OAAQ,MAGMtqB,IAClB,CAAE,MAAOH,GAEP,MADAC,QAAQD,MAAM,oCAAqCA,GAC7CA,CACR,CACF,CAQA,wBAAa0qB,CAAY3B,EAAWhkB,GAClC,IAKE,aAJuB6jB,GAAAA,EAAM3jB,KAC3B,GAAG6O,yBAAmCiV,WACtChkB,IAEc5E,IAClB,CAAE,MAAOH,GAEP,MADAC,QAAQD,MAAM,yBAA0BA,GAClCA,CACR,CACF,CAOA,0BAAa2qB,CAAc5B,GACzB,IAIE,aAHuBH,GAAAA,EAAMgC,IAC3B,GAAG9W,yBAAmCiV,WAExB5oB,IAClB,CAAE,MAAOH,GAEP,MADAC,QAAQD,MAAM,4BAA6BA,GACrCA,CACR,CACF,CAMA,mBAAOoqB,GACL,MAAMF,EAAYC,UAAUD,UAC5B,MAAI,WAAW7rB,KAAK6rB,GAAmB,UACnC,oBAAoB7rB,KAAK6rB,GAAmB,MAC5C,iBAAiB7rB,KAAK6rB,GAAmB,gBACzC,OAAO7rB,KAAK6rB,GAAmB,MAC/B,WAAW7rB,KAAK6rB,GAAmB,UACnC,SAAS7rB,KAAK6rB,GAAmB,QAC9B,SACT,CAMA,oBAAOG,GACL,MAAMH,EAAYC,UAAUD,UAC5B,IAAIrE,EAAU,UAkBd,OAhBIqE,EAAU3kB,QAAQ,YAAc,EAClCsgB,EAAU,UACDqE,EAAU3kB,QAAQ,mBAAqB,EAChDsgB,EAAU,UACDqE,EAAU3kB,QAAQ,UAAY,GAAK2kB,EAAU3kB,QAAQ,QAAU,EACxEsgB,EAAU,QACDqE,EAAU3kB,QAAQ,SAAW,GAAK2kB,EAAU3kB,QAAQ,QAAU,EACvEsgB,EAAU,OACDqE,EAAU3kB,QAAQ,WAAa,EACxCsgB,EAAU,SACDqE,EAAU3kB,QAAQ,WAAa,EACxCsgB,EAAU,UACDqE,EAAU3kB,QAAQ,SAAW,GAAK2kB,EAAU3kB,QAAQ,YAAc,KAC3EsgB,EAAU,qBAGLA,CACT,GCkhBF,GAtrByBjpB,IAA+D,IAA9D,UAAEmsB,EAAS,cAAE8B,EAAa,mBAAEC,EAAkB,OAAEC,GAAQnuB,EAChF,MAAMoR,GAAQgd,EAAAA,EAAAA,KACRC,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAAYD,EAAAA,EAAAA,QAAO,OAGlB1nB,EAASC,IAAczG,EAAAA,EAAAA,WAAS,IAChCgD,EAAO0D,IAAY1G,EAAAA,EAAAA,UAAS,OAC5BouB,EAASC,IAAcruB,EAAAA,EAAAA,UAAS,OAChCsuB,EAAWC,IAAgBvuB,EAAAA,EAAAA,WAAS,IACpCwuB,EAAaC,IAAkBzuB,EAAAA,EAAAA,UAAS,IACxCooB,EAAUsG,IAAe1uB,EAAAA,EAAAA,UAAS,IAClC2uB,EAAeC,IAAoB5uB,EAAAA,EAAAA,UAAS,IAC5C6uB,EAAcC,IAAmB9uB,EAAAA,EAAAA,WAAS,IAC1C+uB,EAAcC,IAAmBhvB,EAAAA,EAAAA,UAAS,OAC1CivB,EAASC,IAAclvB,EAAAA,EAAAA,UAAS,KAChCmvB,EAAgBC,IAAqBpvB,EAAAA,EAAAA,UAAS,QAC9CqvB,EAAWC,IAAgBtvB,EAAAA,EAAAA,UAAS,KACpCuvB,EAAQC,IAAaxvB,EAAAA,EAAAA,UAAS,KAC9ByvB,EAAMC,IAAW1vB,EAAAA,EAAAA,UAAS,IAC1B2vB,EAAmBC,IAAwB5vB,EAAAA,EAAAA,UAAS,KACpD6vB,EAAmBC,IAAwB9vB,EAAAA,EAAAA,UAAS+rB,GAAa,KACjEgE,EAAmBC,KAAwBhwB,EAAAA,EAAAA,UAAS,IACpDiwB,GAAeC,KAAoBlwB,EAAAA,EAAAA,UAAS,IAE7CmwB,IAAWjC,EAAAA,EAAAA,QAAO,OACHA,EAAAA,EAAAA,QAAO,OAG5B5jB,EAAAA,EAAAA,YAAU,KACanI,WACnB,IACEsE,GAAW,GACX,MAAMtD,QAAaitB,GAAwBC,eAAetE,GAC1DsC,EAAWlrB,GACXurB,EAAYvrB,EAAKilB,UACjB8G,EAAW/rB,EAAKsqB,QAAU,IAC1B6B,EAAansB,EAAKksB,WAAa,IAC/BG,EAAUrsB,EAAKosB,QAAU,IACzB9oB,GAAW,EACb,CAAE,MAAO2B,GACP1B,EAAS,qCAAuC0B,EAAI9E,SACpDmD,GAAW,EACb,GAGF6pB,EAAc,GACb,CAACvE,KAGJzhB,EAAAA,EAAAA,YAAU,KACR,GAAI8jB,GAAWD,EAAUoC,QAAS,CACPpuB,WACvB,UACQiuB,GAAwBI,iBAAiBrC,EAAUoC,QAASnC,EACpE,CAAE,MAAOhmB,GACP1B,EAAS,gCAAkC0B,EAAI9E,QACjD,GAGFktB,EACF,IACC,CAACpC,EAASD,KAGb7jB,EAAAA,EAAAA,YAAU,KACR,IAAImmB,EA2BJ,OAzBInC,IACFmC,EAAaC,aAAY,KACvBjC,GAAekC,IACb,MAAMC,EAAUD,EAAW,GAAMhC,EAG3BkC,EAAe5B,EAAQhW,MAC3BlR,GAAS8e,KAAKC,IAAI/e,EAAMklB,UAAY2D,GAAW,KAQjD,OALIC,GAAkB9B,GAAgBA,EAAa5tB,KAAO0vB,EAAa1vB,IACrE6tB,EAAgB6B,GAIdD,GAAWxI,GACbmG,GAAa,GACNnG,GAGFwI,CAAO,GACd,GACD,MAGE,KACDH,GACFK,cAAcL,EAChB,CACD,GACA,CAACnC,EAAWlG,EAAUuG,EAAeM,EAASF,KAGjDzkB,EAAAA,EAAAA,YAAU,KACJ8jB,GACFgC,GAAwBW,WAAWvC,EACrC,GACC,CAACA,EAAaJ,IAGjB,MAeM4C,GAAcC,IAClB,MAAML,EAAU/J,KAAKqK,IAAI,EAAGrK,KAAKuE,IAAIoD,EAAcyC,EAAS7I,IAC5DqG,EAAemC,EAAQ,EA2FnBO,GAAcC,IAClB,MAAMC,EAAUxK,KAAKwB,MAAM+I,EAAgB,IACrCH,EAAUpK,KAAKwB,MAAM+I,EAAgB,IAC3C,MAAO,GAAGC,EAAQzI,WAAW0I,SAAS,EAAG,QAAQL,EAAQrI,WAAW0I,SAAS,EAAG,MAAM,EAIlFC,GAAiBA,IACE,QAAnBpC,EACK,IAAIF,KAAYI,KAAcE,GAAQlX,MAAK,CAACC,EAAGC,IAAMD,EAAE2U,UAAY1U,EAAE0U,YAChD,WAAnBkC,EACFF,EAAQzsB,QAAOuF,GAAwB,UAAfA,EAAM1E,OACT,YAAnB8rB,EACFF,EAAQzsB,QAAOuF,GAAwB,WAAfA,EAAM1E,OACT,WAAnB8rB,EACFF,EAAQzsB,QAAOuF,GAAwB,UAAfA,EAAM1E,OACT,cAAnB8rB,EACFE,EACqB,WAAnBF,EACFI,EAEF,IAcTjlB,EAAAA,EAAAA,YAAU,KACR,GAAKulB,EAqCL,OAnBAppB,GAAW,GACX8nB,GAAa,GACbE,EAAe,GACfuB,GAAqB,GAErBI,GAAwBC,eAAeR,GACpC2B,MAAKruB,IACJkrB,EAAWlrB,GACXurB,EAAYvrB,EAAKilB,UACjB8G,EAAW/rB,EAAKsqB,QAAU,IAC1B6B,EAAansB,EAAKksB,WAAa,IAC/BG,EAAUrsB,EAAKosB,QAAU,IACzB9oB,GAAW,EAAM,IAElBgrB,OAAMrpB,IACL1B,EAAS,oCACTD,GAAW,EAAM,IAGd,KACD0pB,GAASI,SACXO,cAAcX,GAASI,QACzB,EAtCAH,GAAwBsB,uBACrBF,MAAKruB,IACJysB,EAAqBzsB,GACjBA,EAAK7B,OAAS,IAAMyqB,GACtB+D,EAAqB3sB,EAAK,GAAGhC,IAE/BsF,GAAW,EAAM,IAElBgrB,OAAMrpB,IACL1B,EAAS,qCACTD,GAAW,EAAM,GA6BtB,GACA,CAACopB,EAAmB9D,KAGvBzhB,EAAAA,EAAAA,YAAU,KACJgkB,GAAaF,GACX+B,GAASI,SACXO,cAAcX,GAASI,SAGzBJ,GAASI,QAAUG,aAAY,KAC7BjC,GAAe7jB,IACb,MAAMgmB,EAAUhmB,EAAQ,GAAM+jB,EAG9B,GAAIP,EAAQuD,QAAUvD,EAAQuD,OAAOrwB,OAAS,EAAG,CAC/C,MAAMswB,EAAkBxD,EAAQuD,OAAOnwB,KAAI,CAACqwB,EAAO9hB,KAAK,CACtDA,QACA+hB,MAAO,IAAIrZ,KAAKoZ,EAAM5E,WAAW/E,UAAY,IAAIzP,KAAK2V,EAAQ2D,WAAW7J,WAAa,QAGlF8J,EAAiBJ,EAAgBK,WAAUJ,GAASA,EAAMC,KAAOlB,IACnEoB,EAAiB,EACnBhC,GAAqBgC,EAAiB,IACT,IAApBA,GAAyBpB,EAAUgB,EAAgBA,EAAgBtwB,OAAS,GAAGwwB,MACxF9B,GAAqB4B,EAAgBtwB,OAAS,EAElD,CAGA,OAAIsvB,GAAWxC,EAAQhG,UACrBmG,GAAa,GACbuC,cAAcX,GAASI,SAChBnC,EAAQhG,UAGVwI,CAAO,GACd,GACD,MACMT,GAASI,SAClBO,cAAcX,GAASI,SAGlB,KACDJ,GAASI,SACXO,cAAcX,GAASI,QACzB,IAED,CAACjC,EAAWF,EAASO,IAkDxB,OAAInoB,GAEA/C,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQmD,eAAgB,SAAUoF,EAAG,GAAI1K,UAC3DC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAgB,MAKnBnD,GAEAS,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,SAAS,QAAQC,GAAI,CAAEyB,GAAI,GAAI7B,SACnCR,KAMLjB,EAAAA,EAAAA,MAACkM,EAAAA,EAAK,CAAC+B,UAAW,EAAGpM,GAAI,CAAEsK,EAAG,EAAG3G,aAAc,GAAI/D,SAAA,EACjDC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKtD,UAAU,KAAKwF,cAAY,EAAAjE,SAAC,sBAIpD4qB,IACCrsB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAwB,SAAA,EACFzB,EAAAA,EAAAA,MAACuD,EAAAA,EAAU,CAACC,QAAQ,YAAYkC,cAAY,EAAAjE,SAAA,CAAC,SACpC4qB,EAAQhX,OAAO,qBAAc+Z,GAAW/I,GAAU,iBAAU,IAAI3P,KAAK2V,EAAQnB,WAAWiF,qBAIjGnwB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFmwB,IAAKlE,EACLrqB,GAAI,CACFgB,SAAU,WACVqH,MAAO,OACPC,OAAQ,QACRC,QAAS,QACT5E,aAAc,EACd6qB,SAAU,UACV5uB,SAAA,EAEFC,EAAAA,EAAAA,KAAA,UACE0uB,IAAKhE,EACLkE,MAAO,CACLpmB,MAAO,OACPC,OAAQ,OACRomB,UAAW,aAKdvD,IACCtrB,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CACF4B,GAAI,CACFgB,SAAU,WACV2tB,OAAQ,GACRrT,MAAO,GACP/S,QAAS,qBACT3G,MAAO,QACP0I,EAAG,EACH3G,aAAc,EACdH,SAAU,OACV5D,UAEFzB,EAAAA,EAAAA,MAACuD,EAAAA,EAAU,CAACC,QAAQ,QAAO/B,SAAA,CACxBurB,EAAa1rB,KAAK,KAAG0rB,EAAa3tB,OAAS2tB,EAAaltB,eAOjE4B,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC4B,GAAI,CAAEyB,GAAI,GAAI7B,UACjBzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAG4B,WAAW,SAAQpC,SAAA,EAC7CC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAAAT,UACRC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAACC,QAASA,IAAMksB,IAAY,IAAIxtB,UACzCC,EAAAA,EAAAA,KAAC+uB,GAAAA,EAAY,SAGjB/uB,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAAAT,UACRC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAACC,QAASA,IAAMksB,IAAY,GAAGxtB,UACxCC,EAAAA,EAAAA,KAACgvB,GAAAA,EAAU,SAGfhvB,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAAAT,UACRC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAACC,QA/WF4tB,KAClBpE,EACF8B,GAAwBuC,QAExBvC,GAAwBwC,KAAKjE,GAE/BJ,GAAcD,EAAU,EAyW0B9oB,MAAM,UAAShC,SAClD8qB,GAAY7qB,EAAAA,EAAAA,KAACovB,GAAAA,EAAK,KAAMpvB,EAAAA,EAAAA,KAACqvB,GAAAA,EAAS,SAGvCrvB,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAAAT,UACRC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAACC,QAASA,IAAMksB,GAAW,GAAGxtB,UACvCC,EAAAA,EAAAA,KAACsvB,GAAAA,EAAW,SAGhBtvB,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAAAT,UACRC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAACC,QAASA,IAAMksB,GAAW,IAAIxtB,UACxCC,EAAAA,EAAAA,KAACuvB,GAAAA,EAAQ,SAGbvvB,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,IAAE,EAAAV,UACXC,EAAAA,EAAAA,KAACwvB,GAAAA,GAAM,CACLpxB,MAAO2sB,EACPpD,IAAK,EACL8F,IAAK9I,EACL/jB,SAxXG6uB,CAAClL,EAAGnJ,KACrB4P,EAAe5P,EAAS,EAwXVjb,GAAI,CAAEyD,GAAI,QAGd5D,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAAAT,UACRzB,EAAAA,EAAAA,MAACuD,EAAAA,EAAU,CAACC,QAAQ,QAAO/B,SAAA,CACxB2tB,GAAW3C,GAAa,MAAI2C,GAAW/I,SAG5C3kB,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAAAT,UACRzB,EAAAA,EAAAA,MAAC2M,EAAAA,EAAW,CAACnJ,QAAQ,WAAW3B,GAAI,CAAEqF,SAAU,IAAKzF,SAAA,EACnDC,EAAAA,EAAAA,KAACga,GAAAA,EAAU,CAACtc,GAAG,qBAAoBqC,SAAC,WACpCzB,EAAAA,EAAAA,MAAC2b,GAAAA,EAAM,CACLC,QAAQ,qBACR9b,MAAO8sB,EACPtqB,SA5XS0D,IACzB,MAAMorB,EAAWC,WAAWrrB,EAAMjG,OAAOD,OACzC+sB,EAAiBuE,GACb7E,GACF8B,GAAwBxB,iBAAiBuE,EAC3C,EAwXgBrmB,gBAAgBrJ,EAAAA,EAAAA,KAAC4vB,GAAAA,EAAK,CAACvrB,SAAS,QAAQlE,GAAI,CAAEwK,GAAI,MAAU5K,SAAA,EAE5DC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC/b,MAAO,GAAI2B,SAAC,UACtBC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC/b,MAAO,EAAE2B,SAAC,QACpBC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC/b,MAAO,IAAI2B,SAAC,UACtBC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC/b,MAAO,EAAE2B,SAAC,gBAI1BC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAAAT,UACRC,EAAAA,EAAAA,KAACuL,GAAAA,EAAO,CAACC,MAAM,oBAAmBzL,UAChCC,EAAAA,EAAAA,KAACoB,EAAAA,EAAU,CAACC,QAlVGwuB,KACzBrF,EAAUsC,UACP1B,EAWC7J,SAASuO,eACXvO,SAASuO,iBACAvO,SAASwO,oBAClBxO,SAASwO,sBACAxO,SAASyO,qBAClBzO,SAASyO,uBACAzO,SAAS0O,kBAClB1O,SAAS0O,mBAjBPzF,EAAUsC,QAAQoD,kBACpB1F,EAAUsC,QAAQoD,oBACT1F,EAAUsC,QAAQqD,qBAC3B3F,EAAUsC,QAAQqD,uBACT3F,EAAUsC,QAAQsD,wBAC3B5F,EAAUsC,QAAQsD,0BACT5F,EAAUsC,QAAQuD,qBAC3B7F,EAAUsC,QAAQuD,sBAatBhF,GAAiBD,GACnB,EA0T0DrrB,SACzCqrB,GAAeprB,EAAAA,EAAAA,KAACswB,GAAAA,EAAc,KAAMtwB,EAAAA,EAAAA,KAACuwB,GAAAA,EAAU,gBAO1DvwB,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC4B,GAAI,CAAEyB,GAAI,GAAI7B,UACjBzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAER,SAAA,EAEzBzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIke,GAAI,EAAE5e,SAAA,EACvBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAAjE,SAAC,sBAGtCzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAEC,GAAI,GAAIL,SAAA,EACjBC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLX,QAAQ,WACRwD,WAAWtF,EAAAA,EAAAA,KAACwwB,GAAAA,EAAQ,IACpBnvB,QA7YQovB,KACxB,MAAMC,EAAc,CAClBhzB,GAAI,YAAYsX,KAAKc,QACrB0T,UAAWuB,EACXptB,MAAO,eAAe+vB,GAAW3C,KACjCnrB,KAAM,YAGF+wB,EAAmB,IAAI/E,EAAW8E,GACxC7E,EAAa8E,GAGbhE,GAAwBpE,YAAYD,EAAWoI,GAE3CtG,GACFA,EAAcsG,EAChB,EA8XgBvwB,GAAI,CAAEwK,GAAI,GAAI5K,SACf,kBAGDC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLX,QAAQ,WACRC,MAAM,QACNuD,WAAWtF,EAAAA,EAAAA,KAAC4wB,GAAAA,EAAS,IACrBvvB,QAlYQwvB,KACxB,MAAMC,EAAW,CACfpzB,GAAI,SAASsX,KAAKc,QAClB0T,UAAWuB,EACXptB,MAAO,YAAY+vB,GAAW3C,KAC9BnrB,KAAM,SAGFmxB,EAAgB,IAAIjF,EAAQgF,GAClC/E,EAAUgF,GAGVpE,GAAwBlE,YAAYH,EAAWwI,GAE3C1G,GACFA,EAAc0G,EAChB,EAmXgB3wB,GAAI,CAAEwK,GAAI,GAAI5K,SACf,kBAGDC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLX,QAAQ,WACRwD,WAAWtF,EAAAA,EAAAA,KAACgxB,GAAAA,EAAQ,IACpB3vB,QA1VU4vB,KAC1BtE,GAAwBhE,kBAAkBL,EAAU,EAyVPvoB,SAC9B,oBAKHzB,EAAAA,EAAAA,MAACkM,EAAAA,EAAK,CAACrK,GAAI,CAAEsK,EAAG,EAAG/B,QAAS6E,EAAM2jB,QAAQC,WAAWC,SAAUrxB,SAAA,EAC7DzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQmD,eAAgB,gBAAiBjF,GAAI,GAAIL,SAAA,EACnEC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,YAAW/B,SAAC,oBAG/B4qB,EAAQ0G,UACPrxB,EAAAA,EAAAA,KAAC4S,EAAAA,EAAI,CACHjV,MAAO,UAAUgtB,EAAQ0G,QAAQC,mBACjCvvB,MACE4oB,EAAQ0G,QAAQC,aAAe,GAAK,UACpC3G,EAAQ0G,QAAQC,aAAe,GAAK,OAAS,eAMpD3G,EAAQ0G,UACP/yB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAER,SAAA,EACzBzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGke,GAAI,EAAE5e,SAAA,EACtBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAgBhC,SAAC,gBACnDC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAI/B,SAAE4qB,EAAQ0G,QAAQE,gBAE5CjzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGke,GAAI,EAAE5e,SAAA,EACtBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAgBhC,SAAC,kBACnDC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAI/B,SAAE2tB,GAAW/C,EAAQ0G,QAAQzK,kBAEvDtoB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGke,GAAI,EAAE5e,SAAA,EACtBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAgBhC,SAAC,iBACnDC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKC,MAAO4oB,EAAQ0G,QAAQG,WAAa,EAAI,aAAe,eAAezxB,SAC5F4qB,EAAQ0G,QAAQG,iBAGrBlzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,EAAGke,GAAI,EAAE5e,SAAA,EACtBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,iBAAgBhC,SAAC,iBACnDC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAI/B,SAAE4qB,EAAQ0G,QAAQI,0BAQpDnzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIke,GAAI,EAAE5e,SAAA,EACvBzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQmD,eAAgB,gBAAiBlD,WAAY,SAAU/B,GAAI,GAAIL,SAAA,EACzFC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAI/B,SAAC,oBAGzBC,EAAAA,EAAAA,KAACiL,EAAAA,EAAW,CAACnJ,QAAQ,WAAWa,KAAK,QAAO5C,UAC1CzB,EAAAA,EAAAA,MAAC2b,GAAAA,EAAM,CACL7b,MAAOstB,EACP9qB,SA3dQ0D,IAC1BqnB,EAAkBrnB,EAAMjG,OAAOD,MAAM,EA2dnB+B,GAAI,CAAEqF,SAAU,KAAMzF,SAAA,EAEtBC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC/b,MAAM,MAAK2B,SAAC,gBACtBC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC/b,MAAM,SAAQ2B,SAAC,YACzBC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC/b,MAAM,UAAS2B,SAAC,aAC1BC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC/b,MAAM,SAAQ2B,SAAC,YACzBC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC/b,MAAM,YAAW2B,SAAC,eAC5BC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC/b,MAAM,SAAQ2B,SAAC,oBAK/BC,EAAAA,EAAAA,KAACwK,EAAAA,EAAK,CACJrK,GAAI,CACFsI,OAAQ,IACRkmB,SAAU,OACVlkB,EAAG,EACH/B,QAAS6E,EAAM2jB,QAAQC,WAAWC,SAClCrxB,SAE2B,IAA5B+tB,KAAiBjwB,QAChBmC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQ3B,GAAI,CAAEsK,EAAG,EAAG1I,MAAO,kBAAmBhC,SAAC,6CAInE+tB,KAAiB/vB,KAAKuG,IACpBhG,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAEF4B,GAAI,CACFsK,EAAG,IACHrK,GAAI,EACJ0D,aAAc,EACd4E,QACiB,UAAfpE,EAAM1E,KAAmB,cACV,aAAf0E,EAAM1E,KAAsB,aAAe,mBAC7CsC,QAAS,OACTC,WAAY,SACZkD,eAAgB,gBAChBqsB,OAAQ,UACR,UAAW,CACThpB,QACiB,UAAfpE,EAAM1E,KAAmB,aACV,aAAf0E,EAAM1E,KAAsB,YAAc,iBAGhDyB,QAASA,IAlaViD,KACnB0mB,EAAe1mB,EAAMklB,WACrB+B,EAAgBjnB,EAAM,EAgaaqtB,CAAYrtB,GAAOvE,SAAA,EAElCzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQC,WAAY,UAAWpC,SAAA,CACjC,UAAfuE,EAAM1E,OAAoBI,EAAAA,EAAAA,KAAC4xB,GAAAA,EAAI,CAACvtB,SAAS,QAAQlE,GAAI,CAAEwK,GAAI,KAC5C,WAAfrG,EAAM1E,OAAqBI,EAAAA,EAAAA,KAAC4xB,GAAAA,EAAI,CAACvtB,SAAS,QAAQlE,GAAI,CAAEwK,GAAI,KAC7C,UAAfrG,EAAM1E,OAAoBI,EAAAA,EAAAA,KAAC4xB,GAAAA,EAAI,CAACvtB,SAAS,QAAQlE,GAAI,CAAEwK,GAAI,KAC5C,aAAfrG,EAAM1E,OAAuBI,EAAAA,EAAAA,KAACwwB,GAAAA,EAAQ,CAACnsB,SAAS,QAAQtC,MAAM,OAAO5B,GAAI,CAAEwK,GAAI,KAChE,UAAfrG,EAAM1E,OAAoBI,EAAAA,EAAAA,KAAC4wB,GAAAA,EAAS,CAACvsB,SAAS,QAAQtC,MAAM,QAAQ5B,GAAI,CAAEwK,GAAI,MAC/E3K,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAO/B,SACxBuE,EAAM3G,OAAS2G,EAAM1E,WAG1BI,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,UAAUC,MAAM,iBAAgBhC,SACjD2tB,GAAWppB,EAAMklB,eA/BfllB,EAAM5G,qBA0CvB,EClbZ,GA9R6BvB,IAAiB,IAAD01B,EAAAC,EAAA,IAAf,OAAExH,GAAQnuB,EACtC,MAAO4G,EAASC,IAAczG,EAAAA,EAAAA,WAAS,IAChCwoB,EAAOgN,IAAYx1B,EAAAA,EAAAA,UAAS,KAC5By1B,EAAcC,IAAmB11B,EAAAA,EAAAA,UAAS,KAC1C21B,EAAaC,IAAkB51B,EAAAA,EAAAA,UAAS,WACxC61B,EAAaC,IAAkB91B,EAAAA,EAAAA,UAAS,OACxCgD,EAAO0D,IAAY1G,EAAAA,EAAAA,UAAS,OAC5B+1B,EAAWC,IAAgBh2B,EAAAA,EAAAA,UAAS,KACpCi2B,EAAQC,IAAal2B,EAAAA,EAAAA,UAAS,IAE/BmuB,GAAYD,EAAAA,EAAAA,QAAO,MACnBiI,GAAWjI,EAAAA,EAAAA,QAAO,OAExB5jB,EAAAA,EAAAA,YAAU,KAEWnI,WACjB,IACE,MAAMgB,QAAaizB,GAAiBC,sBACpCb,EAASryB,GACLA,EAAK7B,OAAS,GAChBo0B,EAAgBvyB,EAAK,GAAGhC,IAE1BsF,GAAW,EACb,CAAE,MAAO2B,GACP1B,EAAS,6BACTD,GAAW,GACXxD,QAAQD,MAAM,6BAA8BoF,EAC9C,GAGFkuB,EAAY,GACX,KAEHhsB,EAAAA,EAAAA,YAAU,KACR,GAAImrB,EAAc,CAChBhvB,GAAW,GACXqvB,EAAe,MAEG3zB,WAChB,IACE,MAAMgB,QAAaizB,GAAiBjN,eAAesM,EAAcE,GACjEG,EAAe3yB,GACfsD,GAAW,EACb,CAAE,MAAO2B,GACP1B,EAAS,+BACTD,GAAW,GACXxD,QAAQD,MAAM,+BAAgCoF,EAChD,GAGFmuB,EACF,IACC,CAACd,EAAcE,KAElBrrB,EAAAA,EAAAA,YAAU,KACR,GAAIurB,GAAe1H,EAAUoC,SAAW4F,EAAS5F,QAAS,CACxD,MAAMiG,EAAML,EAAS5F,QAEjBiG,EAAIC,SACNC,IAEAF,EAAIG,OAASD,CAEjB,IACC,CAACb,EAAaE,EAAWE,IAE5B,MAAMS,EAAcA,KAClB,IAAKvI,EAAUoC,UAAYsF,EAAa,OAExC,MAAMe,EAASzI,EAAUoC,QACnBsG,EAAMD,EAAOE,WAAW,OACxB,MAAE7qB,EAAK,OAAEC,GAAW2pB,EAAYkB,SAEtCH,EAAO3qB,MAAQA,EACf2qB,EAAO1qB,OAASA,EAGZiqB,EAAS5F,SAAW4F,EAAS5F,QAAQkG,UACvCI,EAAIG,UAAUb,EAAS5F,QAAS,EAAG,EAAGtkB,EAAOC,GAE7C2qB,EAAII,UAAY,2BAChBJ,EAAIK,SAAS,EAAG,EAAGjrB,EAAOC,KAG1B2qB,EAAII,UAAY,UAChBJ,EAAIK,SAAS,EAAG,EAAGjrB,EAAOC,GAE1B2qB,EAAII,UAAY,OAChBJ,EAAIM,KAAO,aACXN,EAAI/qB,UAAY,SAChB+qB,EAAIO,SAAS,iBAAiBvB,EAAYwB,UAAWprB,EAAQ,EAAGC,EAAS,IAI3E,MAAMorB,EAAWzQ,KAAKqK,OAAO2E,EAAY1yB,KAAK3B,KAAI+1B,GAASA,EAAM11B,SAGjEg0B,EAAY1yB,KAAK8S,SAAQshB,IACvB,MAAM,EAAE7N,EAAC,EAAEC,EAAC,MAAE9nB,GAAU01B,EAClBC,EAAkB31B,EAAQy1B,EAG1BG,EAAWZ,EAAIa,qBAAqBhO,EAAGC,EAAG,EAAGD,EAAGC,EAAGsM,GAErC,WAAhBN,GACF8B,EAASE,aAAa,EAAG,mBAAmBH,EAAkBzB,MAC9D0B,EAASE,aAAa,EAAG,uBACA,UAAhBhC,GACT8B,EAASE,aAAa,EAAG,mBAAmBH,EAAkBzB,MAC9D0B,EAASE,aAAa,EAAG,wBAEzBF,EAASE,aAAa,EAAG,mBAAmBH,EAAkBzB,MAC9D0B,EAASE,aAAa,EAAG,uBAG3Bd,EAAII,UAAYQ,EAChBZ,EAAIe,YACJf,EAAIgB,IAAInO,EAAGC,EAAGsM,EAAQ,EAAG,EAAIpP,KAAKiR,IAClCjB,EAAIlL,MAAM,IAIZkL,EAAIkB,yBAA2B,WAC/BlB,EAAIkB,yBAA2B,aAAa,EA+B9C,OAAIvxB,IAAYqvB,GACPpyB,EAAAA,EAAAA,KAAA,OAAKu0B,UAAWC,GAAwBz0B,SAAC,4BAG9CR,GAEAjB,EAAAA,EAAAA,MAAA,OAAKi2B,UAAWC,GAAsBz0B,SAAA,EACpCC,EAAAA,EAAAA,KAAA,OAAKu0B,UAAWC,GAAoBz0B,SAAER,KACtCS,EAAAA,EAAAA,KAAA,UAAQqB,QAASipB,EAAQiK,UAAWC,GAAoBz0B,SAAC,0BAM7DzB,EAAAA,EAAAA,MAAA,OAAKi2B,UAAWC,GAAsBz0B,SAAA,EACpCzB,EAAAA,EAAAA,MAAA,OAAKi2B,UAAWC,GAAmBz0B,SAAA,EACjCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,8BACJzB,EAAAA,EAAAA,MAAA,OAAKi2B,UAAWC,GAAmBz0B,SAAA,EACjCC,EAAAA,EAAAA,KAAA,UACE5B,MAAO4zB,EACPpxB,SAhDgB0D,IACxB2tB,EAAgB3tB,EAAMjG,OAAOD,MAAM,EAgD3Bm2B,UAAWC,GAAoBz0B,SAE9BglB,EAAMhnB,KAAImnB,IACTllB,EAAAA,EAAAA,KAAA,UAAsB5B,MAAO8mB,EAAKxnB,GAAGqC,SAAEmlB,EAAK1oB,MAA/B0oB,EAAKxnB,SAItBY,EAAAA,EAAAA,MAAA,UACEF,MAAO8zB,EACPtxB,SAtDgB0D,IACxB6tB,EAAe7tB,EAAMjG,OAAOD,MAAM,EAsD1Bm2B,UAAWC,GAAoBz0B,SAAA,EAE/BC,EAAAA,EAAAA,KAAA,UAAQ5B,MAAM,SAAQ2B,SAAC,YACvBC,EAAAA,EAAAA,KAAA,UAAQ5B,MAAM,QAAO2B,SAAC,qBACtBC,EAAAA,EAAAA,KAAA,UAAQ5B,MAAM,QAAO2B,SAAC,kBAGxBC,EAAAA,EAAAA,KAAA,UACEqB,QAnDWozB,KACnB,IAAK/J,EAAUoC,QAAS,OAGxB,MAAMhE,EAAOvH,SAASwH,cAAc,KACpCD,EAAK4L,SAAW,WAAW1C,KAAgBE,QAC3CpJ,EAAKpH,KAAOgJ,EAAUoC,QAAQ6H,UAAU,aACxCpT,SAAS0H,KAAKC,YAAYJ,GAC1BA,EAAKK,QACL5H,SAAS0H,KAAK2L,YAAY9L,EAAK,EA2CvByL,UAAWC,GAAoBz0B,SAChC,kBAMLzB,EAAAA,EAAAA,MAAA,OAAKi2B,UAAWC,GAAuBz0B,SAAA,EACrCzB,EAAAA,EAAAA,MAAA,OAAKi2B,UAAWC,GAAoBz0B,SAAA,EAClCC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,gBACPC,EAAAA,EAAAA,KAAA,SACEJ,KAAK,QACL+nB,IAAI,MACJ8F,IAAI,IACJ7gB,KAAK,MACLxO,MAAOk0B,EACP1xB,SA5EqB0D,IAC7BiuB,EAAa5C,WAAWrrB,EAAMjG,OAAOD,OAAO,KA6EtC4B,EAAAA,EAAAA,KAAA,QAAAD,SAAOuyB,QAGTh0B,EAAAA,EAAAA,MAAA,OAAKi2B,UAAWC,GAAoBz0B,SAAA,EAClCC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,aACPC,EAAAA,EAAAA,KAAA,SACEJ,KAAK,QACL+nB,IAAI,KACJ8F,IAAI,KACJ7gB,KAAK,IACLxO,MAAOo0B,EACP5xB,SArFkB0D,IAC1BmuB,EAAUoC,SAASvwB,EAAMjG,OAAOD,MAAO,IAAI,KAsFrCE,EAAAA,EAAAA,MAAA,QAAAyB,SAAA,CAAOyyB,EAAO,eAIlBl0B,EAAAA,EAAAA,MAAA,OAAKi2B,UAAWC,GAAwBz0B,SAAA,EAEtCC,EAAAA,EAAAA,KAAA,OACE0uB,IAAKgE,EACLnqB,KAAgB,OAAX6pB,QAAW,IAAXA,OAAW,EAAXA,EAAarM,aAAc,+DAChC9J,IAAI,kBACJ2S,MAAO,CAAE1sB,QAAS,QAClB4yB,YAAY,eAId90B,EAAAA,EAAAA,KAAA,UACE0uB,IAAKhE,EACL6J,UAAWC,QAIdpC,IACC9zB,EAAAA,EAAAA,MAAA,OAAKi2B,UAAWC,GAAoBz0B,SAAA,EAClCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0BACJzB,EAAAA,EAAAA,MAAA,OAAKi2B,UAAWC,GAAmBz0B,SAAA,EACjCzB,EAAAA,EAAAA,MAAA,OAAKi2B,UAAWC,GAAmBz0B,SAAA,EACjCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJzB,EAAAA,EAAAA,MAAA,KAAAyB,SAAA,CAAG,0DAEgC,QAAnB8xB,EAAAO,EAAY1yB,KAAK,UAAE,IAAAmyB,OAAA,EAAnBA,EAAqB5L,IAAK,EAAE,MAAsB,QAAnB6L,EAAAM,EAAY1yB,KAAK,UAAE,IAAAoyB,OAAA,EAAnBA,EAAqB5L,IAAK,EAAE,WAI7E5nB,EAAAA,EAAAA,MAAA,OAAKi2B,UAAWC,GAAmBz0B,SAAA,EACjCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJzB,EAAAA,EAAAA,MAAA,KAAAyB,SAAA,CACGqyB,EAAY1yB,KAAK7B,OAAO,IAAEq0B,EAAY,+BAI3C5zB,EAAAA,EAAAA,MAAA,OAAKi2B,UAAWC,GAAmBz0B,SAAA,EACjCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAIqyB,EAAYwB,oBAMxB5zB,EAAAA,EAAAA,KAAA,OAAKu0B,UAAWC,GAAkBz0B,UAChCC,EAAAA,EAAAA,KAAA,UAAQqB,QAASipB,EAAQiK,UAAWC,GAAoBz0B,SAAC,0BAIvD,ECyxBV,GA3+B2Bg1B,KACzB,MAAMxnB,GAAQgd,EAAAA,EAAAA,MAGPtS,EAAWC,IAAgB3b,EAAAA,EAAAA,UAAS,IACpCyU,EAASC,IAAc1U,EAAAA,EAAAA,WAAS,IAChCwG,EAASC,IAAczG,EAAAA,EAAAA,WAAS,IAChCgD,EAAO0D,IAAY1G,EAAAA,EAAAA,UAAS,OAC5BqjB,EAAcoV,IAAmBz4B,EAAAA,EAAAA,UAAS,KAC1CujB,EAAcmV,IAAmB14B,EAAAA,EAAAA,UAAS,KAC1C0jB,EAAmBiV,IAAwB34B,EAAAA,EAAAA,UAAS,KACpD8jB,EAAe8U,IAAoB54B,EAAAA,EAAAA,UAAS,KAC5CikB,EAAgB4U,IAAqB74B,EAAAA,EAAAA,UAAS,KAC9CokB,EAAY0U,IAAiB94B,EAAAA,EAAAA,UAAS,KACtCskB,EAAayU,IAAkB/4B,EAAAA,EAAAA,UAAS,KACxCukB,EAAWyU,IAAgBh5B,EAAAA,EAAAA,UAAS,KACpCymB,EAAWwS,IAAgBj5B,EAAAA,EAAAA,UAAS,KACpCunB,EAAc2R,IAAmBl5B,EAAAA,EAAAA,UAAS,SAC1Cm5B,EAAWC,IAAgBp5B,EAAAA,EAAAA,UAAS,UACpCq5B,EAAeC,IAAoBt5B,EAAAA,EAAAA,UAAS,OAC5Cu5B,EAAuBC,IAA4Bx5B,EAAAA,EAAAA,WAAS,IAC5Dy5B,EAAcC,IAAmB15B,EAAAA,EAAAA,WAAS,GAW3C25B,EAAS,CACbjpB,QAASM,EAAM2jB,QAAQjkB,QAAQkpB,KAC/BC,UAAW7oB,EAAM2jB,QAAQkF,UAAUD,KACnCjzB,QAASqK,EAAM2jB,QAAQhuB,QAAQizB,KAC/BE,QAAS9oB,EAAM2jB,QAAQmF,QAAQF,KAC/B52B,MAAOgO,EAAM2jB,QAAQ3xB,MAAM42B,KAC3BG,KAAM/oB,EAAM2jB,QAAQoF,KAAKH,KACzBI,UAAW,CACT,UAAW,UAAW,UAAW,UAAW,UAC5C,UAAW,UAAW,UAAW,UAAW,aAKhD1vB,EAAAA,EAAAA,YAAU,KACWnI,WACjB,IACE,MAAM83B,QAAoBt3B,EAAAA,EAAY8R,UACtCC,EAAWulB,GAEPA,GAEF7D,GAAiB1R,gBAGXwV,OAENxzB,EAAS,2CACTD,GAAW,GAEf,CAAE,MAAO2B,GACPnF,QAAQD,MAAM,+BAAgCoF,GAC9C1B,EAAS,iCACTD,GAAW,EACb,GAGF0zB,EAAY,GACX,IAGH,MAAMD,GAAoB/3B,UACxB,IACEsE,GAAW,GACXC,EAAS,MAGT,MACE0zB,EACAC,EACAC,EACAxW,EACAG,EACAG,EACAE,EACAC,EACAgW,SACQ9gB,QAAQ+gB,IAAI,CACpBpE,GAAiBtQ,kBACjBsQ,GAAiBpQ,kBACjBoQ,GAAiBlQ,uBACjBkQ,GAAiBjQ,mBACjBiQ,GAAiBhQ,oBACjBgQ,GAAiB/P,gBACjB+P,GAAiB9P,iBACjB8P,GAAiB7P,eACjB6P,GAAiB5P,oBAInBiS,EAAgB2B,GAChB1B,EAAgB2B,GAChB1B,EAAqB2B,GACrB1B,EAAiB9U,GACjB+U,EAAkB5U,GAClB6U,EAAc1U,GACd2U,EAAezU,GACf0U,EAAazU,GACb0U,EAAasB,GAEb9zB,GAAW,EACb,CAAE,MAAO2B,GACPnF,QAAQD,MAAM,gCAAiCoF,GAC/C1B,EAAS,iCACTD,GAAW,EACb,IAuCF6D,EAAAA,EAAAA,YAAU,KACRmwB,IAAe,GACd,CAACtB,IAGJ,MAAMsB,GAAgBt4B,UACpB,IACEsE,GAAW,GACXC,EAAS,MAMT3D,YAAW,KAET,MAAMI,EAAOu3B,GAAiBvB,GAC9BG,EAAiBn2B,GACjBsD,GAAW,EAAM,GAChB,IAEL,CAAE,MAAO2B,GACPnF,QAAQD,MAAM,2BAA4BoF,GAC1C1B,EAAS,oDACTD,GAAW,EACb,GASIk0B,GAAgBC,GAChBA,GAAO,KACDA,EAAM,KAAS7T,QAAQ,GAAK,IAElC6T,GAAO,KACDA,EAAM,KAAM7T,QAAQ,GAAK,IAE5B6T,EAIHC,GAAiBj7B,IAA+B,IAA9B,MAAEiC,EAAK,cAAEi5B,GAAel7B,EAC9C,MAAMgnB,EAAgBkU,GAChBj5B,EAAQi5B,GAAiBA,EAAiB,IAC5C,EAEJ,GAAIjU,KAAKC,IAAIF,GAAiB,GAC5B,OAAO,KAGT,MAAMmU,EAAanU,EAAgB,EAEnC,OACE7kB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,UAAU,OACV2B,GAAI,CACF+B,QAAS,OACTC,WAAY,SACZJ,MAAOu1B,EAAapB,EAAOhzB,QAAUgzB,EAAO32B,MAC5CyL,GAAI,EACJ3G,SAAU,YACVtE,SAAA,CAEDu3B,GAAat3B,EAAAA,EAAAA,KAACu3B,GAAAA,EAAW,CAAClzB,SAAS,WAAarE,EAAAA,EAAAA,KAACw3B,GAAAA,EAAa,CAACnzB,SAAS,UACxE+e,KAAKC,IAAIF,GAAeG,QAAQ,GAAG,MAChC,EAKJ2T,GAAoBvB,IACxB,IAAIpT,EAAO,EAEX,OAAQoT,GACN,IAAK,SACHpT,EAAO,GACP,MACF,IAAK,SACHA,EAAO,GACP,MAEF,QACEA,EAAO,EAKX,MAAMmV,EAAepT,MAAMC,KAAK,CAAEzmB,OAAQykB,IAAQvkB,KAAI,CAACwmB,EAAGtB,KACxD,MAAMpD,EAAO,IAAI7K,KAGjB,OAFA6K,EAAKgI,QAAQhI,EAAKiI,WAAaxF,EAAOW,EAAI,IAEnC,CACLpD,KAAMA,EAAK1D,mBAAmB,QAAS,CAAE9E,MAAO,QAASgF,IAAK,YAC9Dqb,YAAatU,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,GAC9CiT,SAAUvU,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,EAC3CkT,SAAUxU,KAAKwB,MAAsB,IAAhBxB,KAAKsB,UAAkB,GAC7C,IAIGmT,EAAqBJ,EAAaK,QAAO,CAACC,EAAK1b,IAAQ0b,EAAM1b,EAAIqb,aAAa,GAC9EM,EAAkBP,EAAaK,QAAO,CAACC,EAAK1b,IAAQ0b,EAAM1b,EAAIsb,UAAU,GAGxEM,EAAsB7U,KAAKwB,MAAMiT,GAAsC,GAAhBzU,KAAKsB,SAAiB,KAC7EwT,EAAmB9U,KAAKwB,MAAMoT,GAAmC,GAAhB5U,KAAKsB,SAAiB,KAGvEnB,EAAe,CACnB,CAAE9Q,SAAU,QAAS6E,MAAO8L,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,IAC7D,CAAEjS,SAAU,WAAY6E,MAAO8L,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,IAChE,CAAEjS,SAAU,cAAe6E,MAAO8L,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,IACnE,CAAEjS,SAAU,OAAQ6E,MAAO8L,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,GAC5D,CAAEjS,SAAU,QAAS6E,MAAO8L,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,IAiE/D,MAAO,CACL+S,eACAlU,eACAqT,iBAhEuB,CACvB,CAAEp6B,KAAM,iBAAkBujB,MAAOqD,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,IAClE,CAAEloB,KAAM,kBAAmBujB,MAAOqD,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,IACnE,CAAEloB,KAAM,oBAAqBujB,MAAOqD,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,IACrE,CAAEloB,KAAM,kBAAmBujB,MAAOqD,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,IACnE,CAAEloB,KAAM,UAAWujB,MAAOqD,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,KA4D3DyT,gBAxDsB,CACtB,CAAE37B,KAAM,UAAW4B,MAAOglB,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,IAC3D,CAAEloB,KAAM,SAAU4B,MAAOglB,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,IAC1D,CAAEloB,KAAM,SAAU4B,MAAOglB,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,KAsD1D0T,kBAlDwB,CACxB,CACE16B,GAAI,EACJ2O,QAAS,uBACTqH,MAAO0P,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,GACxCjR,OAAQ,WAEV,CACE/V,GAAI,EACJ2O,QAAS,YACTqH,MAAO0P,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,GACxCjR,OAAQ,eAEV,CACE/V,GAAI,EACJ2O,QAAS,gBACTqH,MAAO0P,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,GACxCjR,OAAQ,WAEV,CACE/V,GAAI,EACJ2O,QAAS,sBACTqH,MAAO0P,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,GACxCjR,OAAQ,gBAEV,CACE/V,GAAI,EACJ2O,QAAS,sBACTqH,MAAO0P,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,GACxCjR,OAAQ,iBAsBV4kB,QAjBc,CACd,CAAEhT,QAAS,gBAAiB3E,MAAO0C,KAAKwB,MAAsB,IAAhBxB,KAAKsB,UAAkB,IACrE,CAAEW,QAAS,iBAAkB3E,MAAO0C,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,IACrE,CAAEW,QAAS,SAAU3E,MAAO0C,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,IAC7D,CAAEW,QAAS,YAAa3E,MAAO0C,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,IAChE,CAAEW,QAAS,UAAW3E,MAAO0C,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,IAC9D,CAAEW,QAAS,SAAU3E,MAAO0C,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,IAC7D,CAAEW,QAAS,QAAS3E,MAAO0C,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,GAC5D,CAAEW,QAAS,QAAS3E,MAAO0C,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,KAU5D4T,QAAS,CACPZ,YAAa,CACX5K,QAAS+K,EACTU,SAAUN,GAEZN,SAAU,CACR7K,QAASkL,EACTO,SAAUL,GAEZM,cAAejV,EAAauU,QAAO,CAACC,EAAKv3B,IAASu3B,EAAMv3B,EAAK8W,OAAO,GACpEmhB,gBAAiBrV,KAAKwB,MAAsB,IAAhBxB,KAAKsB,UAAkB,GACnDgU,mBAAoBtV,KAAKwB,MAAsB,GAAhBxB,KAAKsB,UAAiB,GAExD,EAIGlL,GAAkB/F,IACtB,OAAQA,GACN,IAAK,UACH,OAAOyiB,EAAOI,KAChB,IAAK,cACH,OAAOJ,EAAOhzB,QAChB,IAAK,eACH,OAAOgzB,EAAOG,QAChB,IAAK,YACH,OAAOH,EAAOjpB,QAChB,QACE,OAAOM,EAAM2jB,QAAQyH,KAAK,KAC9B,EAIIpf,GAAkB9F,IACtB,OAAQA,GACN,IAAK,UACH,MAAO,UACT,IAAK,cACH,MAAO,cACT,IAAK,eACH,MAAO,eACT,IAAK,YACH,MAAO,YACT,QACE,OAAOA,EACX,EAaIjD,GAAaA,KACjBulB,GAAyB,GACzBE,GAAgB,EAAM,EAGxB,OAAIH,GACK91B,EAAAA,EAAAA,KAAC44B,GAAgB,CAACtO,OAAQ9Z,KAG/BwlB,GACKh2B,EAAAA,EAAAA,KAAC64B,GAAoB,CAACvO,OAAQ9Z,MAIrClS,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAwB,SAAA,EAEFzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQmD,eAAgB,gBAAiBlD,WAAY,SAAU/B,GAAI,GAAIL,SAAA,EACzFC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKtD,UAAU,KAAIuB,SAAC,8BAIxCzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQC,WAAY,UAAWpC,SAAA,EAEjDzB,EAAAA,EAAAA,MAAC2M,EAAAA,EAAW,CAACtI,KAAK,QAAQxC,GAAI,CAAEqF,SAAU,IAAKmF,GAAI,GAAI5K,SAAA,EACrDC,EAAAA,EAAAA,KAACga,GAAAA,EAAU,CAACtc,GAAG,mBAAkBqC,SAAC,gBAClCzB,EAAAA,EAAAA,MAAC2b,GAAAA,EAAM,CACLC,QAAQ,mBACRxc,GAAG,oBACHU,MAAOs3B,EACP/3B,MAAM,aACNiD,SAxPmB0D,IAC7BqxB,EAAarxB,EAAMjG,OAAOD,MAAM,EAuPU2B,SAAA,EAEhCC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC/b,MAAM,QAAO2B,SAAC,iBACxBC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC/b,MAAM,SAAQ2B,SAAC,kBACzBC,EAAAA,EAAAA,KAACma,GAAAA,EAAQ,CAAC/b,MAAM,SAAQ2B,SAAC,wBAK7BC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACL6C,WAAWtF,EAAAA,EAAAA,KAAC84B,GAAAA,EAAW,IACvBh3B,QAAQ,WACRa,KAAK,QACLtB,QAAS21B,GACTl2B,SAAUiC,EAAQhD,SACnB,aAKDC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACL6C,WAAWtF,EAAAA,EAAAA,KAAC+4B,GAAAA,EAAY,IACxBj3B,QAAQ,WACRa,KAAK,QACLxC,GAAI,CAAE6K,GAAI,GACVlK,SAAUiC,EAAQhD,SACnB,kBAOLzB,EAAAA,EAAAA,MAACkM,EAAAA,EAAK,CAAC+B,UAAW,EAAGpM,GAAI,CAAEsK,EAAG,EAAGrK,GAAI,GAAIL,SAAA,EACvCC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAAjE,SAAC,oBAGtCzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQ2G,IAAK,GAAI9I,SAAA,EACnCC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLX,QAAQ,WACRwD,WAAWtF,EAAAA,EAAAA,KAACg5B,GAAAA,EAAY,IACxB33B,QAjF0B43B,KAClClD,GAAyB,GACzBE,GAAgB,EAAM,EA+EuBl2B,SACtC,wBAGDC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLX,QAAQ,WACRwD,WAAWtF,EAAAA,EAAAA,KAACk5B,GAAAA,EAAQ,IACpB73B,QAnFiB83B,KACzBlD,GAAgB,GAChBF,GAAyB,EAAM,EAiFKh2B,SAC7B,gCAOJR,IACCS,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,SAAS,QAAQC,GAAI,CAAEC,GAAI,GAAIL,SACnCR,IAKJwD,GACC/C,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQmD,eAAgB,SAAU+H,GAAI,GAAIrN,UAC5DC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAgB,CAACC,KAAM,OAExBizB,GACFt3B,EAAAA,EAAAA,MAAA86B,EAAAA,SAAA,CAAAr5B,SAAA,EAEEzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGJ,GAAI,CAAEC,GAAI,GAAIL,SAAA,EACxCC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuB,GAAI,EAAG2c,GAAI,EAAE5e,UAC9BC,EAAAA,EAAAA,KAAC0D,EAAAA,EAAI,CAAA3D,UACHzB,EAAAA,EAAAA,MAACyF,EAAAA,EAAW,CAAAhE,SAAA,EACVC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACE,MAAM,gBAAgBiC,cAAY,EAAClC,QAAQ,QAAO/B,SAAC,kBAG/DzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQC,WAAY,YAAapC,SAAA,EACnDC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKtD,UAAU,MAAKuB,SACrCm3B,GAAatB,EAAc0C,QAAQZ,YAAY5K,YAElD9sB,EAAAA,EAAAA,KAACo3B,GAAc,CACbh5B,MAAOw3B,EAAc0C,QAAQZ,YAAY5K,QACzCuK,cAAezB,EAAc0C,QAAQZ,YAAYa,eAGrDv4B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,UAAUC,MAAM,gBAAehC,SAAC,gCAO1DC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuB,GAAI,EAAG2c,GAAI,EAAE5e,UAC9BC,EAAAA,EAAAA,KAAC0D,EAAAA,EAAI,CAAA3D,UACHzB,EAAAA,EAAAA,MAACyF,EAAAA,EAAW,CAAAhE,SAAA,EACVC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACE,MAAM,gBAAgBiC,cAAY,EAAClC,QAAQ,QAAO/B,SAAC,eAG/DzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQC,WAAY,YAAapC,SAAA,EACnDC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKtD,UAAU,MAAKuB,SACrCm3B,GAAatB,EAAc0C,QAAQX,SAAS7K,YAE/C9sB,EAAAA,EAAAA,KAACo3B,GAAc,CACbh5B,MAAOw3B,EAAc0C,QAAQX,SAAS7K,QACtCuK,cAAezB,EAAc0C,QAAQX,SAASY,eAGlDv4B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,UAAUC,MAAM,gBAAehC,SAAC,gCAO1DC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuB,GAAI,EAAG2c,GAAI,EAAE5e,UAC9BC,EAAAA,EAAAA,KAAC0D,EAAAA,EAAI,CAAA3D,UACHzB,EAAAA,EAAAA,MAACyF,EAAAA,EAAW,CAAAhE,SAAA,EACVC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACE,MAAM,gBAAgBiC,cAAY,EAAClC,QAAQ,QAAO/B,SAAC,0BAG/DC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKtD,UAAU,MAAKuB,SACrCm3B,GAAatB,EAAc0C,QAAQE,kBAEtCx4B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,UAAUC,MAAM,gBAAehC,SAAC,kCAO1DC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIuB,GAAI,EAAG2c,GAAI,EAAE5e,UAC9BC,EAAAA,EAAAA,KAAC0D,EAAAA,EAAI,CAAA3D,UACHzB,EAAAA,EAAAA,MAACyF,EAAAA,EAAW,CAAAhE,SAAA,EACVC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACE,MAAM,gBAAgBiC,cAAY,EAAClC,QAAQ,QAAO/B,SAAC,2BAG/DzB,EAAAA,EAAAA,MAACuD,EAAAA,EAAU,CAACC,QAAQ,KAAKtD,UAAU,MAAKuB,SAAA,CACrC61B,EAAc0C,QAAQI,mBAAmB,WAE5C14B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,UAAUC,MAAM,gBAAehC,SAAC,sCAS5DzB,EAAAA,EAAAA,MAACkM,EAAAA,EAAK,CAACrK,GAAI,CAAEC,GAAI,GAAIL,SAAA,EACnBzB,EAAAA,EAAAA,MAAC4c,EAAAA,EAAI,CACH9c,MAAO6Z,EACPrX,SAhdYua,CAAC7W,EAAO8W,KAC9BlD,EAAakD,EAAS,EAgdZie,eAAe,UACfC,UAAU,UACVx3B,QAAQ,YAAW/B,SAAA,EAEnBC,EAAAA,EAAAA,KAACqb,EAAAA,EAAG,CAACvP,MAAM9L,EAAAA,EAAAA,KAACu5B,GAAAA,EAAQ,IAAK57B,MAAM,cAC/BqC,EAAAA,EAAAA,KAACqb,EAAAA,EAAG,CAACvP,MAAM9L,EAAAA,EAAAA,KAACw5B,GAAAA,EAAM,IAAK77B,MAAM,mBAC7BqC,EAAAA,EAAAA,KAACqb,EAAAA,EAAG,CAACvP,MAAM9L,EAAAA,EAAAA,KAACy5B,GAAAA,EAAO,IAAK97B,MAAM,aAC9BqC,EAAAA,EAAAA,KAACqb,EAAAA,EAAG,CAACvP,MAAM9L,EAAAA,EAAAA,KAAC05B,GAAAA,EAAM,IAAK/7B,MAAM,iBAI/BW,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAEsK,EAAG,GAAI1K,SAAA,CAED,IAAdkY,IACC3Z,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAER,SAAA,EACzBzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,SAAA,EAChBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAAjE,SAAC,0BAGtCC,EAAAA,EAAAA,KAACwK,EAAAA,EAAK,CAAC1I,QAAQ,WAAW3B,GAAI,CAAEsK,EAAG,EAAGhC,OAAQ,KAAM1I,UAClDC,EAAAA,EAAAA,KAAC25B,GAAAA,EAAmB,CAACnxB,MAAM,OAAOC,OAAO,OAAM1I,UAC7CzB,EAAAA,EAAAA,MAACs7B,GAAAA,EAAS,CACRl6B,KAAMk2B,EAAc6B,aACpB1yB,OAAQ,CAAEyW,IAAK,GAAIC,MAAO,GAAIoe,KAAM,GAAI/K,OAAQ,IAAK/uB,SAAA,EAErDC,EAAAA,EAAAA,KAAC85B,GAAAA,EAAa,CAACC,gBAAgB,SAC/B/5B,EAAAA,EAAAA,KAACg6B,GAAAA,EAAK,CACJC,QAAQ,OACRC,KAAM,CAAE71B,SAAU,OAEpBrE,EAAAA,EAAAA,KAACm6B,GAAAA,EAAK,CAACD,KAAM,CAAE71B,SAAU,OACzBrE,EAAAA,EAAAA,KAACo6B,GAAAA,EAAe,KAChBp6B,EAAAA,EAAAA,KAACq6B,GAAAA,EAAM,KACPr6B,EAAAA,EAAAA,KAACs6B,GAAAA,EAAI,CACH16B,KAAK,WACLq6B,QAAQ,cACRz9B,KAAK,eACL+9B,OAAQrE,EAAOjpB,QACfutB,UAAW,CAAE/kB,EAAG,GAChBglB,YAAa,KAEfz6B,EAAAA,EAAAA,KAACs6B,GAAAA,EAAI,CACH16B,KAAK,WACLq6B,QAAQ,WACRz9B,KAAK,YACL+9B,OAAQrE,EAAOE,UACfqE,YAAa,KAEfz6B,EAAAA,EAAAA,KAACs6B,GAAAA,EAAI,CACH16B,KAAK,WACLq6B,QAAQ,WACRz9B,KAAK,WACL+9B,OAAQrE,EAAOI,KACfmE,YAAa,eAOvBn8B,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIke,GAAI,EAAE5e,SAAA,EACvBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAAjE,SAAC,yBAGtCC,EAAAA,EAAAA,KAACwK,EAAAA,EAAK,CAAC1I,QAAQ,WAAW3B,GAAI,CAAEsK,EAAG,EAAGhC,OAAQ,KAAM1I,UAClDC,EAAAA,EAAAA,KAAC25B,GAAAA,EAAmB,CAACnxB,MAAM,OAAOC,OAAO,OAAM1I,UAC7CzB,EAAAA,EAAAA,MAACo8B,GAAAA,EAAQ,CAAA36B,SAAA,EACPC,EAAAA,EAAAA,KAAC26B,GAAAA,EAAG,CACFj7B,KAAMk2B,EAAcuC,gBACpByC,GAAG,MACHC,GAAG,MACHC,WAAW,EACXC,YAAa,GACb7S,KAAK,UACL+R,QAAQ,QACRe,QAAQ,OACRr9B,MAAOmQ,IAAA,IAAC,KAAEtR,EAAI,QAAEy+B,GAASntB,EAAA,MAAK,GAAGtR,OAAoB,IAAVy+B,GAAe3X,QAAQ,KAAK,EAACvjB,SAEvE61B,EAAcuC,gBAAgBp6B,KAAI,CAACm9B,EAAO5uB,KACzCtM,EAAAA,EAAAA,KAACm7B,GAAAA,EAAI,CAEHjT,KAAMgO,EAAOK,UAAUjqB,EAAQ4pB,EAAOK,UAAU14B,SAD3C,QAAQyO,UAKnBtM,EAAAA,EAAAA,KAACo6B,GAAAA,EAAe,KAChBp6B,EAAAA,EAAAA,KAACq6B,GAAAA,EAAM,eAMf/7B,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIke,GAAI,EAAE5e,SAAA,EACvBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAAjE,SAAC,6BAGtCC,EAAAA,EAAAA,KAACwK,EAAAA,EAAK,CAAC1I,QAAQ,WAAW3B,GAAI,CAAEsK,EAAG,EAAGhC,OAAQ,KAAM1I,UAClDC,EAAAA,EAAAA,KAAC25B,GAAAA,EAAmB,CAACnxB,MAAM,OAAOC,OAAO,OAAM1I,UAC7CzB,EAAAA,EAAAA,MAAC88B,GAAAA,EAAgB,CACf17B,KAAMk2B,EAAcyC,QACpBgD,OAAO,WACPt2B,OAAQ,CAAEyW,IAAK,EAAGC,MAAO,GAAIoe,KAAM,GAAI/K,OAAQ,GAAI/uB,SAAA,EAEnDC,EAAAA,EAAAA,KAAC85B,GAAAA,EAAa,CAACC,gBAAgB,SAC/B/5B,EAAAA,EAAAA,KAACg6B,GAAAA,EAAK,CAACp6B,KAAK,YACZI,EAAAA,EAAAA,KAACm6B,GAAAA,EAAK,CACJF,QAAQ,UACRr6B,KAAK,WACLs6B,KAAM,CAAE71B,SAAU,OAEpBrE,EAAAA,EAAAA,KAACo6B,GAAAA,EAAe,KAChBp6B,EAAAA,EAAAA,KAACo7B,GAAAA,EAAiBE,IAAG,CACnBrB,QAAQ,QACRz9B,KAAK,QACL0rB,KAAMgO,EAAOjpB,uBAUZ,IAAdgL,IACC3Z,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAER,SAAA,EACzBzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,SAAA,EAChBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAAjE,SAAC,0BAGtCC,EAAAA,EAAAA,KAACwK,EAAAA,EAAK,CAAC1I,QAAQ,WAAW3B,GAAI,CAAEsK,EAAG,EAAGhC,OAAQ,KAAM1I,UAClDC,EAAAA,EAAAA,KAAC25B,GAAAA,EAAmB,CAACnxB,MAAM,OAAOC,OAAO,OAAM1I,UAC7CzB,EAAAA,EAAAA,MAACs7B,GAAAA,EAAS,CACRl6B,KAAMk2B,EAAc6B,aACpB1yB,OAAQ,CAAEyW,IAAK,GAAIC,MAAO,GAAIoe,KAAM,GAAI/K,OAAQ,IAAK/uB,SAAA,EAErDC,EAAAA,EAAAA,KAAC85B,GAAAA,EAAa,CAACC,gBAAgB,SAC/B/5B,EAAAA,EAAAA,KAACg6B,GAAAA,EAAK,CACJC,QAAQ,OACRC,KAAM,CAAE71B,SAAU,OAEpBrE,EAAAA,EAAAA,KAACm6B,GAAAA,EAAK,CAACD,KAAM,CAAE71B,SAAU,OACzBrE,EAAAA,EAAAA,KAACo6B,GAAAA,EAAe,KAChBp6B,EAAAA,EAAAA,KAACq6B,GAAAA,EAAM,KACPr6B,EAAAA,EAAAA,KAACs6B,GAAAA,EAAI,CACH16B,KAAK,WACLq6B,QAAQ,cACRz9B,KAAK,eACL+9B,OAAQrE,EAAOjpB,QACfutB,UAAW,CAAE/kB,EAAG,GAChBglB,YAAa,KAEfz6B,EAAAA,EAAAA,KAACs6B,GAAAA,EAAI,CACH16B,KAAK,WACLq6B,QAAQ,WACRz9B,KAAK,YACL+9B,OAAQrE,EAAOE,UACfqE,YAAa,KAEfz6B,EAAAA,EAAAA,KAACs6B,GAAAA,EAAI,CACH16B,KAAK,WACLq6B,QAAQ,WACRz9B,KAAK,WACL+9B,OAAQrE,EAAOI,KACfmE,YAAa,eAOvBn8B,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIke,GAAI,EAAE5e,SAAA,EACvBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAAjE,SAAC,yBAGtCC,EAAAA,EAAAA,KAACwK,EAAAA,EAAK,CAAC1I,QAAQ,WAAW3B,GAAI,CAAEsK,EAAG,EAAGhC,OAAQ,KAAM1I,UAClDC,EAAAA,EAAAA,KAAC25B,GAAAA,EAAmB,CAACnxB,MAAM,OAAOC,OAAO,OAAM1I,UAC7CzB,EAAAA,EAAAA,MAACo8B,GAAAA,EAAQ,CAAA36B,SAAA,EACPC,EAAAA,EAAAA,KAAC26B,GAAAA,EAAG,CACFj7B,KAAMk2B,EAAcuC,gBACpByC,GAAG,MACHC,GAAG,MACHC,WAAW,EACXC,YAAa,GACb7S,KAAK,UACL+R,QAAQ,QACRe,QAAQ,OACRr9B,MAAOsQ,IAAA,IAAC,KAAEzR,EAAI,QAAEy+B,GAAShtB,EAAA,MAAK,GAAGzR,OAAoB,IAAVy+B,GAAe3X,QAAQ,KAAK,EAACvjB,SAEvE61B,EAAcuC,gBAAgBp6B,KAAI,CAACm9B,EAAO5uB,KACzCtM,EAAAA,EAAAA,KAACm7B,GAAAA,EAAI,CAEHjT,KAAMgO,EAAOK,UAAUjqB,EAAQ4pB,EAAOK,UAAU14B,SAD3C,QAAQyO,UAKnBtM,EAAAA,EAAAA,KAACo6B,GAAAA,EAAe,KAChBp6B,EAAAA,EAAAA,KAACq6B,GAAAA,EAAM,eAMf/7B,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIke,GAAI,EAAE5e,SAAA,EACvBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAAjE,SAAC,6BAGtCC,EAAAA,EAAAA,KAACwK,EAAAA,EAAK,CAAC1I,QAAQ,WAAW3B,GAAI,CAAEsK,EAAG,EAAGhC,OAAQ,KAAM1I,UAClDC,EAAAA,EAAAA,KAAC25B,GAAAA,EAAmB,CAACnxB,MAAM,OAAOC,OAAO,OAAM1I,UAC7CzB,EAAAA,EAAAA,MAAC88B,GAAAA,EAAgB,CACf17B,KAAMk2B,EAAcyC,QACpBgD,OAAO,WACPt2B,OAAQ,CAAEyW,IAAK,EAAGC,MAAO,GAAIoe,KAAM,GAAI/K,OAAQ,GAAI/uB,SAAA,EAEnDC,EAAAA,EAAAA,KAAC85B,GAAAA,EAAa,CAACC,gBAAgB,SAC/B/5B,EAAAA,EAAAA,KAACg6B,GAAAA,EAAK,CAACp6B,KAAK,YACZI,EAAAA,EAAAA,KAACm6B,GAAAA,EAAK,CACJF,QAAQ,UACRr6B,KAAK,WACLs6B,KAAM,CAAE71B,SAAU,OAEpBrE,EAAAA,EAAAA,KAACo6B,GAAAA,EAAe,KAChBp6B,EAAAA,EAAAA,KAACo7B,GAAAA,EAAiBE,IAAG,CACnBrB,QAAQ,QACRz9B,KAAK,QACL0rB,KAAMgO,EAAOjpB,uBAUZ,IAAdgL,IACC3Z,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAER,SAAA,EACzBzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,SAAA,EAChBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAAjE,SAAC,yBAGtCC,EAAAA,EAAAA,KAACwK,EAAAA,EAAK,CAAC1I,QAAQ,WAAW3B,GAAI,CAAEsK,EAAG,EAAGhC,OAAQ,KAAM1I,UAClDC,EAAAA,EAAAA,KAAC25B,GAAAA,EAAmB,CAACnxB,MAAM,OAAOC,OAAO,OAAM1I,UAC7CzB,EAAAA,EAAAA,MAACo8B,GAAAA,EAAQ,CAAA36B,SAAA,EACPC,EAAAA,EAAAA,KAAC26B,GAAAA,EAAG,CACFj7B,KAAMk2B,EAAcuC,gBACpByC,GAAG,MACHC,GAAG,MACHC,WAAW,EACXC,YAAa,GACb7S,KAAK,UACL+R,QAAQ,QACRe,QAAQ,OACRr9B,MAAOuQ,IAAA,IAAC,KAAE1R,EAAI,QAAEy+B,GAAS/sB,EAAA,MAAK,GAAG1R,OAAoB,IAAVy+B,GAAe3X,QAAQ,KAAK,EAACvjB,SAEvE61B,EAAcuC,gBAAgBp6B,KAAI,CAACm9B,EAAO5uB,KACzCtM,EAAAA,EAAAA,KAACm7B,GAAAA,EAAI,CAEHjT,KAAMgO,EAAOK,UAAUjqB,EAAQ4pB,EAAOK,UAAU14B,SAD3C,QAAQyO,UAKnBtM,EAAAA,EAAAA,KAACo6B,GAAAA,EAAe,KAChBp6B,EAAAA,EAAAA,KAACq6B,GAAAA,EAAM,eAMf/7B,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIke,GAAI,EAAE5e,SAAA,EACvBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAAjE,SAAC,6BAGtCC,EAAAA,EAAAA,KAACwK,EAAAA,EAAK,CAAC1I,QAAQ,WAAW3B,GAAI,CAAEsK,EAAG,EAAGhC,OAAQ,KAAM1I,UAClDC,EAAAA,EAAAA,KAAC25B,GAAAA,EAAmB,CAACnxB,MAAM,OAAOC,OAAO,OAAM1I,UAC7CzB,EAAAA,EAAAA,MAAC88B,GAAAA,EAAgB,CACf17B,KAAMk2B,EAAcyC,QACpBgD,OAAO,WACPt2B,OAAQ,CAAEyW,IAAK,EAAGC,MAAO,GAAIoe,KAAM,GAAI/K,OAAQ,GAAI/uB,SAAA,EAEnDC,EAAAA,EAAAA,KAAC85B,GAAAA,EAAa,CAACC,gBAAgB,SAC/B/5B,EAAAA,EAAAA,KAACg6B,GAAAA,EAAK,CAACp6B,KAAK,YACZI,EAAAA,EAAAA,KAACm6B,GAAAA,EAAK,CACJF,QAAQ,UACRr6B,KAAK,WACLs6B,KAAM,CAAE71B,SAAU,OAEpBrE,EAAAA,EAAAA,KAACo6B,GAAAA,EAAe,KAChBp6B,EAAAA,EAAAA,KAACo7B,GAAAA,EAAiBE,IAAG,CACnBrB,QAAQ,QACRz9B,KAAK,QACL0rB,KAAMgO,EAAOjpB,uBAUZ,IAAdgL,IACC3Z,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAER,SAAA,EACzBzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIke,GAAI,EAAE5e,SAAA,EACvBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAAjE,SAAC,0BAGtCC,EAAAA,EAAAA,KAACwK,EAAAA,EAAK,CAAC1I,QAAQ,WAAW3B,GAAI,CAAEsK,EAAG,EAAGhC,OAAQ,KAAM1I,UAClDC,EAAAA,EAAAA,KAAC25B,GAAAA,EAAmB,CAACnxB,MAAM,OAAOC,OAAO,OAAM1I,UAC7CzB,EAAAA,EAAAA,MAACo8B,GAAAA,EAAQ,CAAA36B,SAAA,EACPC,EAAAA,EAAAA,KAAC26B,GAAAA,EAAG,CACFj7B,KAAMk2B,EAAcrS,aACpBqX,GAAG,MACHC,GAAG,MACHC,WAAW,EACXC,YAAa,GACb7S,KAAK,UACL+R,QAAQ,QACRe,QAAQ,WACRr9B,MAAO49B,IAAA,IAAC,SAAE9oB,EAAQ,QAAEwoB,GAASM,EAAA,MAAK,GAAG9oB,OAAwB,IAAVwoB,GAAe3X,QAAQ,KAAK,EAACvjB,SAE/E61B,EAAcrS,aAAaxlB,KAAI,CAACm9B,EAAO5uB,KACtCtM,EAAAA,EAAAA,KAACm7B,GAAAA,EAAI,CAEHjT,KAAMgO,EAAOK,UAAUjqB,EAAQ4pB,EAAOK,UAAU14B,SAD3C,QAAQyO,UAKnBtM,EAAAA,EAAAA,KAACo6B,GAAAA,EAAe,KAChBp6B,EAAAA,EAAAA,KAACq6B,GAAAA,EAAM,eAMf/7B,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIke,GAAI,EAAE5e,SAAA,EACvBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAAjE,SAAC,4BAGtCC,EAAAA,EAAAA,KAACw7B,GAAAA,EAAc,CAACh9B,UAAWgM,EAAAA,EAAO1I,QAAQ,WAAW3B,GAAI,CAAEsI,OAAQ,KAAM1I,UACvEzB,EAAAA,EAAAA,MAACm9B,GAAAA,EAAK,CAAC94B,KAAK,QAAO5C,SAAA,EACjBC,EAAAA,EAAAA,KAAC07B,GAAAA,EAAS,CAAA37B,UACRzB,EAAAA,EAAAA,MAACq9B,GAAAA,EAAQ,CAAA57B,SAAA,EACPC,EAAAA,EAAAA,KAAC47B,GAAAA,EAAS,CAAA77B,SAAC,qBACXC,EAAAA,EAAAA,KAAC47B,GAAAA,EAAS,CAAC33B,MAAM,SAAQlE,SAAC,WAC1BC,EAAAA,EAAAA,KAAC47B,GAAAA,EAAS,CAAC33B,MAAM,QAAOlE,SAAC,iBAG7BC,EAAAA,EAAAA,KAAC67B,GAAAA,EAAS,CAAA97B,SACP61B,EAAcwC,kBAAkBr6B,KAAKqN,IACpC9M,EAAAA,EAAAA,MAACq9B,GAAAA,EAAQ,CAAcG,OAAK,EAAA/7B,SAAA,EAC1BC,EAAAA,EAAAA,KAAC47B,GAAAA,EAAS,CAAA77B,SAAEqL,EAAIiB,WAChBrM,EAAAA,EAAAA,KAAC47B,GAAAA,EAAS,CAAC33B,MAAM,SAAQlE,SAAEqL,EAAIsI,SAC/B1T,EAAAA,EAAAA,KAAC47B,GAAAA,EAAS,CAAC33B,MAAM,QAAOlE,UACtBC,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC4B,GAAI,CACP+B,QAAS,eACTwG,QAAS8Q,GAAepO,EAAIqI,QAC5B1R,MAAO,OACPg6B,GAAI,IACJ3uB,GAAI,GACJtJ,aAAc,EACdO,SAAU,WACVtE,SACCwZ,GAAenO,EAAIqI,cAbXrI,EAAI1N,iBAuB7BY,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,SAAA,EAChBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAAjE,SAAC,iCAGtCC,EAAAA,EAAAA,KAACwK,EAAAA,EAAK,CAAC1I,QAAQ,WAAW3B,GAAI,CAAEsK,EAAG,EAAGhC,OAAQ,KAAM1I,UAClDzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CACP+B,QAAS,OACTmD,eAAgB,SAChBlD,WAAY,SACZwZ,cAAe,SACflT,OAAQ,OACR1G,MAAO,kBACPhC,SAAA,EACAC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQ3B,GAAI,CAAEC,GAAI,GAAIL,SAAC,oCAG3CC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAO/B,SAAC,wHAY1CC,EAAAA,EAAAA,KAACwK,EAAAA,EAAK,CAAC1I,QAAQ,WAAW3B,GAAI,CAAEsK,EAAG,EAAGrK,GAAI,GAAIL,UAC5CzB,EAAAA,EAAAA,MAACuD,EAAAA,EAAU,CAACC,QAAQ,QAAQC,MAAM,gBAAehC,SAAA,EAC/CC,EAAAA,EAAAA,KAACyL,GAAAA,EAAQ,CAACpH,SAAS,QAAQlE,GAAI,CAAEwS,cAAe,SAAUhI,GAAI,KAAO,+IAM3E3K,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQmD,eAAgB,SAAU+H,GAAI,GAAIrN,UAC5DC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAAA9B,SAAC,0BAGZ,ECphCJi8B,IAAiBC,EAAAA,EAAAA,OAAK,IAAM,yDAkclC,GA1bmBC,KACjB,MAAM3uB,GAAQgd,EAAAA,EAAAA,KACR4R,GAAWC,EAAAA,EAAAA,GAAc7uB,EAAM8uB,YAAYC,KAAK,QAChD,QAAEtrB,EAAO,YAAEE,EAAaI,UAAWirB,GAAuB5rB,MAGzD6rB,EAAiBC,IAAsBlgC,EAAAA,EAAAA,WAAS,IAChD+U,EAAWC,IAAgBhV,EAAAA,EAAAA,WAAS,IACpC0b,EAAWC,IAAgB3b,EAAAA,EAAAA,UAAS,IACpCgD,EAAO0D,IAAY1G,EAAAA,EAAAA,UAAS,OAC5BmgC,EAAMC,IAAWpgC,EAAAA,EAAAA,UAAS,OAC1BqgC,EAAgBC,IAAqBtgC,EAAAA,EAAAA,WAAS,IAC9CugC,EAAgBC,IAAqBxgC,EAAAA,EAAAA,UAAS,KAC9CygC,EAAc/rB,IAAc1U,EAAAA,EAAAA,WAAS,IAG5CsK,EAAAA,EAAAA,YAAU,KACR,MAAMo2B,EAAQ/9B,EAAAA,EAAYg+B,WACtBD,EACF9U,GAAAA,EAAMgV,SAASC,QAAQC,OAAsB,cAAI,UAAUJ,WAEpD9U,GAAAA,EAAMgV,SAASC,QAAQC,OAAsB,aACtD,GACC,CAACb,KAGJ31B,EAAAA,EAAAA,YAAU,KACgBnI,WACtB,IACE6S,GAAa,GACb,MAAM7M,QAAiBxF,EAAAA,EAAYo+B,kBAEnC,GAAI54B,EAAU,CACZi4B,EAAQj4B,GACR+3B,GAAmB,GACnBxrB,EAAWvM,EAASoM,OAASpM,EAASoM,MAAMjM,SAAS,UAGjDH,EAAS64B,kBACXV,GAAkB,GAEdn4B,EAAS9H,UACXmgC,EAAkBr4B,EAAS9H,WAK/B,MAAMqgC,EAAQ/9B,EAAAA,EAAYg+B,WACtBD,IACF9U,GAAAA,EAAMgV,SAASC,QAAQC,OAAsB,cAAI,UAAUJ,IAE/D,MACER,GAAmB,GACnBE,EAAQ,aACDxU,GAAAA,EAAMgV,SAASC,QAAQC,OAAsB,aAExD,CAAE,MAAO14B,GACPnF,QAAQD,MAAM,wBAAyBoF,GACvC1B,EAAS,6CACTw5B,GAAmB,GACnBE,EAAQ,KACV,CAAC,QACCprB,GAAa,EACf,GAGF+rB,EAAiB,GAChB,IAGH,MAeME,EAA2B9+B,UAC/B,IAEE,MAAM++B,EAAc,IACff,EACHa,iBAAiB,EACjB1tB,QAASnQ,EAAKmQ,QACd1F,YAAazK,EAAKyK,aAGpBwyB,EAAQc,GACRZ,GAAkB,GAGlB,MAAMa,QAAsBx+B,EAAAA,EAAYy+B,kBACpCD,GACFf,EAAQe,EAEZ,CAAE,MAAO/4B,GACPnF,QAAQD,MAAM,wCAAyCoF,GAEvDk4B,GAAkB,EACpB,GAuBF,OAAIvrB,GAAairB,GAEbj+B,EAAAA,EAAAA,MAACwR,EAAAA,EAAS,CAACnM,SAAS,KAAKxD,GAAI,CAAEiN,GAAI,EAAG/E,UAAW,UAAWtI,SAAA,EAC1DC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAgB,CAACC,KAAM,MACxB3C,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAK3B,GAAI,CAAEyB,GAAI,GAAI7B,SAAC,8BAQ1Cy8B,GAAmBI,GAEnB58B,EAAAA,EAAAA,KAAC49B,GAAc,CACbzvB,YAAa2uB,EACb52B,WAAYs3B,KAOhBl/B,EAAAA,EAAAA,MAACwR,EAAAA,EAAS,CAACnM,SAAS,KAAI5D,SAAA,EACtBzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAEmC,GAAI,GAAIvC,SAAA,EACjBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKtD,UAAU,KAAKwF,cAAY,EAACC,MAAM,SAAQlE,SAAC,6BAInER,IACCS,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACC,SAAS,QAAQC,GAAI,CAAEC,GAAI,GAAIL,SAAER,IAGzCi9B,GAECl+B,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAwB,SAAA,EACFzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAE+B,QAAS,OAAQmD,eAAgB,gBAAiBlD,WAAY,SAAU/B,GAAI,GAAIL,SAAA,EACzFzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAwB,SAAA,EACFzB,EAAAA,EAAAA,MAACuD,EAAAA,EAAU,CAACC,QAAQ,KAAI/B,SAAA,CAAC,YACb28B,EAAKlgC,MAAQkgC,EAAKjgC,UAG9B6B,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAEyB,GAAI,GAAI7B,SAAA,EACjBC,EAAAA,EAAAA,KAAC69B,GAAAA,GAAI,CAAC3rB,KAAM4rB,GAAAA,GAAMC,MAAMh+B,UACtBC,EAAAA,EAAAA,KAAC4S,EAAAA,EAAI,CACHjV,MAAM,QACNoE,MAAM,QACNY,KAAK,QACLxC,GAAI,CAAEwK,GAAI,QAId3K,EAAAA,EAAAA,KAAC69B,GAAAA,GAAI,CAAC3rB,KAAM4rB,GAAAA,GAAME,UAAUj+B,UAC1BC,EAAAA,EAAAA,KAAC4S,EAAAA,EAAI,CACHjV,MAAM,YACNoE,MAAM,UACNY,KAAK,QACLxC,GAAI,CAAEwK,GAAI,QAId3K,EAAAA,EAAAA,KAAC4S,EAAAA,EAAI,CACHjV,MAAM,cACNoE,MAAM,UACNY,KAAK,iBAKXrE,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAwB,SAAA,EACFC,EAAAA,EAAAA,KAACi+B,GAAAA,GAAa,CAAC/rB,KAAM,CAAC4rB,GAAAA,GAAMC,MAAOD,GAAAA,GAAME,WAAWj+B,UAClDC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLX,QAAQ,WACRC,MAAM,UACNvD,UAAW0/B,EAAAA,GACXC,GAAG,SACHh+B,GAAI,CAAEwK,GAAI,GAAI5K,SACf,mBAKHC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CAACX,QAAQ,WAAWC,MAAM,UAAUV,QAhGpC3C,UACnB,UACQQ,EAAAA,EAAYk/B,SAClB3B,GAAmB,GACnBE,EAAQ,MACRzkB,EAAa,UACNiQ,GAAAA,EAAMgV,SAASC,QAAQC,OAAsB,aACtD,CAAE,MAAO14B,GACPnF,QAAQD,MAAM,gBAAiBoF,GAC/B1B,EAAS,uCACX,GAsF6ElD,SAAC,kBAMtEzB,EAAAA,EAAAA,MAACkM,EAAAA,EAAK,CAAC+B,UAAW,EAAGpM,GAAI,CAAEC,GAAI,GAAIL,SAAA,EACjCzB,EAAAA,EAAAA,MAAC4c,EAAAA,EAAI,CACH9c,MAAO6Z,EACPrX,SA9GUua,CAAC7W,EAAO8W,KAC9BlD,EAAakD,EAAS,EA8GVtZ,QAASq6B,EAAW,aAAe,YACnCkC,gBAAelC,GAAW,OAC1BmC,UAAWnC,EAASp8B,SAAA,EAEpBC,EAAAA,EAAAA,KAACqb,EAAAA,EAAG,CAAC1d,MAAM,eACXqC,EAAAA,EAAAA,KAACqb,EAAAA,EAAG,CAAC1d,MAAM,sBACXqC,EAAAA,EAAAA,KAACqb,EAAAA,EAAG,CAAC1d,MAAM,aACXqC,EAAAA,EAAAA,KAACqb,EAAAA,EAAG,CAAC1d,MAAM,sBACXqC,EAAAA,EAAAA,KAACqb,EAAAA,EAAG,CAAC1d,MAAM,cAEVqT,IAAWhR,EAAAA,EAAAA,KAACqb,EAAAA,EAAG,CAAC1d,MAAM,eAEvBqC,EAAAA,EAAAA,KAACqb,EAAAA,EAAG,CAAC1d,MAAM,kBAGbW,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAEsK,EAAG,GAAI1K,SAAA,CACD,IAAdkY,IACC3Z,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAwB,SAAA,EACFC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAAjE,SAAC,2BAGtCzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAER,SAAA,EACzBC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIke,GAAI,EAAE5e,UACvBzB,EAAAA,EAAAA,MAACkM,EAAAA,EAAK,CAAC+B,UAAW,EAAGpM,GAAI,CAAEsK,EAAG,GAAI1K,SAAA,EAChCC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,YAAY4K,WAAW,OAAM3M,SAAC,sBAGlDzB,EAAAA,EAAAA,MAACuD,EAAAA,EAAU,CAACC,QAAQ,QAAO/B,SAAA,EACzBC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,UAAc,IAAE28B,EAAKlgC,SAE/B8B,EAAAA,EAAAA,MAACuD,EAAAA,EAAU,CAACC,QAAQ,QAAO/B,SAAA,EACzBC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,WAAe,IAAE28B,EAAKjgC,UAEhC6B,EAAAA,EAAAA,MAACuD,EAAAA,EAAU,CAACC,QAAQ,QAAO/B,SAAA,EACzBC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,UAAc,IAAE28B,EAAKxqB,SAE/B5T,EAAAA,EAAAA,MAACuD,EAAAA,EAAU,CAACC,QAAQ,QAAO/B,SAAA,EACzBC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBAAsB,IAAE,IAAIiV,KAAK0nB,EAAK6B,kBAAkBpiB,8BAItEnc,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIke,GAAI,EAAE5e,UACvBzB,EAAAA,EAAAA,MAACkM,EAAAA,EAAK,CAAC+B,UAAW,EAAGpM,GAAI,CAAEsK,EAAG,GAAI1K,SAAA,EAChCC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,YAAY4K,WAAW,OAAM3M,SAAC,mBAGlDzB,EAAAA,EAAAA,MAACuD,EAAAA,EAAU,CAACC,QAAQ,QAAO/B,SAAA,EACzBC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,wBAA4B,SAEtCzB,EAAAA,EAAAA,MAACuD,EAAAA,EAAU,CAACC,QAAQ,QAAO/B,SAAA,EACzBC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,uBAA2B,SAErCzB,EAAAA,EAAAA,MAACuD,EAAAA,EAAU,CAACC,QAAQ,QAAO/B,SAAA,EACzBC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,qBAAyB,cAKvCC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,UAChBC,EAAAA,EAAAA,KAACsS,GAAmB,OAGtBtS,EAAAA,EAAAA,KAACi+B,GAAAA,GAAa,CAAC/rB,KAAM,CAAC4rB,GAAAA,GAAMC,MAAOD,GAAAA,GAAME,WAAWj+B,UAClDC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,UAChBzB,EAAAA,EAAAA,MAACkM,EAAAA,EAAK,CAAC+B,UAAW,EAAGpM,GAAI,CAAEsK,EAAG,EAAG/B,QAASsI,EAAU,WAAa,cAAejR,SAAA,EAC9EC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,YAAY4K,WAAW,OAAM3M,SAAC,0BAGlDzB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAEyB,GAAI,EAAGM,QAAS,OAAQ2G,IAAK,GAAI9I,SAAA,EAC1CC,EAAAA,EAAAA,KAACw+B,GAAAA,GAAU,CAACxsB,WAAYysB,GAAAA,GAAYC,cAAc3+B,UAChDC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLX,QAAQ,YACRa,KAAK,QACLnE,UAAW0/B,EAAAA,GACXC,GAAG,sBAAqBp+B,SACzB,2BAKHC,EAAAA,EAAAA,KAAC69B,GAAAA,GAAI,CAAC3rB,KAAM4rB,GAAAA,GAAMC,MAAMh+B,UACtBC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CACLX,QAAQ,YACRC,MAAM,QACNY,KAAK,QACLnE,UAAW0/B,EAAAA,GACXC,GAAG,SAAQp+B,SACZ,sCAWF,IAAdkY,IACC3Z,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAwB,SAAA,EACFC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAAjE,SAAC,2BAGtCC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQoC,WAAS,EAAAnE,SAAC,6HAItCC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAER,UACzBC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAGV,UAChBC,EAAAA,EAAAA,KAACwK,EAAAA,EAAK,CAAC+B,UAAW,EAAGpM,GAAI,CAAEsK,EAAG,GAAI1K,UAChCC,EAAAA,EAAAA,KAAC2+B,EAAAA,SAAQ,CAACC,UAAU5+B,EAAAA,EAAAA,KAAC0C,EAAAA,EAAgB,IAAI3C,UACvCC,EAAAA,EAAAA,KAACg8B,GAAc,eAOZ,IAAd/jB,IACCjY,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAO/B,SAAC,qDAIf,IAAdkY,IACC3Z,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAwB,SAAA,EACFC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQoC,WAAS,EAAAnE,SAAC,0FAGtCC,EAAAA,EAAAA,KAAC6+B,GAAmB,CAACtnB,eAAgB,CAAC,OAG3B,IAAdU,IACC3Z,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAEmC,GAAI,GAAIvC,SAAA,EACjBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAAjE,SAAC,qCAGtCC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQ3B,GAAI,CAAEC,GAAI,GAAIL,SAAC,gGAG3CC,EAAAA,EAAAA,KAACuc,GAAkB,OAGR,IAAdtE,GAAmBjH,IAClB1S,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAC4B,GAAI,CAAEmC,GAAI,GAAIvC,SAAA,EACjBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAAjE,SAAC,4BAGtCC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQ3B,GAAI,CAAEC,GAAI,GAAIL,SAAC,oHAG3CC,EAAAA,EAAAA,KAAC+0B,GAAkB,OAGtB9c,KACCjH,GAAWE,EAAc,EAAI,KAE7B5S,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAAAwB,SAAA,EACFC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKkC,cAAY,EAAAjE,SAAC,4BAGtCC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQoC,WAAS,EAAAnE,SAAC,uEAItCzB,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAER,SAAA,EACzBC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIke,GAAI,EAAE5e,UACvBzB,EAAAA,EAAAA,MAACkM,EAAAA,EAAK,CAAC+B,UAAW,EAAGpM,GAAI,CAAEsK,EAAG,GAAI1K,SAAA,EAChCC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,YAAY4K,WAAW,OAAM3M,SAAC,qBAGlDC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQoC,WAAS,EAAAnE,SAAC,sEAGtCC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CAACE,KAAK,QAAQb,QAAQ,WAAU/B,SAAC,qBAG5CC,EAAAA,EAAAA,KAACK,EAAAA,GAAI,CAACG,MAAI,EAACC,GAAI,GAAIke,GAAI,EAAE5e,UACvBzB,EAAAA,EAAAA,MAACkM,EAAAA,EAAK,CAAC+B,UAAW,EAAGpM,GAAI,CAAEsK,EAAG,GAAI1K,SAAA,EAChCC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,YAAY4K,WAAW,OAAM3M,SAAC,kCAGlDC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQoC,WAAS,EAAAnE,SAAC,sEAGtCC,EAAAA,EAAAA,KAACyC,EAAAA,EAAM,CAACE,KAAK,QAAQb,QAAQ,WAAU/B,SAAC,oCAWxDC,EAAAA,EAAAA,KAACzB,EAAAA,EAAG,CAAC4B,GAAI,CAAEyB,GAAI,GAAI7B,UACjBzB,EAAAA,EAAAA,MAACkM,EAAAA,EAAK,CAAC+B,UAAW,EAAGpM,GAAI,CAAEsK,EAAG,GAAI1K,SAAA,EAChCC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,KAAKtD,UAAU,KAAKwF,cAAY,EAACC,MAAM,SAAQlE,SAAC,2BAGpEC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CAACC,QAAQ,QAAQoC,WAAS,EAACD,MAAM,SAAQlE,SAAC,mFAIrDC,EAAAA,EAAAA,KAAC8+B,EAAgB,CAAC1iC,UApWCsI,IAC7Bi4B,EAAQj4B,GACR+3B,GAAmB,GACnBxrB,EAAWvM,EAASoM,OAASpM,EAASoM,MAAMjM,SAAS,UAGjDH,EAAS9H,UACXmgC,EAAkBr4B,EAAS9H,UAI7BigC,GAAkB,EAAK,YAgWpBL,IACCx8B,EAAAA,EAAAA,KAAC2+B,EAAAA,SAAQ,CAACC,SAAU,KAAK7+B,UACvBC,EAAAA,EAAAA,KAACg8B,GAAc,QAGT,C,sECvdhB,MAAM3oB,EAAe,oBAsGrB,YApGA,MAQE,kBAAM0rB,GAA4B,IAAfzV,EAAO/hB,UAAA1J,OAAA,QAAA2J,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC5B,IACE,MAAM,UAAEy3B,EAAS,eAAEC,GAAmB3V,EAQtC,aANuB4V,EAAAA,GAAU16B,KAC/B,GAAG6O,aACH,CAAE2rB,YAAWC,kBACb,CAAE7B,SAAS+B,EAAAA,EAAAA,QAGGz/B,KAAK0/B,UACvB,CAAE,MAAO7/B,GAEP,MADAC,QAAQD,MAAM,gCAAiCA,GACzCA,CACR,CACF,CAMA,iBAAM8/B,GACJ,IAKE,aAJuBH,EAAAA,GAAUz3B,IAC/B4L,EACA,CAAE+pB,SAAS+B,EAAAA,EAAAA,QAEGz/B,KAAK4/B,OAAS,EAChC,CAAE,MAAO//B,GAEP,MADAC,QAAQD,MAAM,8BAA+BA,GACvCA,CACR,CACF,CAOA,kBAAM6P,CAAavM,GACjB,IAKE,aAJuBq8B,EAAAA,GAAU16B,KAC/B,GAAG6O,aACH,CAAExQ,UAEYnD,KAAK+E,KACvB,CAAE,MAAOlF,GAEP,OADAC,QAAQD,MAAM,gCAAiCA,IACxC,CACT,CACF,CAOA,oBAAMggC,CAAe18B,GACnB,IAME,eALuBq8B,EAAAA,GAAU16B,KAC/B,GAAG6O,eACH,CAAExQ,QACF,CAAEu6B,SAAS+B,EAAAA,EAAAA,QAEKz/B,KAAKG,OACzB,CAAE,MAAON,GAEP,OADAC,QAAQD,MAAM,kCAAmCA,IAC1C,CACT,CACF,CAQA,yBAAMigC,CAAoB38B,EAAMpG,GAC9B,IAME,aALuByiC,EAAAA,GAAU16B,KAC/B,GAAG6O,SACH,CAAExQ,OAAMpG,SACR,CAAE2gC,SAAS+B,EAAAA,EAAAA,QAEGz/B,KAAK+/B,SACvB,CAAE,MAAOlgC,GAEP,OADAC,QAAQD,MAAM,mCAAoCA,IAC3C,CACT,CACF,E,6DCpGF,MAAM8T,EAAe,cAqGrB,EARqB,CACnBqsB,yBArF+BhhC,UAC/B,IAME,aALuBwgC,EAAAA,EAAU16B,KAC/B,GAAG6O,wBACH,CAAC,EACD,CAAE+pB,SAAS+B,EAAAA,EAAAA,QAEGz/B,IAClB,CAAE,MAAOH,GAEP,MADAC,QAAQD,MAAM,uCAAwCA,GAChDA,CACR,GA2EAogC,YAlEkBjhC,UAClB,IAEE,aADuBwgC,EAAAA,EAAU16B,KAAK,GAAG6O,WAAuB,CAAE4pB,WAClDv9B,IAClB,CAAE,MAAOH,GAEP,MADAC,QAAQD,MAAM,yBAA0BA,GAClCA,CACR,GA4DAqgC,qBAnD2BlhC,UAC3B,IAEE,aADuBwgC,EAAAA,EAAU16B,KAAK,+BAAgC,CAAE/H,WACxDiD,IAClB,CAAE,MAAOH,GAEP,MADAC,QAAQD,MAAM,mCAAoCA,GAC5CA,CACR,GA6CAsgC,cAnCoBnhC,MAAOu+B,EAAO6C,KAClC,IAEE,aADuBZ,EAAAA,EAAU16B,KAAK,uBAAwB,CAAEy4B,QAAO6C,iBACvDpgC,IAClB,CAAE,MAAOH,GAEP,MADAC,QAAQD,MAAM,4BAA6BA,GACrCA,CACR,GA6BAwgC,eAnBqBrhC,MAAOmE,EAAMpG,KAClC,IAME,aALuByiC,EAAAA,EAAU16B,KAC/B,GAAG6O,gBACH,CAAE5W,QAAOoG,QACT,CAAEu6B,SAAS+B,EAAAA,EAAAA,QAEGz/B,IAClB,CAAE,MAAOH,GAEP,MADAC,QAAQD,MAAM,iCAAkCA,GAC1CA,CACR,G","sources":["features/beta-program/components/RegistrationForm.jsx","features/beta-program/components/onboarding/CodeRedemptionForm.jsx","features/beta-program/components/onboarding/UserProfileSetup.jsx","features/beta-program/components/onboarding/PreferencesSetup.jsx","features/beta-program/components/onboarding/WelcomeScreen.jsx","features/beta-program/components/OnboardingFlow.jsx","features/beta-program/hooks/useCurrentPermissions.js","features/beta-program/components/user/UserPermissionsCard.jsx","config/api.js","features/beta-program/services/FeatureRequestService.js","features/beta-program/components/feature-request/FeatureRequestBoard.jsx","features/beta-program/components/community/BetaCommunityForum.jsx","features/beta-program/services/analytics/AnalyticsService.js","webpack://tour-guide-ai/./src/features/beta-program/components/analytics/Analytics.module.css?7088","features/beta-program/services/SessionRecordingService.js","features/beta-program/components/analytics/SessionRecording.jsx","features/beta-program/components/analytics/HeatmapVisualization.jsx","features/beta-program/components/analytics/AnalyticsDashboard.jsx","features/beta-program/components/BetaPortal.jsx","features/beta-program/services/InviteCodeService.js","features/beta-program/services/EmailService.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  InputAdornment,\r\n  IconButton,\r\n  FormHelperText,\r\n  Alert,\r\n  Divider,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\r\nimport authService from '../services/AuthService';\r\n\r\n/**\r\n * Registration form for beta program users\r\n * Includes validation for email, password strength, and beta access code\r\n * \r\n * @param {Object} props Component props\r\n * @param {Function} props.onSuccess Callback function when registration is successful\r\n */\r\nconst RegistrationForm = ({ onSuccess }) => {\r\n  // Form state\r\n  const [formValues, setFormValues] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    betaCode: ''\r\n  });\r\n\r\n  // UI state\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\r\n  const [errors, setErrors] = useState({});\r\n  const [formError, setFormError] = useState(null);\r\n  const [formSuccess, setFormSuccess] = useState(null);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  // Password requirements\r\n  const passwordRequirements = [\r\n    { id: 'length', label: 'At least 8 characters', test: (password) => password.length >= 8 },\r\n    { id: 'uppercase', label: 'At least one uppercase letter', test: (password) => /[A-Z]/.test(password) },\r\n    { id: 'lowercase', label: 'At least one lowercase letter', test: (password) => /[a-z]/.test(password) },\r\n    { id: 'number', label: 'At least one number', test: (password) => /\\d/.test(password) },\r\n    { id: 'special', label: 'At least one special character', test: (password) => /[^A-Za-z0-9]/.test(password) }\r\n  ];\r\n\r\n  // Check password strength\r\n  const checkPasswordRequirements = (password) => {\r\n    return passwordRequirements.map(req => ({\r\n      ...req,\r\n      fulfilled: req.test(password)\r\n    }));\r\n  };\r\n\r\n  // Handle input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({\r\n      ...formValues,\r\n      [name]: value\r\n    });\r\n\r\n    // Clear specific error when field is edited\r\n    if (errors[name]) {\r\n      setErrors({\r\n        ...errors,\r\n        [name]: null\r\n      });\r\n    }\r\n\r\n    // Clear form-level errors when any field is edited\r\n    if (formError) {\r\n      setFormError(null);\r\n    }\r\n  };\r\n\r\n  // Toggle password visibility\r\n  const handleTogglePasswordVisibility = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  // Toggle confirm password visibility\r\n  const handleToggleConfirmPasswordVisibility = () => {\r\n    setShowConfirmPassword(!showConfirmPassword);\r\n  };\r\n\r\n  // Validate form\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    \r\n    // Name validation\r\n    if (!formValues.name.trim()) {\r\n      newErrors.name = 'Name is required';\r\n    }\r\n    \r\n    // Email validation\r\n    if (!formValues.email) {\r\n      newErrors.email = 'Email is required';\r\n    } else if (!/\\S+@\\S+\\.\\S+/.test(formValues.email)) {\r\n      newErrors.email = 'Email is invalid';\r\n    }\r\n    \r\n    // Password validation\r\n    if (!formValues.password) {\r\n      newErrors.password = 'Password is required';\r\n    } else {\r\n      const requirements = checkPasswordRequirements(formValues.password);\r\n      const failedRequirements = requirements.filter(req => !req.fulfilled);\r\n      if (failedRequirements.length > 0) {\r\n        newErrors.password = 'Password does not meet requirements';\r\n      }\r\n    }\r\n    \r\n    // Confirm password validation\r\n    if (!formValues.confirmPassword) {\r\n      newErrors.confirmPassword = 'Please confirm your password';\r\n    } else if (formValues.password !== formValues.confirmPassword) {\r\n      newErrors.confirmPassword = 'Passwords do not match';\r\n    }\r\n    \r\n    // Beta code validation\r\n    if (!formValues.betaCode) {\r\n      newErrors.betaCode = 'Beta access code is required';\r\n    } else if (formValues.betaCode.length !== 6) {\r\n      newErrors.betaCode = 'Beta code must be 6 characters';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    setFormError(null);\r\n    setFormSuccess(null);\r\n    \r\n    try {\r\n      // Validate beta code first\r\n      const isValidCode = await authService.validateBetaCode(formValues.betaCode);\r\n      \r\n      if (!isValidCode) {\r\n        setErrors({\r\n          ...errors,\r\n          betaCode: 'Invalid or expired beta code'\r\n        });\r\n        setIsSubmitting(false);\r\n        return;\r\n      }\r\n      \r\n      // Use AuthService register method (updated version)\r\n      const result = await authService.register(\r\n        formValues.email, \r\n        formValues.betaCode, \r\n        formValues.name, \r\n        formValues.password\r\n      );\r\n      \r\n      if (!result) {\r\n        setFormError('Registration failed: Invalid server response');\r\n        setIsSubmitting(false);\r\n        return;\r\n      }\r\n      \r\n      setFormSuccess('Registration successful! Redirecting to your dashboard...');\r\n      \r\n      // Notify parent component of successful registration\r\n      setTimeout(() => {\r\n        if (onSuccess) {\r\n          onSuccess(result);\r\n        }\r\n      }, 1500);\r\n      \r\n    } catch (error) {\r\n      console.error('Registration error:', error);\r\n      \r\n      if (error.response && error.response.data && error.response.data.error) {\r\n        // Handle specific API errors\r\n        const apiError = error.response.data.error;\r\n        \r\n        if (apiError.type === 'duplicate_email') {\r\n          setErrors({\r\n            ...errors,\r\n            email: 'This email is already registered'\r\n          });\r\n        } else if (apiError.type === 'invalid_invite_code') {\r\n          setErrors({\r\n            ...errors,\r\n            betaCode: 'Invalid or expired beta code'\r\n          });\r\n        } else {\r\n          setFormError(apiError.message || 'Registration failed');\r\n        }\r\n      } else {\r\n        setFormError('Registration failed: ' + (error.message || 'Unknown error'));\r\n      }\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Password requirements display\r\n  const renderPasswordRequirements = () => {\r\n    if (!formValues.password) {\r\n      return null;\r\n    }\r\n    \r\n    const requirements = checkPasswordRequirements(formValues.password);\r\n    \r\n    return (\r\n      <Box sx={{ mt: 1, mb: 2 }}>\r\n        <Typography variant=\"caption\" color=\"textSecondary\">\r\n          Password requirements:\r\n        </Typography>\r\n        <Grid container spacing={1}>\r\n          {requirements.map((req) => (\r\n            <Grid item xs={12} sm={6} key={req.id}>\r\n              <FormHelperText\r\n                sx={{\r\n                  color: req.fulfilled ? 'success.main' : 'text.secondary',\r\n                  display: 'flex',\r\n                  alignItems: 'center'\r\n                }}\r\n              >\r\n                {req.fulfilled ? '✓' : '○'} {req.label}\r\n              </FormHelperText>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box component=\"form\" onSubmit={handleSubmit} noValidate>\r\n      {formError && (\r\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\r\n          {formError}\r\n        </Alert>\r\n      )}\r\n      \r\n      {formSuccess && (\r\n        <Alert severity=\"success\" sx={{ mb: 2 }}>\r\n          {formSuccess}\r\n        </Alert>\r\n      )}\r\n      \r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            name=\"name\"\r\n            label=\"Full Name\"\r\n            fullWidth\r\n            value={formValues.name}\r\n            onChange={handleInputChange}\r\n            error={!!errors.name}\r\n            helperText={errors.name}\r\n            disabled={isSubmitting}\r\n            required\r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={12}>\r\n          <TextField\r\n            name=\"email\"\r\n            label=\"Email Address\"\r\n            fullWidth\r\n            type=\"email\"\r\n            value={formValues.email}\r\n            onChange={handleInputChange}\r\n            error={!!errors.email}\r\n            helperText={errors.email}\r\n            disabled={isSubmitting}\r\n            required\r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={12}>\r\n          <TextField\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            fullWidth\r\n            type={showPassword ? 'text' : 'password'}\r\n            value={formValues.password}\r\n            onChange={handleInputChange}\r\n            error={!!errors.password}\r\n            helperText={errors.password}\r\n            disabled={isSubmitting}\r\n            required\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    onClick={handleTogglePasswordVisibility}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n          {renderPasswordRequirements()}\r\n        </Grid>\r\n        \r\n        <Grid item xs={12}>\r\n          <TextField\r\n            name=\"confirmPassword\"\r\n            label=\"Confirm Password\"\r\n            fullWidth\r\n            type={showConfirmPassword ? 'text' : 'password'}\r\n            value={formValues.confirmPassword}\r\n            onChange={handleInputChange}\r\n            error={!!errors.confirmPassword}\r\n            helperText={errors.confirmPassword}\r\n            disabled={isSubmitting}\r\n            required\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton\r\n                    onClick={handleToggleConfirmPasswordVisibility}\r\n                    edge=\"end\"\r\n                  >\r\n                    {showConfirmPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={12}>\r\n          <Divider sx={{ my: 1 }} />\r\n        </Grid>\r\n        \r\n        <Grid item xs={12}>\r\n          <TextField\r\n            name=\"betaCode\"\r\n            label=\"Beta Access Code\"\r\n            fullWidth\r\n            value={formValues.betaCode}\r\n            onChange={handleInputChange}\r\n            error={!!errors.betaCode}\r\n            helperText={errors.betaCode || \"Enter the 6-character code you received via email\"}\r\n            disabled={isSubmitting}\r\n            required\r\n            inputProps={{ maxLength: 6 }}\r\n          />\r\n        </Grid>\r\n        \r\n        <Grid item xs={12}>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={isSubmitting}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            {isSubmitting ? <CircularProgress size={24} /> : 'Register'}\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm; ","import React, { useState } from 'react';\r\nimport { \r\n  TextField,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Typography,\r\n  Box,\r\n  CircularProgress,\r\n  Alert,\r\n  InputAdornment,\r\n  IconButton,\r\n  Collapse\r\n} from '@mui/material';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport HelpIcon from '@mui/icons-material/Help';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport { apiHelpers } from '../../../../core/services/apiClient';\r\n\r\n/**\r\n * Beta Code Redemption Form\r\n * Handles validation and redemption of beta invite codes\r\n */\r\nconst CodeRedemptionForm = ({ onSuccess, onError }) => {\r\n  const [code, setCode] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const [helpOpen, setHelpOpen] = useState(false);\r\n  const [validationState, setValidationState] = useState(null); // null, 'validating', 'valid', 'invalid'\r\n\r\n  /**\r\n   * Validate the invite code format\r\n   * @param {string} codeValue The invite code to validate\r\n   * @returns {boolean} Whether the code has a valid format\r\n   */\r\n  const isValidCodeFormat = (codeValue) => {\r\n    // Beta codes should follow pattern: XXXX-XXXX-XXXX where X is alphanumeric\r\n    const codePattern = /^[A-Za-z0-9]{4}-[A-Za-z0-9]{4}-[A-Za-z0-9]{4}$/;\r\n    return codePattern.test(codeValue);\r\n  };\r\n\r\n  /**\r\n   * Handle input change and validate format in real-time\r\n   */\r\n  const handleCodeChange = (event) => {\r\n    const newCode = event.target.value;\r\n    setCode(newCode);\r\n    setError(null);\r\n    \r\n    // Auto-format as user types (add hyphens)\r\n    if (newCode.length === 4 && !newCode.includes('-')) {\r\n      setCode(newCode + '-');\r\n    } else if (newCode.length === 9 && newCode.indexOf('-', 5) === -1) {\r\n      setCode(newCode + '-');\r\n    }\r\n    \r\n    // Live validation\r\n    if (newCode.length > 0) {\r\n      if (isValidCodeFormat(newCode)) {\r\n        setValidationState('valid');\r\n      } else if (newCode.length >= 14) {\r\n        setValidationState('invalid');\r\n      } else {\r\n        setValidationState('validating');\r\n      }\r\n    } else {\r\n      setValidationState(null);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle form submission and code validation with the API\r\n   */\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    if (!isValidCodeFormat(code)) {\r\n      setError('Please enter a valid invite code (XXXX-XXXX-XXXX)');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // In a real implementation, this would call the beta code API endpoint\r\n      const response = await apiHelpers.post('/beta/redeem-code', { code });\r\n      \r\n      setLoading(false);\r\n      \r\n      if (response.valid) {\r\n        setSuccess(true);\r\n        setValidationState('valid');\r\n        \r\n        // Call success callback with user data\r\n        if (onSuccess) {\r\n          setTimeout(() => {\r\n            onSuccess(response.userData);\r\n          }, 1000); // Small delay for visual feedback\r\n        }\r\n      } else {\r\n        setError(response.message || 'Invalid or expired code');\r\n        setValidationState('invalid');\r\n        if (onError) onError(response.message);\r\n      }\r\n    } catch (err) {\r\n      setLoading(false);\r\n      setError(err.message || 'Failed to validate code. Please try again.');\r\n      setValidationState('invalid');\r\n      if (onError) onError(err.message);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get the appropriate icon based on validation state\r\n   */\r\n  const getValidationIcon = () => {\r\n    if (validationState === 'valid') {\r\n      return <CheckCircleIcon color=\"success\" />;\r\n    } else if (validationState === 'invalid') {\r\n      return <ErrorIcon color=\"error\" />;\r\n    } else if (validationState === 'validating' && code.length > 0) {\r\n      return <CircularProgress size={20} />;\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <Card \r\n      sx={{ \r\n        maxWidth: 500, \r\n        mx: 'auto', \r\n        mt: 4,\r\n        boxShadow: 3,\r\n        borderRadius: 2\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom align=\"center\">\r\n          Enter Beta Invite Code\r\n        </Typography>\r\n        \r\n        <Typography variant=\"body2\" color=\"text.secondary\" paragraph align=\"center\">\r\n          Please enter the invite code you received via email to access the beta program.\r\n        </Typography>\r\n        \r\n        {error && (\r\n          <Alert \r\n            severity=\"error\" \r\n            sx={{ mb: 2 }}\r\n            action={\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => setError(null)}\r\n              >\r\n                <ClearIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            }\r\n          >\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        \r\n        {success && (\r\n          <Alert \r\n            severity=\"success\" \r\n            sx={{ mb: 2 }}\r\n            action={\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => setSuccess(false)}\r\n              >\r\n                <ClearIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            }\r\n          >\r\n            Code accepted! Proceeding to account setup...\r\n          </Alert>\r\n        )}\r\n        \r\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Beta Invite Code\"\r\n            variant=\"outlined\"\r\n            value={code}\r\n            onChange={handleCodeChange}\r\n            margin=\"normal\"\r\n            placeholder=\"XXXX-XXXX-XXXX\"\r\n            disabled={loading || success}\r\n            error={validationState === 'invalid'}\r\n            helperText={validationState === 'invalid' ? \"Invalid code format\" : \"\"}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  {getValidationIcon()}\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n            sx={{ mb: 2 }}\r\n          />\r\n          \r\n          <Collapse in={helpOpen}>\r\n            <Alert severity=\"info\" sx={{ mb: 2 }}>\r\n              <Typography variant=\"body2\">\r\n                Your beta invite code was sent to your email address when you were selected for the beta program.\r\n                The code is in the format XXXX-XXXX-XXXX (e.g., A1B2-C3D4-E5F6).\r\n              </Typography>\r\n              <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                If you've lost your code or didn't receive one, please contact support at beta@tourguideai.com\r\n              </Typography>\r\n            </Alert>\r\n          </Collapse>\r\n          \r\n          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n            <Button\r\n              startIcon={<HelpIcon />}\r\n              onClick={() => setHelpOpen(!helpOpen)}\r\n              color=\"secondary\"\r\n            >\r\n              {helpOpen ? \"Hide Help\" : \"Need Help?\"}\r\n            </Button>\r\n            \r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              disabled={loading || success || validationState !== 'valid'}\r\n              sx={{ minWidth: 120 }}\r\n            >\r\n              {loading ? <CircularProgress size={24} /> : \"Redeem Code\"}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </CardContent>\r\n      \r\n      <CardActions sx={{ justifyContent: 'center', pb: 2 }}>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          Don't have a code? <Button color=\"secondary\" size=\"small\">Request Access</Button>\r\n        </Typography>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CodeRedemptionForm; ","import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Box, \r\n  TextField, \r\n  Button, \r\n  Typography, \r\n  Avatar, \r\n  Card,\r\n  CardContent,\r\n  IconButton,\r\n  Grid,\r\n  CircularProgress,\r\n  Alert,\r\n  Tooltip,\r\n  InputAdornment\r\n} from '@mui/material';\r\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport ErrorIcon from '@mui/icons-material/Error';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { apiHelpers } from '../../../../core/services/apiClient';\r\n\r\n/**\r\n * User Profile Setup Component\r\n * Allows beta users to create their profile during onboarding\r\n */\r\nconst UserProfileSetup = ({ initialData = {}, onComplete }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: initialData.name || '',\r\n    email: initialData.email || '',\r\n    username: initialData.username || '',\r\n    profilePicture: initialData.profilePicture || null\r\n  });\r\n  \r\n  const [preview, setPreview] = useState(null);\r\n  const [validating, setValidating] = useState({\r\n    username: false,\r\n    email: false\r\n  });\r\n  const [validation, setValidation] = useState({\r\n    name: null,\r\n    email: null,\r\n    username: null\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Generate preview URL for the selected profile image\r\n  useEffect(() => {\r\n    if (formData.profilePicture && typeof formData.profilePicture === 'object') {\r\n      const reader = new FileReader();\r\n      reader.onloadend = () => {\r\n        setPreview(reader.result);\r\n      };\r\n      reader.readAsDataURL(formData.profilePicture);\r\n    } else if (formData.profilePicture && typeof formData.profilePicture === 'string') {\r\n      // If it's already a URL string\r\n      setPreview(formData.profilePicture);\r\n    } else {\r\n      setPreview(null);\r\n    }\r\n  }, [formData.profilePicture]);\r\n  \r\n  /**\r\n   * Handle input field changes\r\n   */\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    \r\n    // Clear validation errors when field changes\r\n    if (validation[name]) {\r\n      setValidation(prev => ({\r\n        ...prev,\r\n        [name]: null\r\n      }));\r\n    }\r\n    \r\n    // Real-time validation for some fields\r\n    if (name === 'email') {\r\n      validateEmail(value, false);\r\n    } else if (name === 'username') {\r\n      validateUsername(value, false);\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * Handle profile picture selection\r\n   */\r\n  const handleProfilePictureChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      if (file.size > 5 * 1024 * 1024) {\r\n        setError('Profile picture must be less than 5MB');\r\n        return;\r\n      }\r\n      \r\n      if (!file.type.startsWith('image/')) {\r\n        setError('Selected file must be an image');\r\n        return;\r\n      }\r\n      \r\n      setFormData(prev => ({\r\n        ...prev,\r\n        profilePicture: file\r\n      }));\r\n      setError(null);\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * Remove the selected profile picture\r\n   */\r\n  const handleRemoveProfilePicture = () => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      profilePicture: null\r\n    }));\r\n    setPreview(null);\r\n  };\r\n  \r\n  /**\r\n   * Validate email format and availability\r\n   */\r\n  const validateEmail = async (email, showFeedback = true) => {\r\n    // Basic email format validation\r\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n    if (!emailRegex.test(email)) {\r\n      setValidation(prev => ({\r\n        ...prev,\r\n        email: { valid: false, message: 'Please enter a valid email address' }\r\n      }));\r\n      return false;\r\n    }\r\n    \r\n    if (showFeedback) {\r\n      setValidating(prev => ({ ...prev, email: true }));\r\n    }\r\n    \r\n    try {\r\n      // Check if the email is already in use\r\n      const response = await apiHelpers.get(`/beta/validate-email?email=${encodeURIComponent(email)}`);\r\n      \r\n      setValidating(prev => ({ ...prev, email: false }));\r\n      \r\n      if (response.available) {\r\n        setValidation(prev => ({\r\n          ...prev,\r\n          email: { valid: true, message: 'Email is available' }\r\n        }));\r\n        return true;\r\n      } else {\r\n        setValidation(prev => ({\r\n          ...prev,\r\n          email: { valid: false, message: 'Email is already in use' }\r\n        }));\r\n        return false;\r\n      }\r\n    } catch (err) {\r\n      setValidating(prev => ({ ...prev, email: false }));\r\n      setValidation(prev => ({\r\n        ...prev,\r\n        email: { valid: false, message: 'Unable to validate email' }\r\n      }));\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * Validate username format and availability\r\n   */\r\n  const validateUsername = async (username, showFeedback = true) => {\r\n    // Basic username format validation\r\n    const usernameRegex = /^[a-zA-Z0-9_]{3,20}$/;\r\n    if (!usernameRegex.test(username)) {\r\n      setValidation(prev => ({\r\n        ...prev,\r\n        username: { \r\n          valid: false, \r\n          message: 'Username must be 3-20 characters and contain only letters, numbers, and underscores' \r\n        }\r\n      }));\r\n      return false;\r\n    }\r\n    \r\n    if (showFeedback) {\r\n      setValidating(prev => ({ ...prev, username: true }));\r\n    }\r\n    \r\n    try {\r\n      // Check if the username is already taken\r\n      const response = await apiHelpers.get(`/beta/validate-username?username=${encodeURIComponent(username)}`);\r\n      \r\n      setValidating(prev => ({ ...prev, username: false }));\r\n      \r\n      if (response.available) {\r\n        setValidation(prev => ({\r\n          ...prev,\r\n          username: { valid: true, message: 'Username is available' }\r\n        }));\r\n        return true;\r\n      } else {\r\n        setValidation(prev => ({\r\n          ...prev,\r\n          username: { valid: false, message: 'Username is already taken' }\r\n        }));\r\n        return false;\r\n      }\r\n    } catch (err) {\r\n      setValidating(prev => ({ ...prev, username: false }));\r\n      setValidation(prev => ({\r\n        ...prev,\r\n        username: { valid: false, message: 'Unable to validate username' }\r\n      }));\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * Validate name field\r\n   */\r\n  const validateName = (name) => {\r\n    if (!name || name.trim().length < 2) {\r\n      setValidation(prev => ({\r\n        ...prev,\r\n        name: { valid: false, message: 'Please enter your name (minimum 2 characters)' }\r\n      }));\r\n      return false;\r\n    }\r\n    \r\n    setValidation(prev => ({\r\n      ...prev,\r\n      name: { valid: true, message: null }\r\n    }));\r\n    return true;\r\n  };\r\n  \r\n  /**\r\n   * Validate all form fields\r\n   */\r\n  const validateForm = async () => {\r\n    const nameValid = validateName(formData.name);\r\n    const emailValid = await validateEmail(formData.email);\r\n    const usernameValid = await validateUsername(formData.username);\r\n    \r\n    return nameValid && emailValid && usernameValid;\r\n  };\r\n  \r\n  /**\r\n   * Handle form submission\r\n   */\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    const isValid = await validateForm();\r\n    \r\n    if (!isValid) {\r\n      setLoading(false);\r\n      setError('Please fix the validation errors before proceeding');\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      // In a real implementation, this would upload the profile picture and save the profile\r\n      if (formData.profilePicture && typeof formData.profilePicture === 'object') {\r\n        // Simulate file upload\r\n        // In a real app, you would use FormData and send it to the server\r\n        console.log('Uploading profile picture...');\r\n        // Simulate a successful upload that returns a URL\r\n        formData.profilePicture = URL.createObjectURL(formData.profilePicture);\r\n      }\r\n      \r\n      // Call the completion callback with the profile data\r\n      onComplete(formData);\r\n    } catch (err) {\r\n      setError(err.message || 'Failed to save profile. Please try again.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * Get validation feedback for a field\r\n   */\r\n  const getFieldFeedback = (fieldName) => {\r\n    if (!validation[fieldName]) return null;\r\n    \r\n    const { valid, message } = validation[fieldName];\r\n    \r\n    if (valid) {\r\n      return (\r\n        <InputAdornment position=\"end\">\r\n          <CheckCircleIcon color=\"success\" />\r\n        </InputAdornment>\r\n      );\r\n    } else {\r\n      return (\r\n        <InputAdornment position=\"end\">\r\n          <ErrorIcon color=\"error\" />\r\n        </InputAdornment>\r\n      );\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Card sx={{ maxWidth: 700, mx: 'auto', boxShadow: 0 }}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom align=\"center\">\r\n          Create Your Profile\r\n        </Typography>\r\n        \r\n        <Typography variant=\"body2\" color=\"text.secondary\" paragraph align=\"center\">\r\n          Set up your profile information for the beta program.\r\n        </Typography>\r\n        \r\n        {error && (\r\n          <Alert \r\n            severity=\"error\" \r\n            sx={{ mb: 3 }}\r\n            action={\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => setError(null)}\r\n              >\r\n                <CloseIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            }\r\n          >\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        \r\n        <Box component=\"form\" onSubmit={handleSubmit} noValidate>\r\n          <Grid container spacing={3}>\r\n            {/* Profile Picture */}\r\n            <Grid item xs={12} display=\"flex\" justifyContent=\"center\">\r\n              <Box textAlign=\"center\">\r\n                <Avatar\r\n                  src={preview}\r\n                  sx={{\r\n                    width: 120,\r\n                    height: 120,\r\n                    mb: 2,\r\n                    bgcolor: 'primary.main'\r\n                  }}\r\n                >\r\n                  {!preview && (formData.name ? formData.name.charAt(0).toUpperCase() : 'U')}\r\n                </Avatar>\r\n                \r\n                <Box sx={{ display: 'flex', gap: 1, justifyContent: 'center' }}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"label\"\r\n                    startIcon={<PhotoCameraIcon />}\r\n                  >\r\n                    {preview ? 'Change Photo' : 'Upload Photo'}\r\n                    <input\r\n                      type=\"file\"\r\n                      hidden\r\n                      accept=\"image/*\"\r\n                      onChange={handleProfilePictureChange}\r\n                    />\r\n                  </Button>\r\n                  \r\n                  {preview && (\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"error\"\r\n                      onClick={handleRemoveProfilePicture}\r\n                    >\r\n                      Remove\r\n                    </Button>\r\n                  )}\r\n                </Box>\r\n                \r\n                <Typography variant=\"caption\" color=\"text.secondary\" display=\"block\" mt={1}>\r\n                  Max size: 5MB. Recommended: 400x400px\r\n                </Typography>\r\n              </Box>\r\n            </Grid>\r\n            \r\n            {/* Name Field */}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Full Name\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter your full name\"\r\n                helperText={validation.name?.message || \"Your name as you'd like it to appear in the beta program\"}\r\n                error={validation.name?.valid === false}\r\n                InputProps={{\r\n                  endAdornment: getFieldFeedback('name')\r\n                }}\r\n                required\r\n              />\r\n            </Grid>\r\n            \r\n            {/* Email Field */}\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                placeholder=\"your@email.com\"\r\n                helperText={validation.email?.message || \"We'll send beta invites to this email\"}\r\n                error={validation.email?.valid === false}\r\n                InputProps={{\r\n                  endAdornment: validating.email ? (\r\n                    <InputAdornment position=\"end\">\r\n                      <CircularProgress size={20} />\r\n                    </InputAdornment>\r\n                  ) : getFieldFeedback('email')\r\n                }}\r\n                required\r\n              />\r\n            </Grid>\r\n            \r\n            {/* Username Field */}\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                value={formData.username}\r\n                onChange={handleChange}\r\n                variant=\"outlined\"\r\n                placeholder=\"username\"\r\n                helperText={validation.username?.message || \"Choose a unique username (3-20 characters)\"}\r\n                error={validation.username?.valid === false}\r\n                InputProps={{\r\n                  startAdornment: <InputAdornment position=\"start\">@</InputAdornment>,\r\n                  endAdornment: validating.username ? (\r\n                    <InputAdornment position=\"end\">\r\n                      <CircularProgress size={20} />\r\n                    </InputAdornment>\r\n                  ) : getFieldFeedback('username')\r\n                }}\r\n                required\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          \r\n          <Box sx={{ mt: 4, display: 'flex', justifyContent: 'flex-end' }}>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              disabled={loading}\r\n              sx={{ minWidth: 150 }}\r\n            >\r\n              {loading ? <CircularProgress size={24} /> : \"Save Profile\"}\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserProfileSetup; ","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  FormControlLabel,\r\n  Switch,\r\n  FormGroup,\r\n  FormControl,\r\n  FormLabel,\r\n  RadioGroup,\r\n  Radio,\r\n  Divider,\r\n  Button,\r\n  Alert,\r\n  Grid,\r\n  Paper,\r\n  Tooltip,\r\n  IconButton\r\n} from '@mui/material';\r\nimport InfoIcon from '@mui/icons-material/Info';\r\nimport NotificationsIcon from '@mui/icons-material/Notifications';\r\nimport SecurityIcon from '@mui/icons-material/Security';\r\nimport BetaIcon from '@mui/icons-material/NewReleases';\r\n\r\n/**\r\n * User preferences setup component for onboarding flow\r\n * Allows new beta users to set their preferences for the application\r\n * \r\n * @param {Object} props Component props\r\n * @param {Object} props.initialData Initial preferences data\r\n * @param {Function} props.onSubmit Callback function when preferences are submitted\r\n */\r\nconst PreferencesSetup = ({ initialPreferences = {}, onComplete }) => {\r\n  // Merge default preferences with any provided initial values\r\n  const defaultPreferences = {\r\n    notifications: {\r\n      email: true,\r\n      push: true,\r\n      digest: 'daily'\r\n    },\r\n    privacy: {\r\n      dataSharing: true,\r\n      analyticsCollection: true,\r\n      feedbackSharing: true\r\n    },\r\n    features: {\r\n      earlyAccess: true,\r\n      betaFeatures: true,\r\n      experimentalFeatures: false\r\n    }\r\n  };\r\n\r\n  // Initialize state with merged preferences\r\n  const [preferences, setPreferences] = useState({\r\n    ...defaultPreferences,\r\n    ...initialPreferences,\r\n    notifications: {\r\n      ...defaultPreferences.notifications,\r\n      ...(initialPreferences.notifications || {})\r\n    },\r\n    privacy: {\r\n      ...defaultPreferences.privacy,\r\n      ...(initialPreferences.privacy || {})\r\n    },\r\n    features: {\r\n      ...defaultPreferences.features,\r\n      ...(initialPreferences.features || {})\r\n    }\r\n  });\r\n\r\n  /**\r\n   * Handle toggle switch changes\r\n   * @param {string} section Preference section (notifications, privacy, features)\r\n   * @param {string} name Preference name\r\n   */\r\n  const handleToggleChange = (section, name) => (event) => {\r\n    setPreferences({\r\n      ...preferences,\r\n      [section]: {\r\n        ...preferences[section],\r\n        [name]: event.target.checked\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handle radio button changes\r\n   * @param {string} section Preference section\r\n   * @param {string} name Preference name\r\n   */\r\n  const handleRadioChange = (section, name) => (event) => {\r\n    setPreferences({\r\n      ...preferences,\r\n      [section]: {\r\n        ...preferences[section],\r\n        [name]: event.target.value\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handle form submission\r\n   */\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    onComplete(preferences);\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ maxWidth: 700, mx: 'auto', boxShadow: 0 }}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\" gutterBottom align=\"center\">\r\n          Set Your Preferences\r\n        </Typography>\r\n\r\n        <Typography variant=\"body2\" color=\"text.secondary\" paragraph align=\"center\">\r\n          Customize your beta experience with these preferences. You can change these settings anytime later.\r\n        </Typography>\r\n\r\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 3 }}>\r\n          <Grid container spacing={3}>\r\n            {/* Notification Preferences */}\r\n            <Grid item xs={12}>\r\n              <Paper variant=\"outlined\" sx={{ p: 3, borderRadius: 2 }}>\r\n                <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n                  <NotificationsIcon color=\"primary\" sx={{ mr: 1 }} />\r\n                  <Typography variant=\"h6\">Notification Preferences</Typography>\r\n                </Box>\r\n\r\n                <FormGroup>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={preferences.notifications.email}\r\n                        onChange={handleToggleChange('notifications', 'email')}\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label=\"Email Notifications\"\r\n                  />\r\n                  <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 4, mt: -1, mb: 1, display: 'block' }}>\r\n                    Receive important updates, feature announcements, and feedback requests via email\r\n                  </Typography>\r\n\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={preferences.notifications.push}\r\n                        onChange={handleToggleChange('notifications', 'push')}\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label=\"Push Notifications\"\r\n                  />\r\n                  <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 4, mt: -1, mb: 1, display: 'block' }}>\r\n                    Receive real-time alerts in your browser for important updates\r\n                  </Typography>\r\n\r\n                  <Box mt={2}>\r\n                    <FormControl component=\"fieldset\">\r\n                      <FormLabel component=\"legend\">Digest Frequency</FormLabel>\r\n                      <RadioGroup\r\n                        value={preferences.notifications.digest}\r\n                        onChange={handleRadioChange('notifications', 'digest')}\r\n                        row\r\n                      >\r\n                        <FormControlLabel value=\"daily\" control={<Radio />} label=\"Daily\" />\r\n                        <FormControlLabel value=\"weekly\" control={<Radio />} label=\"Weekly\" />\r\n                        <FormControlLabel value=\"never\" control={<Radio />} label=\"Never\" />\r\n                      </RadioGroup>\r\n                    </FormControl>\r\n                  </Box>\r\n                </FormGroup>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            {/* Privacy Preferences */}\r\n            <Grid item xs={12}>\r\n              <Paper variant=\"outlined\" sx={{ p: 3, borderRadius: 2 }}>\r\n                <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n                  <SecurityIcon color=\"primary\" sx={{ mr: 1 }} />\r\n                  <Typography variant=\"h6\">Privacy Preferences</Typography>\r\n                </Box>\r\n\r\n                <Alert severity=\"info\" sx={{ mb: 2 }}>\r\n                  As a beta tester, your feedback and usage data help us improve the product. \r\n                  You can adjust how much information is shared with us.\r\n                </Alert>\r\n\r\n                <FormGroup>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={preferences.privacy.dataSharing}\r\n                        onChange={handleToggleChange('privacy', 'dataSharing')}\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label={\r\n                      <Box display=\"flex\" alignItems=\"center\">\r\n                        Usage Data Sharing\r\n                        <Tooltip title=\"We collect anonymous usage data to improve the product experience. This includes features used, time spent, and interaction patterns.\">\r\n                          <IconButton size=\"small\">\r\n                            <InfoIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </Box>\r\n                    }\r\n                  />\r\n\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={preferences.privacy.analyticsCollection}\r\n                        onChange={handleToggleChange('privacy', 'analyticsCollection')}\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label={\r\n                      <Box display=\"flex\" alignItems=\"center\">\r\n                        Performance Analytics\r\n                        <Tooltip title=\"Helps us identify performance issues, errors, and areas for optimization.\">\r\n                          <IconButton size=\"small\">\r\n                            <InfoIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </Box>\r\n                    }\r\n                  />\r\n\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={preferences.privacy.feedbackSharing}\r\n                        onChange={handleToggleChange('privacy', 'feedbackSharing')}\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label={\r\n                      <Box display=\"flex\" alignItems=\"center\">\r\n                        Feedback Sharing\r\n                        <Tooltip title=\"Allow your feedback to be shared (anonymously) with the product team to prioritize features.\">\r\n                          <IconButton size=\"small\">\r\n                            <InfoIcon fontSize=\"small\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </Box>\r\n                    }\r\n                  />\r\n                </FormGroup>\r\n              </Paper>\r\n            </Grid>\r\n\r\n            {/* Feature Preferences */}\r\n            <Grid item xs={12}>\r\n              <Paper variant=\"outlined\" sx={{ p: 3, borderRadius: 2 }}>\r\n                <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n                  <BetaIcon color=\"primary\" sx={{ mr: 1 }} />\r\n                  <Typography variant=\"h6\">Feature Preferences</Typography>\r\n                </Box>\r\n\r\n                <FormGroup>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={preferences.features.earlyAccess}\r\n                        onChange={handleToggleChange('features', 'earlyAccess')}\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label=\"Early Access Features\"\r\n                  />\r\n                  <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 4, mt: -1, mb: 1, display: 'block' }}>\r\n                    Get access to new features before they're released to the public\r\n                  </Typography>\r\n\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={preferences.features.betaFeatures}\r\n                        onChange={handleToggleChange('features', 'betaFeatures')}\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label=\"Beta Features\"\r\n                  />\r\n                  <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 4, mt: -1, mb: 1, display: 'block' }}>\r\n                    Enable beta features that are still under active development\r\n                  </Typography>\r\n\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={preferences.features.experimentalFeatures}\r\n                        onChange={handleToggleChange('features', 'experimentalFeatures')}\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                    label={\r\n                      <Box display=\"flex\" alignItems=\"center\">\r\n                        Experimental Features\r\n                        <Tooltip title=\"Warning: These features may be unstable and could cause unexpected behavior.\">\r\n                          <IconButton size=\"small\">\r\n                            <InfoIcon fontSize=\"small\" color=\"warning\" />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </Box>\r\n                    }\r\n                  />\r\n                  <Typography variant=\"caption\" color=\"text.secondary\" sx={{ ml: 4, mt: -1, mb: 1, display: 'block' }}>\r\n                    Try experimental features that are in early stages of development\r\n                  </Typography>\r\n                </FormGroup>\r\n              </Paper>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Box sx={{ mt: 4, display: 'flex', justifyContent: 'flex-end' }}>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              size=\"large\"\r\n              sx={{ minWidth: 150 }}\r\n            >\r\n              Save Preferences\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PreferencesSetup; ","import React from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  CircularProgress,\r\n  Alert,\r\n  Divider\r\n} from '@mui/material';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport ExploreIcon from '@mui/icons-material/Explore';\r\nimport MapIcon from '@mui/icons-material/Map';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport FeedbackIcon from '@mui/icons-material/Feedback';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\n\r\n/**\r\n * Welcome Screen Component\r\n * Final step in the onboarding flow showing feature highlights and next steps\r\n */\r\nconst WelcomeScreen = ({ userName, onComplete, loading, error }) => {\r\n  // Key features to highlight\r\n  const keyFeatures = [\r\n    {\r\n      icon: <ChatIcon color=\"primary\" />,\r\n      title: 'AI-Powered Chat',\r\n      description: 'Generate personalized travel plans based on your preferences using our advanced AI'\r\n    },\r\n    {\r\n      icon: <MapIcon color=\"primary\" />,\r\n      title: 'Interactive Maps',\r\n      description: 'Visualize your travel routes and discover points of interest along the way'\r\n    },\r\n    {\r\n      icon: <ExploreIcon color=\"primary\" />,\r\n      title: 'Customized Itineraries',\r\n      description: 'Create and save detailed itineraries tailored to your travel style and interests'\r\n    },\r\n    {\r\n      icon: <FeedbackIcon color=\"primary\" />,\r\n      title: 'Beta Feedback',\r\n      description: 'Share your thoughts and suggestions to help shape the future of TourGuideAI'\r\n    }\r\n  ];\r\n\r\n  // Next steps for the beta user\r\n  const nextSteps = [\r\n    'Explore the dashboard to get familiar with the interface',\r\n    'Create your first travel plan using the Chat feature',\r\n    'Visualize your route on the interactive Map',\r\n    'Share your feedback about your experience'\r\n  ];\r\n\r\n  /**\r\n   * Handle completion of the onboarding flow\r\n   */\r\n  const handleGetStarted = () => {\r\n    if (onComplete) {\r\n      onComplete();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ maxWidth: 800, mx: 'auto', boxShadow: 0 }}>\r\n      <CardContent>\r\n        <Box textAlign=\"center\" mb={4}>\r\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n            Welcome to TourGuideAI Beta, {userName || 'Explorer'}!\r\n          </Typography>\r\n          \r\n          <Typography variant=\"body1\" color=\"text.secondary\">\r\n            Thank you for joining our beta program. We're excited to have you help us shape the future of travel planning!\r\n          </Typography>\r\n        </Box>\r\n        \r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ mb: 3 }}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        \r\n        <Grid container spacing={4}>\r\n          {/* Key Features */}\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" gutterBottom sx={{ ml: 2 }}>\r\n              Key Features to Explore\r\n            </Typography>\r\n            \r\n            <Grid container spacing={2}>\r\n              {keyFeatures.map((feature, index) => (\r\n                <Grid item xs={12} sm={6} key={index}>\r\n                  <Paper\r\n                    elevation={1}\r\n                    sx={{\r\n                      p: 2,\r\n                      height: '100%',\r\n                      borderRadius: 2,\r\n                      transition: 'transform 0.2s, box-shadow 0.2s',\r\n                      '&:hover': {\r\n                        transform: 'translateY(-4px)',\r\n                        boxShadow: 3\r\n                      }\r\n                    }}\r\n                  >\r\n                    <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                      <Box mr={1}>{feature.icon}</Box>\r\n                      <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                        {feature.title}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {feature.description}\r\n                    </Typography>\r\n                  </Paper>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Grid>\r\n          \r\n          {/* Next Steps */}\r\n          <Grid item xs={12}>\r\n            <Typography variant=\"h6\" gutterBottom sx={{ ml: 2 }}>\r\n              Your Next Steps\r\n            </Typography>\r\n            \r\n            <Paper\r\n              elevation={1}\r\n              sx={{\r\n                p: 3,\r\n                borderRadius: 2\r\n              }}\r\n            >\r\n              <List>\r\n                {nextSteps.map((step, index) => (\r\n                  <React.Fragment key={index}>\r\n                    <ListItem>\r\n                      <ListItemIcon>\r\n                        <CheckCircleIcon color=\"primary\" />\r\n                      </ListItemIcon>\r\n                      <ListItemText primary={step} />\r\n                    </ListItem>\r\n                    {index < nextSteps.length - 1 && <Divider component=\"li\" />}\r\n                  </React.Fragment>\r\n                ))}\r\n              </List>\r\n            </Paper>\r\n          </Grid>\r\n          \r\n          {/* Beta Badge */}\r\n          <Grid item xs={12}>\r\n            <Paper\r\n              elevation={1}\r\n              sx={{\r\n                p: 3,\r\n                borderRadius: 2,\r\n                bgcolor: 'primary.light',\r\n                color: 'primary.contrastText'\r\n              }}\r\n            >\r\n              <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n                <PersonIcon sx={{ mr: 1 }} />\r\n                <Typography variant=\"body1\" fontWeight=\"medium\">\r\n                  You're now an official TourGuideAI Beta Tester! Your feedback will help us create a better product.\r\n                </Typography>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        <Box display=\"flex\" justifyContent=\"center\" mt={4}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            onClick={handleGetStarted}\r\n            disabled={loading}\r\n            sx={{ \r\n              minWidth: 200,\r\n              py: 1.5,\r\n              fontSize: '1.1rem',\r\n              boxShadow: 2\r\n            }}\r\n          >\r\n            {loading ? (\r\n              <CircularProgress size={24} color=\"inherit\" />\r\n            ) : (\r\n              'Get Started!'\r\n            )}\r\n          </Button>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default WelcomeScreen; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n  Button,\r\n  Typography,\r\n  Paper,\r\n  Container,\r\n  CircularProgress,\r\n  Alert,\r\n  Divider\r\n} from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\nimport authService from '../services/AuthService';\r\nimport inviteCodeService from '../services/InviteCodeService';\r\nimport CodeRedemptionForm from './onboarding/CodeRedemptionForm';\r\nimport UserProfileSetup from './onboarding/UserProfileSetup';\r\nimport PreferencesSetup from './onboarding/PreferencesSetup';\r\nimport WelcomeScreen from './onboarding/WelcomeScreen';\r\n\r\n// Styled components\r\nconst OnboardingPaper = styled(Paper)(({ theme }) => ({\r\n  padding: theme.spacing(4),\r\n  marginTop: theme.spacing(2),\r\n  marginBottom: theme.spacing(2),\r\n  boxShadow: theme.shadows[3],\r\n  borderRadius: theme.shape.borderRadius * 2,\r\n}));\r\n\r\nconst StepContainer = styled(Box)(({ theme }) => ({\r\n  marginTop: theme.spacing(3),\r\n  marginBottom: theme.spacing(3),\r\n  minHeight: '300px',\r\n}));\r\n\r\nconst ButtonContainer = styled(Box)(({ theme }) => ({\r\n  display: 'flex',\r\n  justifyContent: 'space-between',\r\n  marginTop: theme.spacing(4),\r\n}));\r\n\r\n/**\r\n * Onboarding flow for new beta users\r\n * Guides users through the complete setup process including code redemption\r\n * \r\n * @param {Object} props Component props\r\n * @param {Function} props.onComplete Callback function when onboarding is complete\r\n * @param {String} props.initialCode Initial beta code (if provided)\r\n */\r\nconst OnboardingFlow = ({ onComplete, initialCode = '' }) => {\r\n  // Onboarding steps\r\n  const steps = [\r\n    'Redeem Beta Code',\r\n    'Setup Your Profile',\r\n    'Set Preferences',\r\n    'Welcome to Beta'\r\n  ];\r\n\r\n  // State\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n  const [betaCode, setBetaCode] = useState(initialCode);\r\n  const [userProfile, setUserProfile] = useState({\r\n    displayName: '',\r\n    jobTitle: '',\r\n    company: '',\r\n    profilePicture: null,\r\n    bio: ''\r\n  });\r\n  const [preferences, setPreferences] = useState({\r\n    notificationEmail: true,\r\n    dataSharingLevel: 'minimal',\r\n    tourPreferences: [],\r\n    interestTopics: []\r\n  });\r\n\r\n  // Initialize with code if provided\r\n  useEffect(() => {\r\n    if (initialCode) {\r\n      setBetaCode(initialCode);\r\n      // If code is provided and valid, we might want to skip to next step\r\n      validateAndProceed(initialCode);\r\n    }\r\n  }, [initialCode]);\r\n\r\n  // Validate code and move to next step if valid\r\n  const validateAndProceed = async (code) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      const isValid = await inviteCodeService.validateCode(code);\r\n      \r\n      if (isValid) {\r\n        setSuccess('Beta code accepted!');\r\n        setTimeout(() => {\r\n          setActiveStep(1);\r\n          setSuccess(null);\r\n        }, 1000);\r\n      } else {\r\n        setError('Invalid or expired beta code. Please check and try again.');\r\n      }\r\n    } catch (err) {\r\n      console.error('Error validating beta code:', err);\r\n      setError('Error validating beta code. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle code redemption\r\n  const handleCodeRedemption = (code) => {\r\n    setBetaCode(code);\r\n    validateAndProceed(code);\r\n  };\r\n\r\n  // Handle profile setup\r\n  const handleProfileSetup = (profileData) => {\r\n    setUserProfile(profileData);\r\n    setActiveStep(2);\r\n  };\r\n\r\n  // Handle preferences setup\r\n  const handlePreferencesSetup = (preferencesData) => {\r\n    setPreferences(preferencesData);\r\n    setActiveStep(3);\r\n  };\r\n\r\n  // Handle completion of onboarding\r\n  const handleFinishOnboarding = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // Save all data to user profile\r\n      await authService.updateUserProfile({\r\n        ...userProfile,\r\n        preferences,\r\n        onboardingCompleted: true\r\n      });\r\n      \r\n      setSuccess('Onboarding completed successfully!');\r\n      \r\n      // Notify parent component\r\n      setTimeout(() => {\r\n        if (onComplete) {\r\n          onComplete({\r\n            betaCode,\r\n            profile: userProfile,\r\n            preferences\r\n          });\r\n        }\r\n      }, 1500);\r\n    } catch (err) {\r\n      console.error('Error completing onboarding:', err);\r\n      setError('Error saving your preferences. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle next step\r\n  const handleNext = () => {\r\n    setActiveStep(prevStep => prevStep + 1);\r\n  };\r\n\r\n  // Handle back step\r\n  const handleBack = () => {\r\n    setActiveStep(prevStep => prevStep - 1);\r\n  };\r\n\r\n  // Render current step content\r\n  const getStepContent = (step) => {\r\n    switch (step) {\r\n      case 0:\r\n        return (\r\n          <CodeRedemptionForm \r\n            initialCode={betaCode} \r\n            onSubmit={handleCodeRedemption} \r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <UserProfileSetup\r\n            initialData={userProfile}\r\n            onSubmit={handleProfileSetup}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <PreferencesSetup\r\n            initialData={preferences}\r\n            onSubmit={handlePreferencesSetup}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <WelcomeScreen\r\n            profile={userProfile}\r\n            onFinish={handleFinishOnboarding}\r\n          />\r\n        );\r\n      default:\r\n        return 'Unknown step';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <OnboardingPaper>\r\n        <Typography variant=\"h4\" component=\"h1\" align=\"center\" gutterBottom>\r\n          Beta Program Onboarding\r\n        </Typography>\r\n        \r\n        <Typography variant=\"body1\" color=\"textSecondary\" align=\"center\" paragraph>\r\n          Complete the following steps to set up your beta experience\r\n        </Typography>\r\n        \r\n        <Divider sx={{ my: 2 }} />\r\n        \r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ my: 2 }}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        \r\n        {success && (\r\n          <Alert severity=\"success\" sx={{ my: 2 }}>\r\n            {success}\r\n          </Alert>\r\n        )}\r\n        \r\n        <Stepper activeStep={activeStep} sx={{ mt: 3, mb: 4 }}>\r\n          {steps.map((label) => (\r\n            <Step key={label}>\r\n              <StepLabel>{label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n        \r\n        <StepContainer>\r\n          {loading ? (\r\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" height=\"100%\">\r\n              <CircularProgress />\r\n            </Box>\r\n          ) : (\r\n            getStepContent(activeStep)\r\n          )}\r\n        </StepContainer>\r\n        \r\n        <ButtonContainer>\r\n          <Button\r\n            disabled={activeStep === 0 || loading}\r\n            onClick={handleBack}\r\n            variant=\"outlined\"\r\n          >\r\n            Back\r\n          </Button>\r\n          \r\n          {activeStep < steps.length - 1 ? (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleNext}\r\n              disabled={loading || (activeStep === 0 && !betaCode)}\r\n            >\r\n              Next\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleFinishOnboarding}\r\n              disabled={loading}\r\n            >\r\n              Finish\r\n            </Button>\r\n          )}\r\n        </ButtonContainer>\r\n      </OnboardingPaper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default OnboardingFlow; ","import { useState, useEffect } from 'react';\r\nimport permissionsService from '../services/PermissionsService';\r\n\r\n/**\r\n * Custom hook for accessing current user permissions and roles\r\n * @returns {Object} Object containing permissions and roles data and utility functions\r\n */\r\nconst useCurrentPermissions = () => {\r\n  const [permissions, setPermissions] = useState([]);\r\n  const [roles, setRoles] = useState([]);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [isModerator, setIsModerator] = useState(false);\r\n  const [isBetaTester, setIsBetaTester] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchPermissions = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        \r\n        // Initialize permissions if needed\r\n        await permissionsService.initialize();\r\n        \r\n        // Get all permissions and roles\r\n        const allPermissions = permissionsService.getAllPermissions();\r\n        const allRoles = permissionsService.getAllRoles();\r\n        \r\n        setPermissions(allPermissions);\r\n        setRoles(allRoles);\r\n        \r\n        // Check specific roles\r\n        setIsAdmin(await permissionsService.isAdmin());\r\n        setIsModerator(await permissionsService.isModerator());\r\n        setIsBetaTester(await permissionsService.isBetaTester());\r\n      } catch (error) {\r\n        console.error('Error fetching permissions:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchPermissions();\r\n  }, []);\r\n\r\n  /**\r\n   * Check if user has a specific permission\r\n   * @param {string} permission Permission to check\r\n   * @returns {boolean} Whether user has the permission\r\n   */\r\n  const hasPermission = async (permission) => {\r\n    return await permissionsService.hasPermission(permission);\r\n  };\r\n\r\n  /**\r\n   * Check if user has a specific role\r\n   * @param {string} role Role to check\r\n   * @returns {boolean} Whether user has the role\r\n   */\r\n  const hasRole = async (role) => {\r\n    return await permissionsService.hasRole(role);\r\n  };\r\n\r\n  /**\r\n   * Check if user has any of the specified permissions\r\n   * @param {string[]} permissionList Permissions to check\r\n   * @returns {boolean} Whether user has any of the permissions\r\n   */\r\n  const hasAnyPermission = async (permissionList) => {\r\n    return await permissionsService.hasAnyPermission(permissionList);\r\n  };\r\n\r\n  /**\r\n   * Check if user has all of the specified permissions\r\n   * @param {string[]} permissionList Permissions to check\r\n   * @returns {boolean} Whether user has all of the permissions\r\n   */\r\n  const hasAllPermissions = async (permissionList) => {\r\n    return await permissionsService.hasAllPermissions(permissionList);\r\n  };\r\n\r\n  return {\r\n    permissions,\r\n    roles,\r\n    isAdmin,\r\n    isModerator,\r\n    isBetaTester,\r\n    isLoading,\r\n    hasPermission,\r\n    hasRole,\r\n    hasAnyPermission,\r\n    hasAllPermissions\r\n  };\r\n};\r\n\r\nexport default useCurrentPermissions; ","import React, { useEffect, useState } from 'react';\r\nimport { \r\n  Box, \r\n  Typography, \r\n  Paper,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Chip,\r\n  Divider,\r\n  CircularProgress\r\n} from '@mui/material';\r\nimport SecurityIcon from '@mui/icons-material/Security';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\nimport VerifiedUserIcon from '@mui/icons-material/VerifiedUser';\r\nimport GppBadIcon from '@mui/icons-material/GppBad';\r\nimport permissionsService from '../../services/PermissionsService';\r\nimport { useCurrentPermissions } from '../../hooks';\r\n\r\n/**\r\n * UserPermissionsCard Component\r\n * \r\n * Displays the current user's roles and permissions\r\n */\r\nconst UserPermissionsCard = () => {\r\n  const { \r\n    permissions, \r\n    roles, \r\n    isAdmin, \r\n    isModerator, \r\n    isBetaTester,\r\n    isLoading \r\n  } = useCurrentPermissions();\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" p={3}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  // Group permissions by category\r\n  const groupedPermissions = {};\r\n  permissions.forEach(permission => {\r\n    const category = permission.split(':')[0];\r\n    if (!groupedPermissions[category]) {\r\n      groupedPermissions[category] = [];\r\n    }\r\n    groupedPermissions[category].push(permission);\r\n  });\r\n\r\n  return (\r\n    <Paper elevation={2} sx={{ p: 2 }}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        <SecurityIcon sx={{ mr: 1, verticalAlign: 'text-bottom' }} />\r\n        Security Roles & Permissions\r\n      </Typography>\r\n      \r\n      <Box mt={2}>\r\n        <Typography variant=\"subtitle1\">\r\n          Your Roles\r\n        </Typography>\r\n        <Box display=\"flex\" gap={1} mt={1} mb={2}>\r\n          {isAdmin && (\r\n            <Chip \r\n              icon={<VerifiedUserIcon />} \r\n              label=\"Admin\" \r\n              color=\"error\" \r\n              variant=\"outlined\" \r\n            />\r\n          )}\r\n          {isModerator && (\r\n            <Chip \r\n              icon={<VerifiedUserIcon />} \r\n              label=\"Moderator\" \r\n              color=\"warning\" \r\n              variant=\"outlined\" \r\n            />\r\n          )}\r\n          {isBetaTester && (\r\n            <Chip \r\n              icon={<VerifiedUserIcon />} \r\n              label=\"Beta Tester\" \r\n              color=\"primary\" \r\n              variant=\"outlined\" \r\n            />\r\n          )}\r\n          {!isAdmin && !isModerator && !isBetaTester && (\r\n            <Chip \r\n              icon={<GppBadIcon />} \r\n              label=\"No Roles\" \r\n              color=\"default\" \r\n              variant=\"outlined\" \r\n            />\r\n          )}\r\n        </Box>\r\n      </Box>\r\n      \r\n      <Divider sx={{ my: 2 }} />\r\n      \r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        Your Permissions\r\n      </Typography>\r\n\r\n      {Object.keys(groupedPermissions).length === 0 ? (\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          You don't have any specific permissions assigned.\r\n        </Typography>\r\n      ) : (\r\n        <List dense sx={{ mb: 1 }}>\r\n          {Object.entries(groupedPermissions).map(([category, perms]) => (\r\n            <Box key={category} mb={2}>\r\n              <Typography \r\n                variant=\"subtitle2\" \r\n                color=\"primary\" \r\n                sx={{ textTransform: 'capitalize' }}\r\n              >\r\n                {category}\r\n              </Typography>\r\n              {perms.map(permission => (\r\n                <ListItem key={permission} dense>\r\n                  <ListItemIcon sx={{ minWidth: 30 }}>\r\n                    <LockIcon fontSize=\"small\" color=\"action\" />\r\n                  </ListItemIcon>\r\n                  <ListItemText \r\n                    primary={permission.split(':')[1]} \r\n                    primaryTypographyProps={{ \r\n                      variant: 'body2',\r\n                      sx: { textTransform: 'capitalize' }\r\n                    }}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </Box>\r\n          ))}\r\n        </List>\r\n      )}\r\n      \r\n      <Typography variant=\"caption\" color=\"text.secondary\">\r\n        These permissions determine what actions you can perform within the beta program.\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default UserPermissionsCard; ","/**\r\n * API configuration\r\n * Centralizes API-related constants and settings\r\n */\r\n\r\n// Base URL for the API\r\nexport const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001/api';\r\n\r\n// API endpoints\r\nexport const ENDPOINTS = {\r\n  AUTH: {\r\n    LOGIN: '/auth/login',\r\n    REGISTER: '/auth/register',\r\n    REFRESH_TOKEN: '/auth/refresh',\r\n    VERIFY: '/auth/verify'\r\n  },\r\n  BETA: {\r\n    REDEEM_CODE: '/beta/redeem-code',\r\n    USER_PROFILE: '/beta/user-profile',\r\n    PREFERENCES: '/beta/preferences',\r\n    ONBOARDING: '/beta/onboarding'\r\n  },\r\n  ANALYTICS: {\r\n    USER_ACTIVITY: '/analytics/user-activity',\r\n    DEVICE_DISTRIBUTION: '/analytics/device-distribution',\r\n    FEATURE_USAGE: '/analytics/feature-usage',\r\n    SESSION_RECORDINGS: '/analytics/session-recordings',\r\n    HEATMAP_DATA: '/analytics/heatmap-data'\r\n  }\r\n};\r\n\r\n// Request timeout in milliseconds\r\nexport const REQUEST_TIMEOUT = 30000;\r\n\r\n// Default headers\r\nexport const DEFAULT_HEADERS = {\r\n  'Content-Type': 'application/json'\r\n};\r\n\r\n// API version\r\nexport const API_VERSION = 'v1'; ","import axios from 'axios';\r\nimport { API_BASE_URL } from '../../../config/api';\r\n\r\n/**\r\n * Feature Request Service\r\n * Manages feature requests including submission, voting, categorization, and analysis\r\n */\r\nclass FeatureRequestService {\r\n  /**\r\n   * Get all feature requests with filters\r\n   * \r\n   * @param {Object} filters Optional filters for status, category, sort order\r\n   * @returns {Promise<Array>} List of feature requests\r\n   */\r\n  async getFeatureRequests(filters = {}) {\r\n    try {\r\n      // For demo, this would call the API\r\n      // In a real implementation, this would make an API request with filters\r\n      \r\n      // Mock data for development\r\n      return [\r\n        {\r\n          id: 'feature_1',\r\n          title: 'Multi-language support',\r\n          description: 'Add support for French, Spanish, and German languages',\r\n          status: 'under_review',\r\n          category: 'Localization',\r\n          votes: 42,\r\n          userId: 'user_123',\r\n          userName: 'Alex Johnson',\r\n          createdAt: '2023-07-15T10:00:00Z',\r\n          updatedAt: '2023-07-18T14:30:00Z',\r\n          comments: 8,\r\n          tags: ['internationalization', 'language'],\r\n          implementationDifficulty: 'medium',\r\n          businessValue: 'high'\r\n        },\r\n        {\r\n          id: 'feature_2',\r\n          title: 'Dark mode theme',\r\n          description: 'Add a dark mode option to reduce eye strain in low-light conditions',\r\n          status: 'planned',\r\n          category: 'User Interface',\r\n          votes: 78,\r\n          userId: 'user_456',\r\n          userName: 'Sam Wilson',\r\n          createdAt: '2023-07-10T09:15:00Z',\r\n          updatedAt: '2023-07-19T11:45:00Z',\r\n          comments: 12,\r\n          tags: ['ui', 'accessibility', 'theme'],\r\n          implementationDifficulty: 'low',\r\n          businessValue: 'medium',\r\n          plannedReleaseVersion: '2.4.0'\r\n        },\r\n        {\r\n          id: 'feature_3',\r\n          title: 'Offline mode',\r\n          description: 'Allow users to access core functionality when offline and sync when connection is restored',\r\n          status: 'in_progress',\r\n          category: 'Functionality',\r\n          votes: 56,\r\n          userId: 'user_789',\r\n          userName: 'Jamie Taylor',\r\n          createdAt: '2023-07-05T14:20:00Z',\r\n          updatedAt: '2023-07-20T09:30:00Z',\r\n          comments: 5,\r\n          tags: ['offline', 'sync', 'connectivity'],\r\n          implementationDifficulty: 'high',\r\n          businessValue: 'high',\r\n          assignedDeveloper: 'Dev Team Alpha',\r\n          estimatedCompletion: '2023-08-15'\r\n        },\r\n        {\r\n          id: 'feature_4',\r\n          title: 'Export data to CSV',\r\n          description: 'Allow users to export their data in CSV format for analysis in spreadsheet tools',\r\n          status: 'implemented',\r\n          category: 'Data Management',\r\n          votes: 35,\r\n          userId: 'user_101',\r\n          userName: 'Morgan Lee',\r\n          createdAt: '2023-06-28T11:10:00Z',\r\n          updatedAt: '2023-07-10T16:20:00Z',\r\n          comments: 3,\r\n          tags: ['export', 'data', 'csv'],\r\n          implementationDifficulty: 'low',\r\n          businessValue: 'medium',\r\n          implementedVersion: '2.3.0',\r\n          releaseDate: '2023-07-10'\r\n        },\r\n        {\r\n          id: 'feature_5',\r\n          title: 'Image annotation tools',\r\n          description: 'Add tools for annotating images with notes and markers',\r\n          status: 'new',\r\n          category: 'Content Creation',\r\n          votes: 12,\r\n          userId: 'user_202',\r\n          userName: 'Riley Garcia',\r\n          createdAt: '2023-07-19T08:45:00Z',\r\n          updatedAt: '2023-07-19T08:45:00Z',\r\n          comments: 1,\r\n          tags: ['images', 'annotation', 'content'],\r\n          implementationDifficulty: 'medium',\r\n          businessValue: 'medium'\r\n        }\r\n      ].filter(request => {\r\n        // Apply filters if provided\r\n        if (filters.status && request.status !== filters.status) return false;\r\n        if (filters.category && request.category !== filters.category) return false;\r\n        if (filters.search) {\r\n          const search = filters.search.toLowerCase();\r\n          return (\r\n            request.title.toLowerCase().includes(search) ||\r\n            request.description.toLowerCase().includes(search) ||\r\n            request.tags.some(tag => tag.toLowerCase().includes(search))\r\n          );\r\n        }\r\n        return true;\r\n      }).sort((a, b) => {\r\n        // Apply sorting\r\n        if (filters.sortBy === 'votes') return b.votes - a.votes;\r\n        if (filters.sortBy === 'recent') return new Date(b.createdAt) - new Date(a.createdAt);\r\n        if (filters.sortBy === 'updated') return new Date(b.updatedAt) - new Date(a.updatedAt);\r\n        // Default sort by votes\r\n        return b.votes - a.votes;\r\n      });\r\n    } catch (error) {\r\n      console.error('Error fetching feature requests:', error);\r\n      throw new Error('Failed to fetch feature requests');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get feature request by ID\r\n   * \r\n   * @param {string} requestId Feature request ID\r\n   * @returns {Promise<Object>} Feature request data\r\n   */\r\n  async getFeatureRequestById(requestId) {\r\n    try {\r\n      // This would be an API call in a real implementation\r\n      const mockComments = [\r\n        {\r\n          id: 'comment_1',\r\n          requestId: 'feature_1',\r\n          userId: 'user_456',\r\n          userName: 'Sam Wilson',\r\n          content: 'I would specifically like to see Japanese added as well.',\r\n          createdAt: '2023-07-16T11:30:00Z',\r\n          likes: 3\r\n        },\r\n        {\r\n          id: 'comment_2',\r\n          requestId: 'feature_1',\r\n          userId: 'user_789',\r\n          userName: 'Jamie Taylor',\r\n          content: 'This would be great for our international users.',\r\n          createdAt: '2023-07-17T09:45:00Z',\r\n          likes: 5\r\n        },\r\n        {\r\n          id: 'comment_3',\r\n          requestId: 'feature_1',\r\n          userId: 'user_202',\r\n          userName: 'Riley Garcia',\r\n          content: 'I can help with Spanish translations if needed.',\r\n          createdAt: '2023-07-18T14:20:00Z',\r\n          likes: 2\r\n        }\r\n      ];\r\n      \r\n      // Get all requests and find the one matching the ID\r\n      const requests = await this.getFeatureRequests();\r\n      const request = requests.find(r => r.id === requestId);\r\n      \r\n      if (!request) {\r\n        throw new Error('Feature request not found');\r\n      }\r\n      \r\n      // Add comments to the request\r\n      return {\r\n        ...request,\r\n        comments: mockComments.filter(c => c.requestId === requestId)\r\n      };\r\n    } catch (error) {\r\n      console.error(`Error fetching feature request ${requestId}:`, error);\r\n      throw new Error('Failed to fetch feature request');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Submit a new feature request\r\n   * \r\n   * @param {Object} requestData Feature request data\r\n   * @returns {Promise<Object>} Created feature request\r\n   */\r\n  async submitFeatureRequest(requestData) {\r\n    try {\r\n      // In a real implementation, this would make an API request\r\n      console.log('Submitting feature request:', requestData);\r\n      \r\n      // Validate required fields\r\n      if (!requestData.title) {\r\n        throw new Error('Title is required');\r\n      }\r\n      if (!requestData.description) {\r\n        throw new Error('Description is required');\r\n      }\r\n      \r\n      // Mock user data for the demo\r\n      const userData = {\r\n        userId: 'current_user_123',\r\n        userName: 'Current User'\r\n      };\r\n      \r\n      // Create new feature request\r\n      const newRequest = {\r\n        id: `feature_${Date.now()}`,\r\n        title: requestData.title,\r\n        description: requestData.description,\r\n        status: 'new',\r\n        category: requestData.category || 'General',\r\n        votes: 1, // Creator's vote\r\n        userId: userData.userId,\r\n        userName: userData.userName,\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString(),\r\n        comments: 0,\r\n        tags: requestData.tags || [],\r\n        implementationDifficulty: 'undetermined',\r\n        businessValue: 'undetermined'\r\n      };\r\n      \r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      return newRequest;\r\n    } catch (error) {\r\n      console.error('Error submitting feature request:', error);\r\n      throw new Error(`Failed to submit feature request: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Vote on a feature request\r\n   * \r\n   * @param {string} requestId Feature request ID\r\n   * @param {boolean} isUpvote True for upvote, false for remove vote\r\n   * @returns {Promise<Object>} Updated vote count\r\n   */\r\n  async voteOnFeatureRequest(requestId, isUpvote) {\r\n    try {\r\n      // In a real implementation, this would make an API request\r\n      console.log(`${isUpvote ? 'Upvoting' : 'Removing vote for'} feature request ${requestId}`);\r\n      \r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      \r\n      // Return mock updated vote count\r\n      return {\r\n        requestId,\r\n        votes: isUpvote ? 43 : 41 // Mock value based on initial count of 42\r\n      };\r\n    } catch (error) {\r\n      console.error('Error voting on feature request:', error);\r\n      throw new Error('Failed to vote on feature request');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a comment to a feature request\r\n   * \r\n   * @param {string} requestId Feature request ID\r\n   * @param {string} content Comment content\r\n   * @returns {Promise<Object>} Created comment\r\n   */\r\n  async addComment(requestId, content) {\r\n    try {\r\n      // In a real implementation, this would make an API request\r\n      console.log(`Adding comment to feature request ${requestId}:`, content);\r\n      \r\n      // Validate content\r\n      if (!content) {\r\n        throw new Error('Comment content is required');\r\n      }\r\n      \r\n      // Mock user data for the demo\r\n      const userData = {\r\n        userId: 'current_user_123',\r\n        userName: 'Current User'\r\n      };\r\n      \r\n      // Create new comment\r\n      const newComment = {\r\n        id: `comment_${Date.now()}`,\r\n        requestId,\r\n        userId: userData.userId,\r\n        userName: userData.userName,\r\n        content,\r\n        createdAt: new Date().toISOString(),\r\n        likes: 0\r\n      };\r\n      \r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 800));\r\n      \r\n      return newComment;\r\n    } catch (error) {\r\n      console.error('Error adding comment:', error);\r\n      throw new Error(`Failed to add comment: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get feature request categories\r\n   * \r\n   * @returns {Promise<Array>} List of categories\r\n   */\r\n  async getCategories() {\r\n    try {\r\n      // This would be an API call in a real implementation\r\n      return [\r\n        { id: 'general', name: 'General' },\r\n        { id: 'ui', name: 'User Interface' },\r\n        { id: 'functionality', name: 'Functionality' },\r\n        { id: 'performance', name: 'Performance' },\r\n        { id: 'accessibility', name: 'Accessibility' },\r\n        { id: 'localization', name: 'Localization' },\r\n        { id: 'integration', name: 'Integration' },\r\n        { id: 'data_management', name: 'Data Management' },\r\n        { id: 'content_creation', name: 'Content Creation' },\r\n        { id: 'security', name: 'Security' }\r\n      ];\r\n    } catch (error) {\r\n      console.error('Error fetching categories:', error);\r\n      throw new Error('Failed to fetch categories');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update feature request status (admin only)\r\n   * \r\n   * @param {string} requestId Feature request ID\r\n   * @param {string} status New status\r\n   * @param {Object} statusData Additional status data\r\n   * @returns {Promise<Object>} Updated feature request\r\n   */\r\n  async updateFeatureRequestStatus(requestId, status, statusData = {}) {\r\n    try {\r\n      // In a real implementation, this would make an API request with admin auth\r\n      console.log(`Updating feature request ${requestId} status to ${status}`, statusData);\r\n      \r\n      // Validate status\r\n      const validStatuses = ['new', 'under_review', 'planned', 'in_progress', 'implemented', 'declined'];\r\n      if (!validStatuses.includes(status)) {\r\n        throw new Error('Invalid status');\r\n      }\r\n      \r\n      // Simulate API delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Return mock updated feature request\r\n      return {\r\n        id: requestId,\r\n        status,\r\n        updatedAt: new Date().toISOString(),\r\n        ...statusData\r\n      };\r\n    } catch (error) {\r\n      console.error('Error updating feature request status:', error);\r\n      throw new Error('Failed to update feature request status');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get feature request analytics (admin only)\r\n   * \r\n   * @returns {Promise<Object>} Analytics data\r\n   */\r\n  async getAnalytics() {\r\n    try {\r\n      // This would be an API call in a real implementation\r\n      return {\r\n        totalRequests: 28,\r\n        requestsByStatus: {\r\n          new: 8,\r\n          under_review: 5,\r\n          planned: 4,\r\n          in_progress: 3,\r\n          implemented: 6,\r\n          declined: 2\r\n        },\r\n        requestsByCategory: {\r\n          'User Interface': 7,\r\n          'Functionality': 5,\r\n          'Performance': 3,\r\n          'Data Management': 4,\r\n          'Localization': 3,\r\n          'Content Creation': 2,\r\n          'General': 4\r\n        },\r\n        topVotedRequests: [\r\n          { id: 'feature_2', title: 'Dark mode theme', votes: 78 },\r\n          { id: 'feature_6', title: 'Mobile app version', votes: 67 },\r\n          { id: 'feature_3', title: 'Offline mode', votes: 56 },\r\n          { id: 'feature_1', title: 'Multi-language support', votes: 42 },\r\n          { id: 'feature_4', title: 'Export data to CSV', votes: 35 }\r\n        ],\r\n        implementationTimeline: [\r\n          { month: 'July', count: 2 },\r\n          { month: 'August', count: 3 },\r\n          { month: 'September', planned: 4 }\r\n        ]\r\n      };\r\n    } catch (error) {\r\n      console.error('Error fetching analytics:', error);\r\n      throw new Error('Failed to fetch analytics');\r\n    }\r\n  }\r\n}\r\n\r\n// Create and export a singleton instance\r\nconst featureRequestService = new FeatureRequestService();\r\nexport default featureRequestService; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  TextField,\r\n  MenuItem,\r\n  IconButton,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Divider,\r\n  Chip,\r\n  Avatar,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Tabs,\r\n  Tab,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  Tooltip,\r\n  CircularProgress,\r\n  Badge,\r\n  Alert\r\n} from '@mui/material';\r\nimport {\r\n  AddCircleOutline as AddIcon,\r\n  ThumbUp as ThumbUpIcon,\r\n  Comment as CommentIcon,\r\n  MoreVert as MoreVertIcon,\r\n  CheckCircleOutline as ImplementedIcon,\r\n  Schedule as PlannedIcon,\r\n  Close as RejectedIcon,\r\n  KeyboardArrowUp as ArrowUpIcon,\r\n  KeyboardArrowDown as ArrowDownIcon,\r\n  Label as LabelIcon,\r\n  FilterList as FilterIcon\r\n} from '@mui/icons-material';\r\n\r\n/**\r\n * Feature Request Board component\r\n * Allows beta users to submit, vote on, and track feature requests\r\n * \r\n * @param {Object} props Component props\r\n * @param {Object} props.featureService Service for managing feature requests\r\n */\r\nconst FeatureRequestBoard = ({ featureService }) => {\r\n  // Available categories\r\n  const CATEGORIES = [\r\n    'UI/UX', 'Mobile App', 'Performance', 'Navigation',\r\n    'Tours', 'Maps', 'Integrations', 'Accessibility',\r\n    'Offline Mode', 'Accounts', 'Social Features', 'Other'\r\n  ];\r\n  \r\n  // Feature statuses\r\n  const STATUSES = {\r\n    REQUESTED: 'requested',\r\n    UNDER_REVIEW: 'under_review',\r\n    PLANNED: 'planned',\r\n    IN_PROGRESS: 'in_progress',\r\n    IMPLEMENTED: 'implemented',\r\n    REJECTED: 'rejected'\r\n  };\r\n  \r\n  // State\r\n  const [features, setFeatures] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [showAddDialog, setShowAddDialog] = useState(false);\r\n  const [sortBy, setSortBy] = useState('votes');\r\n  const [filters, setFilters] = useState({\r\n    category: 'all',\r\n    status: 'all'\r\n  });\r\n  \r\n  // New feature request state\r\n  const [newFeature, setNewFeature] = useState({\r\n    title: '',\r\n    description: '',\r\n    category: '',\r\n    tags: []\r\n  });\r\n  \r\n  // Form errors\r\n  const [formErrors, setFormErrors] = useState({});\r\n  \r\n  // Load features on component mount\r\n  useEffect(() => {\r\n    loadFeatures();\r\n  }, []);\r\n  \r\n  // Load feature requests\r\n  const loadFeatures = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // In a real implementation, this would call the service\r\n      // const data = await featureService.getFeatures();\r\n      \r\n      // Mock data for demo\r\n      const mockFeatures = [\r\n        {\r\n          id: 'feat-1',\r\n          title: 'Add dark mode support',\r\n          description: 'Implement a dark mode theme option to reduce eye strain during nighttime use.',\r\n          category: 'UI/UX',\r\n          status: STATUSES.PLANNED,\r\n          votes: 36,\r\n          comments: 12,\r\n          userVoted: true,\r\n          tags: ['Dark Mode', 'Usability'],\r\n          createdBy: {\r\n            id: 'user-1',\r\n            name: 'Alex Johnson',\r\n            avatar: null\r\n          },\r\n          createdAt: '2023-03-15T08:22:17Z',\r\n          updatedAt: '2023-03-22T16:33:41Z'\r\n        },\r\n        {\r\n          id: 'feat-2',\r\n          title: 'Offline maps for saved routes',\r\n          description: 'Allow users to download maps for their saved routes to use when no internet connection is available.',\r\n          category: 'Offline Mode',\r\n          status: STATUSES.IN_PROGRESS,\r\n          votes: 58,\r\n          comments: 23,\r\n          userVoted: false,\r\n          tags: ['Offline', 'Maps'],\r\n          createdBy: {\r\n            id: 'user-2',\r\n            name: 'Maria Garcia',\r\n            avatar: 'https://i.pravatar.cc/150?u=user-2'\r\n          },\r\n          createdAt: '2023-03-10T11:42:35Z',\r\n          updatedAt: '2023-03-25T09:17:22Z'\r\n        },\r\n        {\r\n          id: 'feat-3',\r\n          title: 'Export routes to GPX/KML formats',\r\n          description: 'Add the ability to export created routes in standard GPX and KML formats for use in other applications.',\r\n          category: 'Integrations',\r\n          status: STATUSES.REQUESTED,\r\n          votes: 24,\r\n          comments: 8,\r\n          userVoted: true,\r\n          tags: ['Export', 'Integration'],\r\n          createdBy: {\r\n            id: 'user-3',\r\n            name: 'David Wong',\r\n            avatar: 'https://i.pravatar.cc/150?u=user-3'\r\n          },\r\n          createdAt: '2023-03-20T14:52:09Z',\r\n          updatedAt: '2023-03-20T14:52:09Z'\r\n        },\r\n        {\r\n          id: 'feat-4',\r\n          title: 'Improve route optimization algorithm',\r\n          description: 'Enhance the current route optimization to consider factors like traffic patterns, opening hours, and weather.',\r\n          category: 'Performance',\r\n          status: STATUSES.UNDER_REVIEW,\r\n          votes: 42,\r\n          comments: 16,\r\n          userVoted: false,\r\n          tags: ['Algorithm', 'Optimization'],\r\n          createdBy: {\r\n            id: 'user-4',\r\n            name: 'Samantha Lee',\r\n            avatar: 'https://i.pravatar.cc/150?u=user-4'\r\n          },\r\n          createdAt: '2023-03-18T09:12:47Z',\r\n          updatedAt: '2023-03-24T11:32:18Z'\r\n        },\r\n        {\r\n          id: 'feat-5',\r\n          title: 'Social sharing of created routes',\r\n          description: 'Allow users to share their created routes on social media platforms directly from the app.',\r\n          category: 'Social Features',\r\n          status: STATUSES.IMPLEMENTED,\r\n          votes: 31,\r\n          comments: 7,\r\n          userVoted: true,\r\n          tags: ['Social', 'Sharing'],\r\n          createdBy: {\r\n            id: 'user-5',\r\n            name: 'James Wilson',\r\n            avatar: null\r\n          },\r\n          createdAt: '2023-03-05T16:41:23Z',\r\n          updatedAt: '2023-03-27T13:45:56Z'\r\n        }\r\n      ];\r\n      \r\n      setFeatures(mockFeatures);\r\n    } catch (err) {\r\n      console.error('Error loading features:', err);\r\n      setError('Failed to load feature requests. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Handle tab change\r\n  const handleTabChange = (event, newValue) => {\r\n    setActiveTab(newValue);\r\n  };\r\n  \r\n  // Handle opening add dialog\r\n  const handleOpenAddDialog = () => {\r\n    setNewFeature({\r\n      title: '',\r\n      description: '',\r\n      category: '',\r\n      tags: []\r\n    });\r\n    setFormErrors({});\r\n    setShowAddDialog(true);\r\n  };\r\n  \r\n  // Handle closing add dialog\r\n  const handleCloseAddDialog = () => {\r\n    setShowAddDialog(false);\r\n  };\r\n  \r\n  // Handle new feature input change\r\n  const handleFeatureInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewFeature(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    \r\n    // Clear error when field changes\r\n    if (formErrors[name]) {\r\n      setFormErrors(prev => ({\r\n        ...prev,\r\n        [name]: null\r\n      }));\r\n    }\r\n  };\r\n  \r\n  // Handle tag input (comma separated)\r\n  const handleTagInput = (e) => {\r\n    const value = e.target.value;\r\n    if (value.endsWith(',')) {\r\n      const tag = value.slice(0, -1).trim();\r\n      if (tag && !newFeature.tags.includes(tag)) {\r\n        setNewFeature(prev => ({\r\n          ...prev,\r\n          tags: [...prev.tags, tag]\r\n        }));\r\n      }\r\n      e.target.value = '';\r\n    }\r\n  };\r\n  \r\n  // Remove a tag\r\n  const handleRemoveTag = (tag) => {\r\n    setNewFeature(prev => ({\r\n      ...prev,\r\n      tags: prev.tags.filter(t => t !== tag)\r\n    }));\r\n  };\r\n  \r\n  // Validate form\r\n  const validateForm = () => {\r\n    const errors = {};\r\n    \r\n    if (!newFeature.title.trim()) {\r\n      errors.title = 'Title is required';\r\n    }\r\n    \r\n    if (!newFeature.description.trim()) {\r\n      errors.description = 'Description is required';\r\n    }\r\n    \r\n    if (!newFeature.category) {\r\n      errors.category = 'Category is required';\r\n    }\r\n    \r\n    setFormErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n  \r\n  // Submit new feature request\r\n  const handleSubmitFeature = async () => {\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setLoading(true);\r\n      \r\n      // In a real implementation, this would call the service\r\n      // const result = await featureService.createFeature(newFeature);\r\n      \r\n      // Mock implementation\r\n      const mockNewFeature = {\r\n        id: `feat-${Date.now()}`,\r\n        ...newFeature,\r\n        status: STATUSES.REQUESTED,\r\n        votes: 1,\r\n        comments: 0,\r\n        userVoted: true,\r\n        createdBy: {\r\n          id: 'current-user',\r\n          name: 'Current User',\r\n          avatar: null\r\n        },\r\n        createdAt: new Date().toISOString(),\r\n        updatedAt: new Date().toISOString()\r\n      };\r\n      \r\n      setFeatures(prev => [mockNewFeature, ...prev]);\r\n      setShowAddDialog(false);\r\n    } catch (err) {\r\n      console.error('Error creating feature request:', err);\r\n      setError('Failed to create feature request. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Vote for a feature\r\n  const handleVote = async (featureId) => {\r\n    try {\r\n      // In a real implementation, this would call the service\r\n      // await featureService.voteFeature(featureId);\r\n      \r\n      // Update local state\r\n      setFeatures(prev => \r\n        prev.map(feature => {\r\n          if (feature.id === featureId) {\r\n            return {\r\n              ...feature,\r\n              votes: feature.userVoted ? feature.votes - 1 : feature.votes + 1,\r\n              userVoted: !feature.userVoted\r\n            };\r\n          }\r\n          return feature;\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.error('Error voting for feature:', err);\r\n      // Show error notification\r\n    }\r\n  };\r\n  \r\n  // Handle sort change\r\n  const handleSortChange = (event) => {\r\n    setSortBy(event.target.value);\r\n  };\r\n  \r\n  // Handle filter change\r\n  const handleFilterChange = (type, value) => {\r\n    setFilters(prev => ({\r\n      ...prev,\r\n      [type]: value\r\n    }));\r\n  };\r\n  \r\n  // Format date\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(undefined, {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n  \r\n  // Get status icon\r\n  const getStatusIcon = (status) => {\r\n    switch (status) {\r\n      case STATUSES.IMPLEMENTED:\r\n        return <ImplementedIcon color=\"success\" />;\r\n      case STATUSES.PLANNED:\r\n      case STATUSES.IN_PROGRESS:\r\n        return <PlannedIcon color=\"primary\" />;\r\n      case STATUSES.REJECTED:\r\n        return <RejectedIcon color=\"error\" />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n  \r\n  // Get status label\r\n  const getStatusLabel = (status) => {\r\n    switch (status) {\r\n      case STATUSES.REQUESTED:\r\n        return 'Requested';\r\n      case STATUSES.UNDER_REVIEW:\r\n        return 'Under Review';\r\n      case STATUSES.PLANNED:\r\n        return 'Planned';\r\n      case STATUSES.IN_PROGRESS:\r\n        return 'In Progress';\r\n      case STATUSES.IMPLEMENTED:\r\n        return 'Implemented';\r\n      case STATUSES.REJECTED:\r\n        return 'Rejected';\r\n      default:\r\n        return status;\r\n    }\r\n  };\r\n  \r\n  // Get status color\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case STATUSES.REQUESTED:\r\n        return 'default';\r\n      case STATUSES.UNDER_REVIEW:\r\n        return 'warning';\r\n      case STATUSES.PLANNED:\r\n        return 'info';\r\n      case STATUSES.IN_PROGRESS:\r\n        return 'primary';\r\n      case STATUSES.IMPLEMENTED:\r\n        return 'success';\r\n      case STATUSES.REJECTED:\r\n        return 'error';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n  \r\n  // Filter features\r\n  const filteredFeatures = features.filter(feature => {\r\n    if (filters.category !== 'all' && feature.category !== filters.category) {\r\n      return false;\r\n    }\r\n    \r\n    if (filters.status !== 'all' && feature.status !== filters.status) {\r\n      return false;\r\n    }\r\n    \r\n    // Filter by tab\r\n    if (activeTab === 1 && !feature.userVoted) {\r\n      return false;\r\n    }\r\n    \r\n    if (activeTab === 2 && feature.status !== STATUSES.IMPLEMENTED) {\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  });\r\n  \r\n  // Sort features\r\n  const sortedFeatures = [...filteredFeatures].sort((a, b) => {\r\n    switch (sortBy) {\r\n      case 'votes':\r\n        return b.votes - a.votes;\r\n      case 'newest':\r\n        return new Date(b.createdAt) - new Date(a.createdAt);\r\n      case 'oldest':\r\n        return new Date(a.createdAt) - new Date(b.createdAt);\r\n      default:\r\n        return b.votes - a.votes;\r\n    }\r\n  });\r\n  \r\n  return (\r\n    <Box>\r\n      {/* Add Feature Dialog */}\r\n      <Dialog\r\n        open={showAddDialog}\r\n        onClose={handleCloseAddDialog}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Submit Feature Request</DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={3} sx={{ mt: 0 }}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Title\"\r\n                name=\"title\"\r\n                value={newFeature.title}\r\n                onChange={handleFeatureInputChange}\r\n                error={!!formErrors.title}\r\n                helperText={formErrors.title}\r\n                placeholder=\"Enter a concise title for your feature request\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl fullWidth error={!!formErrors.category}>\r\n                <InputLabel id=\"category-label\">Category</InputLabel>\r\n                <Select\r\n                  labelId=\"category-label\"\r\n                  name=\"category\"\r\n                  value={newFeature.category}\r\n                  onChange={handleFeatureInputChange}\r\n                  label=\"Category\"\r\n                  required\r\n                >\r\n                  {CATEGORIES.map(category => (\r\n                    <MenuItem key={category} value={category}>\r\n                      {category}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n                {formErrors.category && (\r\n                  <Typography variant=\"caption\" color=\"error\">\r\n                    {formErrors.category}\r\n                  </Typography>\r\n                )}\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Tags\"\r\n                placeholder=\"Type tag and press comma to add\"\r\n                onKeyUp={handleTagInput}\r\n                helperText=\"Enter tags to help categorize your request\"\r\n              />\r\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>\r\n                {newFeature.tags.map(tag => (\r\n                  <Chip\r\n                    key={tag}\r\n                    label={tag}\r\n                    onDelete={() => handleRemoveTag(tag)}\r\n                    size=\"small\"\r\n                  />\r\n                ))}\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Description\"\r\n                name=\"description\"\r\n                value={newFeature.description}\r\n                onChange={handleFeatureInputChange}\r\n                error={!!formErrors.description}\r\n                helperText={formErrors.description || 'Provide a detailed description of the feature you would like to see'}\r\n                multiline\r\n                rows={4}\r\n                required\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseAddDialog}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={handleSubmitFeature}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? <CircularProgress size={24} /> : 'Submit Request'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {/* Feature Board Header */}\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Feature Requests\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleOpenAddDialog}\r\n        >\r\n          Submit Request\r\n        </Button>\r\n      </Box>\r\n      \r\n      {/* Tabs */}\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\r\n        <Tabs \r\n          value={activeTab} \r\n          onChange={handleTabChange}\r\n          aria-label=\"feature request tabs\"\r\n        >\r\n          <Tab label=\"All Requests\" />\r\n          <Tab label=\"My Votes\" />\r\n          <Tab label=\"Implemented\" />\r\n        </Tabs>\r\n      </Box>\r\n      \r\n      {/* Filters */}\r\n      <Paper sx={{ p: 2, mb: 3 }}>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item>\r\n            <FilterIcon color=\"action\" />\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <FormControl fullWidth size=\"small\">\r\n              <InputLabel id=\"category-filter-label\">Category</InputLabel>\r\n              <Select\r\n                labelId=\"category-filter-label\"\r\n                value={filters.category}\r\n                onChange={(e) => handleFilterChange('category', e.target.value)}\r\n                label=\"Category\"\r\n              >\r\n                <MenuItem value=\"all\">All Categories</MenuItem>\r\n                {CATEGORIES.map(category => (\r\n                  <MenuItem key={category} value={category}>\r\n                    {category}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <FormControl fullWidth size=\"small\">\r\n              <InputLabel id=\"status-filter-label\">Status</InputLabel>\r\n              <Select\r\n                labelId=\"status-filter-label\"\r\n                value={filters.status}\r\n                onChange={(e) => handleFilterChange('status', e.target.value)}\r\n                label=\"Status\"\r\n              >\r\n                <MenuItem value=\"all\">All Statuses</MenuItem>\r\n                {Object.values(STATUSES).map(status => (\r\n                  <MenuItem key={status} value={status}>\r\n                    {getStatusLabel(status)}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <FormControl fullWidth size=\"small\">\r\n              <InputLabel id=\"sort-label\">Sort By</InputLabel>\r\n              <Select\r\n                labelId=\"sort-label\"\r\n                value={sortBy}\r\n                onChange={handleSortChange}\r\n                label=\"Sort By\"\r\n              >\r\n                <MenuItem value=\"votes\">Most Votes</MenuItem>\r\n                <MenuItem value=\"newest\">Newest</MenuItem>\r\n                <MenuItem value=\"oldest\">Oldest</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Grid>\r\n          <Grid item xs={12} sm={3}>\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              {filteredFeatures.length} {filteredFeatures.length === 1 ? 'request' : 'requests'} found\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      \r\n      {/* Error Alert */}\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      \r\n      {/* Feature List */}\r\n      {loading ? (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', py: 4 }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      ) : filteredFeatures.length === 0 ? (\r\n        <Paper sx={{ p: 4, textAlign: 'center' }}>\r\n          <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\r\n            No feature requests found\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\r\n            {activeTab === 0 ? \r\n              'No feature requests match your current filters.' :\r\n              activeTab === 1 ? \r\n                'You haven\\'t voted for any feature requests yet.' :\r\n                'No implemented features match your current filters.'\r\n            }\r\n          </Typography>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleOpenAddDialog}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Submit a New Request\r\n          </Button>\r\n        </Paper>\r\n      ) : (\r\n        <Grid container spacing={3}>\r\n          {sortedFeatures.map(feature => (\r\n            <Grid item xs={12} key={feature.id}>\r\n              <Card \r\n                variant=\"outlined\"\r\n                sx={{\r\n                  position: 'relative',\r\n                  transition: 'transform 0.2s, box-shadow 0.2s',\r\n                  '&:hover': {\r\n                    boxShadow: 3,\r\n                    transform: 'translateY(-2px)'\r\n                  }\r\n                }}\r\n              >\r\n                {/* Status indicator */}\r\n                {getStatusIcon(feature.status) && (\r\n                  <Box\r\n                    sx={{\r\n                      position: 'absolute',\r\n                      top: 12,\r\n                      right: 12,\r\n                      zIndex: 1\r\n                    }}\r\n                  >\r\n                    <Tooltip title={getStatusLabel(feature.status)}>\r\n                      {getStatusIcon(feature.status)}\r\n                    </Tooltip>\r\n                  </Box>\r\n                )}\r\n                \r\n                <Grid container>\r\n                  {/* Vote count column */}\r\n                  <Grid item xs={1} sm={1}>\r\n                    <Box \r\n                      sx={{ \r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        p: 2,\r\n                        height: '100%',\r\n                        borderRight: 1,\r\n                        borderColor: 'divider'\r\n                      }}\r\n                    >\r\n                      <IconButton \r\n                        onClick={() => handleVote(feature.id)}\r\n                        color={feature.userVoted ? 'primary' : 'default'}\r\n                        size=\"small\"\r\n                      >\r\n                        <ArrowUpIcon />\r\n                      </IconButton>\r\n                      <Typography \r\n                        variant=\"h6\" \r\n                        color={feature.userVoted ? 'primary' : 'textPrimary'}\r\n                        sx={{ fontWeight: feature.userVoted ? 'bold' : 'normal' }}\r\n                      >\r\n                        {feature.votes}\r\n                      </Typography>\r\n                      <Typography variant=\"caption\" color=\"textSecondary\">\r\n                        votes\r\n                      </Typography>\r\n                    </Box>\r\n                  </Grid>\r\n                  \r\n                  {/* Feature content column */}\r\n                  <Grid item xs={11} sm={11}>\r\n                    <CardContent>\r\n                      <Box sx={{ mb: 2 }}>\r\n                        <Typography variant=\"h6\" component=\"h3\" gutterBottom>\r\n                          {feature.title}\r\n                        </Typography>\r\n                        <Box sx={{ display: 'flex', mb: 1 }}>\r\n                          <Chip \r\n                            label={feature.category} \r\n                            size=\"small\"\r\n                            color=\"primary\"\r\n                            variant=\"outlined\"\r\n                            sx={{ mr: 1 }}\r\n                          />\r\n                          <Chip \r\n                            label={getStatusLabel(feature.status)} \r\n                            size=\"small\"\r\n                            color={getStatusColor(feature.status)}\r\n                            variant=\"outlined\"\r\n                          />\r\n                        </Box>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\r\n                          {feature.description}\r\n                        </Typography>\r\n                        \r\n                        {/* Tags */}\r\n                        {feature.tags.length > 0 && (\r\n                          <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\r\n                            {feature.tags.map(tag => (\r\n                              <Chip\r\n                                key={tag}\r\n                                label={tag}\r\n                                size=\"small\"\r\n                                variant=\"outlined\"\r\n                                icon={<LabelIcon />}\r\n                              />\r\n                            ))}\r\n                          </Box>\r\n                        )}\r\n                      </Box>\r\n                      \r\n                      <Divider sx={{ mb: 2 }} />\r\n                      \r\n                      {/* Feature metadata */}\r\n                      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                          <Avatar \r\n                            src={feature.createdBy.avatar}\r\n                            alt={feature.createdBy.name}\r\n                            sx={{ width: 24, height: 24, mr: 1 }}\r\n                          />\r\n                          <Typography variant=\"body2\" color=\"textSecondary\">\r\n                            {feature.createdBy.name}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mx: 1 }}>\r\n                            •\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" color=\"textSecondary\">\r\n                            {formatDate(feature.createdAt)}\r\n                          </Typography>\r\n                        </Box>\r\n                        \r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                          <Tooltip title=\"Comments\">\r\n                            <Box sx={{ display: 'flex', alignItems: 'center', mr: 1 }}>\r\n                              <CommentIcon fontSize=\"small\" color=\"action\" sx={{ mr: 0.5 }} />\r\n                              <Typography variant=\"body2\" color=\"textSecondary\">\r\n                                {feature.comments}\r\n                              </Typography>\r\n                            </Box>\r\n                          </Tooltip>\r\n                        </Box>\r\n                      </Box>\r\n                    </CardContent>\r\n                  </Grid>\r\n                </Grid>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FeatureRequestBoard; ","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  TextField,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Chip,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText,\r\n  Tabs,\r\n  Tab,\r\n  InputAdornment,\r\n  CircularProgress,\r\n  Alert\r\n} from '@mui/material';\r\nimport {\r\n  Search as SearchIcon,\r\n  Add as AddIcon,\r\n  ThumbUp as ThumbUpIcon,\r\n  Comment as CommentIcon,\r\n  MoreVert as MoreVertIcon,\r\n  Flag as FlagIcon,\r\n  BookmarkBorder as BookmarkIcon,\r\n  Bookmark as BookmarkedIcon,\r\n  Edit as EditIcon,\r\n  Delete as DeleteIcon,\r\n  Sort as SortIcon,\r\n  FilterList as FilterIcon\r\n} from '@mui/icons-material';\r\n\r\n/**\r\n * Beta Community Forum component\r\n * Provides a discussion platform for beta users\r\n */\r\nconst BetaCommunityForum = () => {\r\n  // State\r\n  const [discussions, setDiscussions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [sortOption, setSortOption] = useState('newest');\r\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\r\n  const [selectedDiscussion, setSelectedDiscussion] = useState(null);\r\n  const [showCreateDialog, setShowCreateDialog] = useState(false);\r\n  const [newDiscussion, setNewDiscussion] = useState({\r\n    title: '',\r\n    content: '',\r\n    tags: []\r\n  });\r\n  const [formErrors, setFormErrors] = useState({});\r\n  \r\n  // Load discussions on component mount\r\n  useEffect(() => {\r\n    loadDiscussions();\r\n  }, []);\r\n  \r\n  // Load discussions from API (mock implementation)\r\n  const loadDiscussions = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Mock data for demo\r\n      setTimeout(() => {\r\n        const mockDiscussions = [\r\n          {\r\n            id: 'disc-1',\r\n            title: 'How to use the map feature effectively?',\r\n            content: 'I\\'ve been trying to plan a route with multiple stops, but I\\'m having trouble optimizing the order. Does anyone have tips on how to use the map feature more effectively?',\r\n            author: {\r\n              id: 'user-1',\r\n              name: 'Alex Johnson',\r\n              avatar: null\r\n            },\r\n            createdAt: '2023-03-18T09:22:17Z',\r\n            updatedAt: '2023-03-18T09:22:17Z',\r\n            upvotes: 12,\r\n            commentCount: 5,\r\n            tags: ['Maps', 'Routes', 'Tips'],\r\n            pinned: false,\r\n            bookmarked: false,\r\n            category: 'Help & Support'\r\n          },\r\n          {\r\n            id: 'disc-2',\r\n            title: 'Offline mode suggestion',\r\n            content: 'Has anyone found a good workaround for using the app in areas with poor connectivity? I\\'m going hiking next month and I\\'d like to be able to access my saved routes.',\r\n            author: {\r\n              id: 'user-2',\r\n              name: 'Maria Garcia',\r\n              avatar: 'https://i.pravatar.cc/150?u=user-2'\r\n            },\r\n            createdAt: '2023-03-15T14:33:41Z',\r\n            updatedAt: '2023-03-16T10:15:22Z',\r\n            upvotes: 24,\r\n            commentCount: 8,\r\n            tags: ['Offline', 'Feature Request'],\r\n            pinned: false,\r\n            bookmarked: true,\r\n            category: 'Feature Discussions'\r\n          },\r\n          {\r\n            id: 'disc-3',\r\n            title: 'Introducing myself to the beta community',\r\n            content: 'Hello everyone! I\\'m new to the beta program and wanted to introduce myself. I\\'m a travel enthusiast from Canada and I\\'m excited to help test and improve TourGuideAI!',\r\n            author: {\r\n              id: 'user-3',\r\n              name: 'David Wong',\r\n              avatar: 'https://i.pravatar.cc/150?u=user-3'\r\n            },\r\n            createdAt: '2023-03-20T11:42:09Z',\r\n            updatedAt: '2023-03-20T11:42:09Z',\r\n            upvotes: 18,\r\n            commentCount: 12,\r\n            tags: ['Introduction', 'Community'],\r\n            pinned: true,\r\n            bookmarked: false,\r\n            category: 'General'\r\n          },\r\n          {\r\n            id: 'disc-4',\r\n            title: 'Integration with weather services',\r\n            content: 'I think it would be great if we could see weather forecasts for our planned routes directly in the app. What do others think about this idea?',\r\n            author: {\r\n              id: 'user-4',\r\n              name: 'Samantha Lee',\r\n              avatar: 'https://i.pravatar.cc/150?u=user-4'\r\n            },\r\n            createdAt: '2023-03-17T16:23:47Z',\r\n            updatedAt: '2023-03-19T08:45:11Z',\r\n            upvotes: 36,\r\n            commentCount: 15,\r\n            tags: ['Weather', 'Feature Request', 'Integration'],\r\n            pinned: false,\r\n            bookmarked: false,\r\n            category: 'Feature Discussions'\r\n          },\r\n          {\r\n            id: 'disc-5',\r\n            title: 'Beta program feedback process',\r\n            content: 'The beta program has been running for a few weeks now. I\\'m curious how our feedback is being used to improve the app. Can any moderators provide insights?',\r\n            author: {\r\n              id: 'user-5',\r\n              name: 'James Wilson',\r\n              avatar: null\r\n            },\r\n            createdAt: '2023-03-12T10:11:23Z',\r\n            updatedAt: '2023-03-18T13:27:56Z',\r\n            upvotes: 29,\r\n            commentCount: 6,\r\n            tags: ['Feedback', 'Process', 'Beta Program'],\r\n            pinned: false,\r\n            bookmarked: true,\r\n            category: 'General'\r\n          }\r\n        ];\r\n        \r\n        setDiscussions(mockDiscussions);\r\n        setLoading(false);\r\n      }, 1000); // Simulate network delay\r\n      \r\n    } catch (err) {\r\n      console.error('Error loading discussions:', err);\r\n      setError('Failed to load discussions. Please try again.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Format date\r\n  const formatDate = (dateString) => {\r\n    const options = { year: 'numeric', month: 'short', day: 'numeric' };\r\n    return new Date(dateString).toLocaleDateString(undefined, options);\r\n  };\r\n  \r\n  // Handle tab change\r\n  const handleTabChange = (event, newValue) => {\r\n    setActiveTab(newValue);\r\n  };\r\n  \r\n  // Handle search input\r\n  const handleSearchChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n  \r\n  // Handle menu open\r\n  const handleMenuOpen = (event, discussion) => {\r\n    setMenuAnchorEl(event.currentTarget);\r\n    setSelectedDiscussion(discussion);\r\n  };\r\n  \r\n  // Handle menu close\r\n  const handleMenuClose = () => {\r\n    setMenuAnchorEl(null);\r\n    setSelectedDiscussion(null);\r\n  };\r\n  \r\n  // Handle bookmark\r\n  const handleBookmark = (discussionId) => {\r\n    setDiscussions(prev => \r\n      prev.map(disc => {\r\n        if (disc.id === discussionId) {\r\n          return { ...disc, bookmarked: !disc.bookmarked };\r\n        }\r\n        return disc;\r\n      })\r\n    );\r\n    handleMenuClose();\r\n  };\r\n  \r\n  // Handle upvote\r\n  const handleUpvote = (discussionId) => {\r\n    setDiscussions(prev => \r\n      prev.map(disc => {\r\n        if (disc.id === discussionId) {\r\n          // In a real app, we would track if the user has already upvoted\r\n          // For this mock, we'll just increment the count\r\n          return { \r\n            ...disc, \r\n            upvotes: disc.upvotes + 1 \r\n          };\r\n        }\r\n        return disc;\r\n      })\r\n    );\r\n  };\r\n  \r\n  // Handle sort change\r\n  const handleSortChange = (option) => {\r\n    setSortOption(option);\r\n  };\r\n  \r\n  // Handle create discussion dialog open\r\n  const handleCreateDialogOpen = () => {\r\n    setNewDiscussion({\r\n      title: '',\r\n      content: '',\r\n      tags: []\r\n    });\r\n    setFormErrors({});\r\n    setShowCreateDialog(true);\r\n  };\r\n  \r\n  // Handle create discussion dialog close\r\n  const handleCreateDialogClose = () => {\r\n    setShowCreateDialog(false);\r\n  };\r\n  \r\n  // Handle new discussion input change\r\n  const handleNewDiscussionChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewDiscussion(prev => ({\r\n      ...prev,\r\n      [name]: value\r\n    }));\r\n    \r\n    // Clear error when field changes\r\n    if (formErrors[name]) {\r\n      setFormErrors(prev => ({\r\n        ...prev,\r\n        [name]: null\r\n      }));\r\n    }\r\n  };\r\n  \r\n  // Handle tag input (comma separated)\r\n  const handleTagInput = (e) => {\r\n    const value = e.target.value;\r\n    if (value.endsWith(',')) {\r\n      const tag = value.slice(0, -1).trim();\r\n      if (tag && !newDiscussion.tags.includes(tag)) {\r\n        setNewDiscussion(prev => ({\r\n          ...prev,\r\n          tags: [...prev.tags, tag]\r\n        }));\r\n      }\r\n      e.target.value = '';\r\n    }\r\n  };\r\n  \r\n  // Remove a tag\r\n  const handleRemoveTag = (tag) => {\r\n    setNewDiscussion(prev => ({\r\n      ...prev,\r\n      tags: prev.tags.filter(t => t !== tag)\r\n    }));\r\n  };\r\n  \r\n  // Validate form\r\n  const validateForm = () => {\r\n    const errors = {};\r\n    \r\n    if (!newDiscussion.title.trim()) {\r\n      errors.title = 'Title is required';\r\n    }\r\n    \r\n    if (!newDiscussion.content.trim()) {\r\n      errors.content = 'Content is required';\r\n    } else if (newDiscussion.content.length < 20) {\r\n      errors.content = 'Content must be at least 20 characters';\r\n    }\r\n    \r\n    setFormErrors(errors);\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n  \r\n  // Handle create discussion\r\n  const handleCreateDiscussion = () => {\r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n    \r\n    // Create new discussion (in a real app, this would be an API call)\r\n    const newDiscussionObj = {\r\n      id: `disc-${Date.now()}`,\r\n      title: newDiscussion.title,\r\n      content: newDiscussion.content,\r\n      author: {\r\n        id: 'current-user',\r\n        name: 'Current User',\r\n        avatar: null\r\n      },\r\n      createdAt: new Date().toISOString(),\r\n      updatedAt: new Date().toISOString(),\r\n      upvotes: 0,\r\n      commentCount: 0,\r\n      tags: newDiscussion.tags,\r\n      pinned: false,\r\n      bookmarked: false,\r\n      category: 'General' // In a real app, the user would select this\r\n    };\r\n    \r\n    setDiscussions(prev => [newDiscussionObj, ...prev]);\r\n    handleCreateDialogClose();\r\n  };\r\n  \r\n  // Filter and sort discussions\r\n  const filteredDiscussions = discussions.filter(discussion => {\r\n    // Filter by search query\r\n    if (searchQuery) {\r\n      const query = searchQuery.toLowerCase();\r\n      if (\r\n        !discussion.title.toLowerCase().includes(query) &&\r\n        !discussion.content.toLowerCase().includes(query) &&\r\n        !discussion.tags.some(tag => tag.toLowerCase().includes(query))\r\n      ) {\r\n        return false;\r\n      }\r\n    }\r\n    \r\n    // Filter by tab\r\n    if (activeTab === 1 && !discussion.pinned) {\r\n      return false;\r\n    }\r\n    \r\n    if (activeTab === 2 && !discussion.bookmarked) {\r\n      return false;\r\n    }\r\n    \r\n    if (activeTab === 3 && discussion.category !== 'Feature Discussions') {\r\n      return false;\r\n    }\r\n    \r\n    if (activeTab === 4 && discussion.category !== 'Help & Support') {\r\n      return false;\r\n    }\r\n    \r\n    return true;\r\n  });\r\n  \r\n  // Sort discussions\r\n  const sortedDiscussions = [...filteredDiscussions].sort((a, b) => {\r\n    switch (sortOption) {\r\n      case 'newest':\r\n        return new Date(b.createdAt) - new Date(a.createdAt);\r\n      case 'oldest':\r\n        return new Date(a.createdAt) - new Date(b.createdAt);\r\n      case 'most_upvoted':\r\n        return b.upvotes - a.upvotes;\r\n      case 'most_commented':\r\n        return b.commentCount - a.commentCount;\r\n      default:\r\n        return new Date(b.createdAt) - new Date(a.createdAt);\r\n    }\r\n  });\r\n  \r\n  return (\r\n    <Box>\r\n      {/* Create Discussion Dialog */}\r\n      <Dialog\r\n        open={showCreateDialog}\r\n        onClose={handleCreateDialogClose}\r\n        maxWidth=\"md\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Start a New Discussion</DialogTitle>\r\n        <DialogContent>\r\n          <Grid container spacing={3} sx={{ mt: 0 }}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Title\"\r\n                name=\"title\"\r\n                value={newDiscussion.title}\r\n                onChange={handleNewDiscussionChange}\r\n                error={!!formErrors.title}\r\n                helperText={formErrors.title}\r\n                placeholder=\"Enter a clear, specific title for your discussion\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Content\"\r\n                name=\"content\"\r\n                value={newDiscussion.content}\r\n                onChange={handleNewDiscussionChange}\r\n                error={!!formErrors.content}\r\n                helperText={formErrors.content}\r\n                multiline\r\n                rows={6}\r\n                placeholder=\"Share your thoughts, questions, or ideas in detail\"\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                fullWidth\r\n                label=\"Tags\"\r\n                placeholder=\"Type tag and press comma to add\"\r\n                onKeyUp={handleTagInput}\r\n                helperText=\"Add relevant tags to help others find your discussion\"\r\n              />\r\n              <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 1 }}>\r\n                {newDiscussion.tags.map(tag => (\r\n                  <Chip\r\n                    key={tag}\r\n                    label={tag}\r\n                    onDelete={() => handleRemoveTag(tag)}\r\n                    size=\"small\"\r\n                  />\r\n                ))}\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCreateDialogClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={handleCreateDiscussion}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Post Discussion\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {/* Forum Header */}\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Beta Community Forum\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<AddIcon />}\r\n          onClick={handleCreateDialogOpen}\r\n        >\r\n          Start Discussion\r\n        </Button>\r\n      </Box>\r\n      \r\n      {/* Search and Filter */}\r\n      <Paper sx={{ p: 2, mb: 3 }}>\r\n        <Grid container spacing={2} alignItems=\"center\">\r\n          <Grid item xs={12} md={6}>\r\n            <TextField\r\n              fullWidth\r\n              placeholder=\"Search discussions...\"\r\n              value={searchQuery}\r\n              onChange={handleSearchChange}\r\n              size=\"small\"\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <SearchIcon />\r\n                  </InputAdornment>\r\n                )\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: { xs: 'flex-start', md: 'flex-end' } }}>\r\n              <Typography variant=\"body2\" sx={{ mr: 1 }}>\r\n                Sort by:\r\n              </Typography>\r\n              <Button\r\n                size=\"small\"\r\n                endIcon={<SortIcon />}\r\n                onClick={(e) => setMenuAnchorEl(e.currentTarget)}\r\n              >\r\n                {sortOption === 'newest' && 'Newest'}\r\n                {sortOption === 'oldest' && 'Oldest'}\r\n                {sortOption === 'most_upvoted' && 'Most Upvoted'}\r\n                {sortOption === 'most_commented' && 'Most Commented'}\r\n              </Button>\r\n              <Menu\r\n                anchorEl={menuAnchorEl}\r\n                open={Boolean(menuAnchorEl) && !selectedDiscussion}\r\n                onClose={() => setMenuAnchorEl(null)}\r\n              >\r\n                <MenuItem onClick={() => handleSortChange('newest')}>Newest</MenuItem>\r\n                <MenuItem onClick={() => handleSortChange('oldest')}>Oldest</MenuItem>\r\n                <MenuItem onClick={() => handleSortChange('most_upvoted')}>Most Upvoted</MenuItem>\r\n                <MenuItem onClick={() => handleSortChange('most_commented')}>Most Commented</MenuItem>\r\n              </Menu>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      \r\n      {/* Tabs */}\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\r\n        <Tabs \r\n          value={activeTab} \r\n          onChange={handleTabChange}\r\n          aria-label=\"forum tabs\"\r\n        >\r\n          <Tab label=\"All Discussions\" />\r\n          <Tab label=\"Pinned\" />\r\n          <Tab label=\"Bookmarked\" />\r\n          <Tab label=\"Feature Discussions\" />\r\n          <Tab label=\"Help & Support\" />\r\n        </Tabs>\r\n      </Box>\r\n      \r\n      {/* Error Alert */}\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      \r\n      {/* Discussions List */}\r\n      {loading ? (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', py: 4 }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      ) : filteredDiscussions.length === 0 ? (\r\n        <Paper sx={{ p: 4, textAlign: 'center' }}>\r\n          <Typography variant=\"h6\" color=\"textSecondary\" gutterBottom>\r\n            No discussions found\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\r\n            {searchQuery ? \r\n              'No discussions match your search criteria.' :\r\n              activeTab === 0 ?\r\n                'There are no discussions yet.' :\r\n                activeTab === 1 ?\r\n                  'There are no pinned discussions.' :\r\n                  activeTab === 2 ?\r\n                    'You have no bookmarked discussions.' :\r\n                    activeTab === 3 ?\r\n                      'There are no feature discussions.' :\r\n                      'There are no help & support discussions.'\r\n            }\r\n          </Typography>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            startIcon={<AddIcon />}\r\n            onClick={handleCreateDialogOpen}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Start a New Discussion\r\n          </Button>\r\n        </Paper>\r\n      ) : (\r\n        <Grid container spacing={3}>\r\n          {sortedDiscussions.map(discussion => (\r\n            <Grid item xs={12} key={discussion.id}>\r\n              <Paper \r\n                variant=\"outlined\"\r\n                sx={{\r\n                  p: 2,\r\n                  position: 'relative',\r\n                  bgcolor: discussion.pinned ? 'rgba(144, 202, 249, 0.08)' : 'transparent',\r\n                  border: discussion.pinned ? '1px solid rgba(144, 202, 249, 0.5)' : '1px solid rgba(0, 0, 0, 0.12)',\r\n                  transition: 'transform 0.2s, box-shadow 0.2s',\r\n                  '&:hover': {\r\n                    boxShadow: 2,\r\n                    transform: 'translateY(-2px)'\r\n                  }\r\n                }}\r\n              >\r\n                {/* Discussion Header */}\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <Typography variant=\"subtitle1\" fontWeight=\"medium\" sx={{ mr: 1 }}>\r\n                      {discussion.title}\r\n                    </Typography>\r\n                    {discussion.pinned && (\r\n                      <Chip \r\n                        label=\"Pinned\" \r\n                        size=\"small\" \r\n                        color=\"primary\"\r\n                        variant=\"outlined\"\r\n                        sx={{ mr: 1 }}\r\n                      />\r\n                    )}\r\n                  </Box>\r\n                  <IconButton\r\n                    size=\"small\"\r\n                    onClick={(e) => handleMenuOpen(e, discussion)}\r\n                  >\r\n                    <MoreVertIcon />\r\n                  </IconButton>\r\n                </Box>\r\n                \r\n                {/* Discussion Meta */}\r\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                  <ListItemAvatar sx={{ minWidth: 36 }}>\r\n                    <Avatar \r\n                      src={discussion.author.avatar} \r\n                      alt={discussion.author.name}\r\n                      sx={{ width: 24, height: 24 }}\r\n                    />\r\n                  </ListItemAvatar>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {discussion.author.name}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mx: 1 }}>\r\n                    •\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {formatDate(discussion.createdAt)}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mx: 1 }}>\r\n                    •\r\n                  </Typography>\r\n                  <Chip \r\n                    label={discussion.category} \r\n                    size=\"small\"\r\n                    color=\"default\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                </Box>\r\n                \r\n                {/* Discussion Content */}\r\n                <Typography variant=\"body1\" paragraph>\r\n                  {discussion.content.length > 300 ?\r\n                    `${discussion.content.slice(0, 300)}...` :\r\n                    discussion.content\r\n                  }\r\n                </Typography>\r\n                \r\n                {/* Tags */}\r\n                {discussion.tags.length > 0 && (\r\n                  <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mb: 2 }}>\r\n                    {discussion.tags.map(tag => (\r\n                      <Chip\r\n                        key={tag}\r\n                        label={tag}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    ))}\r\n                  </Box>\r\n                )}\r\n                \r\n                {/* Discussion Actions */}\r\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <Button\r\n                      size=\"small\"\r\n                      startIcon={<ThumbUpIcon />}\r\n                      onClick={() => handleUpvote(discussion.id)}\r\n                    >\r\n                      {discussion.upvotes}\r\n                    </Button>\r\n                    <Button\r\n                      size=\"small\"\r\n                      startIcon={<CommentIcon />}\r\n                      sx={{ ml: 1 }}\r\n                    >\r\n                      {discussion.commentCount}\r\n                    </Button>\r\n                  </Box>\r\n                  \r\n                  <Box>\r\n                    {discussion.bookmarked ? (\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        onClick={() => handleBookmark(discussion.id)}\r\n                      >\r\n                        <BookmarkedIcon />\r\n                      </IconButton>\r\n                    ) : (\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={() => handleBookmark(discussion.id)}\r\n                      >\r\n                        <BookmarkIcon />\r\n                      </IconButton>\r\n                    )}\r\n                  </Box>\r\n                </Box>\r\n              </Paper>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      )}\r\n      \r\n      {/* Discussion Menu */}\r\n      <Menu\r\n        anchorEl={menuAnchorEl}\r\n        open={Boolean(menuAnchorEl) && Boolean(selectedDiscussion)}\r\n        onClose={handleMenuClose}\r\n      >\r\n        <MenuItem onClick={() => handleBookmark(selectedDiscussion?.id)}>\r\n          {selectedDiscussion?.bookmarked ? 'Remove Bookmark' : 'Bookmark'}\r\n        </MenuItem>\r\n        <MenuItem>View Discussion</MenuItem>\r\n        <MenuItem>Share</MenuItem>\r\n        <MenuItem>Report</MenuItem>\r\n      </Menu>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BetaCommunityForum; ","/**\r\n * Analytics Service for Beta Program\r\n * Handles data collection, processing, and reporting for beta program analytics.\r\n */\r\n\r\nimport authService from '../../services/AuthService';\r\n\r\n// Mock data for different metrics - would be replaced with real API calls in production\r\nconst mockData = {\r\n  // User activity data (daily active users)\r\n  userActivity: [\r\n    { date: '2025-03-20', count: 45 },\r\n    { date: '2025-03-21', count: 62 },\r\n    { date: '2025-03-22', count: 78 },\r\n    { date: '2025-03-23', count: 84 },\r\n    { date: '2025-03-24', count: 103 },\r\n    { date: '2025-03-25', count: 125 },\r\n    { date: '2025-03-26', count: 152 },\r\n    { date: '2025-03-27', count: 187 }\r\n  ],\r\n  \r\n  // Feature usage data\r\n  featureUsage: [\r\n    { feature: 'Route Planning', usage: 427, growth: 15 },\r\n    { feature: 'Map Navigation', usage: 316, growth: 8 },\r\n    { feature: 'Location Search', usage: 254, growth: 12 },\r\n    { feature: 'Itinerary Sharing', usage: 193, growth: 23 },\r\n    { feature: 'Travel Recommendations', usage: 176, growth: 18 }\r\n  ],\r\n  \r\n  // Feedback sentiment data\r\n  feedbackSentiment: [\r\n    { category: 'UI/UX', positive: 67, neutral: 22, negative: 11 },\r\n    { category: 'Performance', positive: 58, neutral: 31, negative: 11 },\r\n    { category: 'Features', positive: 72, neutral: 18, negative: 10 },\r\n    { category: 'Content', positive: 81, neutral: 14, negative: 5 }\r\n  ],\r\n  \r\n  // User retention data\r\n  retentionData: [\r\n    { week: 'Week 1', rate: 89 },\r\n    { week: 'Week 2', rate: 76 },\r\n    { week: 'Week 3', rate: 68 },\r\n    { week: 'Week 4', rate: 62 }\r\n  ],\r\n  \r\n  // Geographic distribution data\r\n  geographicData: [\r\n    { region: 'North America', users: 245 },\r\n    { region: 'Europe', users: 187 },\r\n    { region: 'Asia', users: 134 },\r\n    { region: 'South America', users: 76 },\r\n    { region: 'Africa', users: 53 },\r\n    { region: 'Oceania', users: 38 }\r\n  ],\r\n  \r\n  // Device distribution data\r\n  deviceData: [\r\n    { type: 'Desktop', percentage: 42 },\r\n    { type: 'Mobile', percentage: 48 },\r\n    { type: 'Tablet', percentage: 10 }\r\n  ],\r\n  \r\n  // Browser distribution data\r\n  browserData: [\r\n    { name: 'Chrome', percentage: 64 },\r\n    { name: 'Firefox', percentage: 12 },\r\n    { name: 'Safari', percentage: 16 },\r\n    { name: 'Edge', percentage: 7 },\r\n    { name: 'Other', percentage: 1 }\r\n  ],\r\n  \r\n  // Issue resolution data\r\n  issueData: [\r\n    { type: 'Bug Reports', count: 37, resolved: 31 },\r\n    { type: 'Feature Requests', count: 56, resolved: 22 },\r\n    { type: 'UI/UX Issues', count: 28, resolved: 19 },\r\n    { type: 'Performance Issues', count: 15, resolved: 12 }\r\n  ]\r\n};\r\n\r\n// Anomaly thresholds (for detecting unusual patterns)\r\nconst anomalyThresholds = {\r\n  userActivityChange: 30, // 30% change day-to-day is unusual\r\n  featureUsageSpike: 50,  // 50% increase in a day is unusual\r\n  errorRateThreshold: 5,  // 5% error rate is unusual\r\n  feedbackNegativeThreshold: 25, // 25% negative feedback is unusual\r\n};\r\n\r\nclass AnalyticsService {\r\n  /**\r\n   * Initialize Google Analytics 4 tracking\r\n   * This would integrate with the real GA4 in a production environment\r\n   */\r\n  initGA4() {\r\n    // Mock implementation - would be replaced with actual GA4 initialization\r\n    console.log('Google Analytics 4 initialized');\r\n    \r\n    // Set up custom event listeners\r\n    this.setupEventListeners();\r\n    \r\n    return true;\r\n  }\r\n  \r\n  /**\r\n   * Set up custom event listeners for tracking\r\n   */\r\n  setupEventListeners() {\r\n    // Track page views\r\n    if (typeof window !== 'undefined') {\r\n      // Page view tracking\r\n      window.addEventListener('load', () => {\r\n        this.trackEvent('page_view', {\r\n          page_title: document.title,\r\n          page_location: window.location.href,\r\n          page_path: window.location.pathname\r\n        });\r\n      });\r\n      \r\n      // Track user interactions (clicks on important elements)\r\n      document.addEventListener('click', (event) => {\r\n        const target = event.target;\r\n        \r\n        // Track button clicks\r\n        if (target.tagName === 'BUTTON' || \r\n            (target.tagName === 'A' && target.getAttribute('role') === 'button')) {\r\n          this.trackEvent('button_click', {\r\n            button_id: target.id || 'unknown',\r\n            button_text: target.innerText || 'unknown',\r\n            page_path: window.location.pathname\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Track custom events\r\n   * @param {string} eventName - Name of the event\r\n   * @param {Object} eventParams - Event parameters\r\n   */\r\n  trackEvent(eventName, eventParams = {}) {\r\n    // In a real implementation, this would call GA4 API\r\n    console.log(`Analytics event tracked: ${eventName}`, eventParams);\r\n    \r\n    // Mock GA4 event tracking\r\n    if (typeof window !== 'undefined' && window.gtag) {\r\n      window.gtag('event', eventName, eventParams);\r\n    }\r\n    \r\n    return true;\r\n  }\r\n  \r\n  /**\r\n   * Get user activity data\r\n   * @param {number} days - Number of days to retrieve (default: 7)\r\n   * @returns {Promise<Array>} - User activity data\r\n   */\r\n  async getUserActivity(days = 7) {\r\n    try {\r\n      // Verify admin access\r\n      const isAdmin = await authService.isAdmin();\r\n      if (!isAdmin) {\r\n        throw new Error('Admin access required');\r\n      }\r\n      \r\n      // In a real implementation, this would be an API call\r\n      // For now, we'll return mock data\r\n      const data = mockData.userActivity.slice(-days);\r\n      \r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching user activity data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Get feature usage data\r\n   * @param {number} limit - Number of top features to retrieve\r\n   * @returns {Promise<Array>} - Feature usage data\r\n   */\r\n  async getFeatureUsage(limit = 5) {\r\n    try {\r\n      // Verify admin access\r\n      const isAdmin = await authService.isAdmin();\r\n      if (!isAdmin) {\r\n        throw new Error('Admin access required');\r\n      }\r\n      \r\n      // In a real implementation, this would be an API call\r\n      // For now, we'll return mock data\r\n      const data = mockData.featureUsage.slice(0, limit);\r\n      \r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching feature usage data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Get feedback sentiment data\r\n   * @returns {Promise<Array>} - Feedback sentiment data\r\n   */\r\n  async getFeedbackSentiment() {\r\n    try {\r\n      // Verify admin access\r\n      const isAdmin = await authService.isAdmin();\r\n      if (!isAdmin) {\r\n        throw new Error('Admin access required');\r\n      }\r\n      \r\n      // In a real implementation, this would be an API call\r\n      // For now, we'll return mock data\r\n      return mockData.feedbackSentiment;\r\n    } catch (error) {\r\n      console.error('Error fetching feedback sentiment data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Get user retention data\r\n   * @returns {Promise<Array>} - User retention data\r\n   */\r\n  async getRetentionData() {\r\n    try {\r\n      // Verify admin access\r\n      const isAdmin = await authService.isAdmin();\r\n      if (!isAdmin) {\r\n        throw new Error('Admin access required');\r\n      }\r\n      \r\n      // In a real implementation, this would be an API call\r\n      // For now, we'll return mock data\r\n      return mockData.retentionData;\r\n    } catch (error) {\r\n      console.error('Error fetching retention data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Get geographic distribution data\r\n   * @returns {Promise<Array>} - Geographic distribution data\r\n   */\r\n  async getGeographicData() {\r\n    try {\r\n      // Verify admin access\r\n      const isAdmin = await authService.isAdmin();\r\n      if (!isAdmin) {\r\n        throw new Error('Admin access required');\r\n      }\r\n      \r\n      // In a real implementation, this would be an API call\r\n      // For now, we'll return mock data\r\n      return mockData.geographicData;\r\n    } catch (error) {\r\n      console.error('Error fetching geographic data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Get device distribution data\r\n   * @returns {Promise<Array>} - Device distribution data\r\n   */\r\n  async getDeviceData() {\r\n    try {\r\n      // Verify admin access\r\n      const isAdmin = await authService.isAdmin();\r\n      if (!isAdmin) {\r\n        throw new Error('Admin access required');\r\n      }\r\n      \r\n      // In a real implementation, this would be an API call\r\n      // For now, we'll return mock data\r\n      return mockData.deviceData;\r\n    } catch (error) {\r\n      console.error('Error fetching device data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Get browser distribution data\r\n   * @returns {Promise<Array>} - Browser distribution data\r\n   */\r\n  async getBrowserData() {\r\n    try {\r\n      // Verify admin access\r\n      const isAdmin = await authService.isAdmin();\r\n      if (!isAdmin) {\r\n        throw new Error('Admin access required');\r\n      }\r\n      \r\n      // In a real implementation, this would be an API call\r\n      // For now, we'll return mock data\r\n      return mockData.browserData;\r\n    } catch (error) {\r\n      console.error('Error fetching browser data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Get issue resolution data\r\n   * @returns {Promise<Array>} - Issue resolution data\r\n   */\r\n  async getIssueData() {\r\n    try {\r\n      // Verify admin access\r\n      const isAdmin = await authService.isAdmin();\r\n      if (!isAdmin) {\r\n        throw new Error('Admin access required');\r\n      }\r\n      \r\n      // In a real implementation, this would be an API call\r\n      // For now, we'll return mock data\r\n      return mockData.issueData;\r\n    } catch (error) {\r\n      console.error('Error fetching issue data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Check for anomalies in the data\r\n   * @returns {Promise<Array>} - List of detected anomalies\r\n   */\r\n  async detectAnomalies() {\r\n    try {\r\n      // Verify admin access\r\n      const isAdmin = await authService.isAdmin();\r\n      if (!isAdmin) {\r\n        throw new Error('Admin access required');\r\n      }\r\n      \r\n      // In a real implementation, this would use actual data and ML algorithms\r\n      // For now, we'll simulate anomaly detection\r\n      const anomalies = [];\r\n      \r\n      // Check for user activity anomalies\r\n      const userActivity = mockData.userActivity;\r\n      for (let i = 1; i < userActivity.length; i++) {\r\n        const prevCount = userActivity[i-1].count;\r\n        const currCount = userActivity[i].count;\r\n        const percentChange = ((currCount - prevCount) / prevCount) * 100;\r\n        \r\n        if (Math.abs(percentChange) > anomalyThresholds.userActivityChange) {\r\n          anomalies.push({\r\n            type: 'user_activity',\r\n            date: userActivity[i].date,\r\n            message: `Unusual ${percentChange > 0 ? 'increase' : 'decrease'} in user activity (${Math.abs(percentChange.toFixed(2))}%)`,\r\n            severity: percentChange > 0 ? 'info' : 'warning'\r\n          });\r\n        }\r\n      }\r\n      \r\n      // Check for high negative feedback\r\n      const feedbackData = mockData.feedbackSentiment;\r\n      for (const category of feedbackData) {\r\n        const total = category.positive + category.neutral + category.negative;\r\n        const negativePercentage = (category.negative / total) * 100;\r\n        \r\n        if (negativePercentage > anomalyThresholds.feedbackNegativeThreshold) {\r\n          anomalies.push({\r\n            type: 'feedback',\r\n            category: category.category,\r\n            message: `High negative feedback in ${category.category} category (${negativePercentage.toFixed(2)}%)`,\r\n            severity: 'warning'\r\n          });\r\n        }\r\n      }\r\n      \r\n      return anomalies;\r\n    } catch (error) {\r\n      console.error('Error detecting anomalies:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Export analytics data\r\n   * @param {string} format - Export format (csv, json)\r\n   * @returns {Promise<Object>} - Export data and metadata\r\n   */\r\n  async exportData(format = 'json') {\r\n    try {\r\n      // Verify admin access\r\n      const isAdmin = await authService.isAdmin();\r\n      if (!isAdmin) {\r\n        throw new Error('Admin access required');\r\n      }\r\n      \r\n      // Collect all data\r\n      const allData = {\r\n        userActivity: mockData.userActivity,\r\n        featureUsage: mockData.featureUsage,\r\n        feedbackSentiment: mockData.feedbackSentiment,\r\n        retentionData: mockData.retentionData,\r\n        geographicData: mockData.geographicData,\r\n        deviceData: mockData.deviceData,\r\n        browserData: mockData.browserData,\r\n        issueData: mockData.issueData,\r\n        exportDate: new Date().toISOString(),\r\n        exportFormat: format\r\n      };\r\n      \r\n      if (format === 'csv') {\r\n        // In a real implementation, this would convert data to CSV\r\n        return {\r\n          data: 'CSV data would be generated here',\r\n          filename: `beta-analytics-export-${new Date().toISOString()}.csv`,\r\n          contentType: 'text/csv'\r\n        };\r\n      }\r\n      \r\n      return {\r\n        data: allData,\r\n        filename: `beta-analytics-export-${new Date().toISOString()}.json`,\r\n        contentType: 'application/json'\r\n      };\r\n    } catch (error) {\r\n      console.error('Error exporting data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Get session recordings based on filters\r\n   * @param {string} startDate - Start date in ISO format\r\n   * @param {string} endDate - End date in ISO format\r\n   * @param {Object} filters - Filters for the recordings\r\n   * @returns {Promise<Object>} Session recordings data\r\n   */\r\n  async getSessionRecordings(startDate, endDate, filters = {}) {\r\n    // In a real implementation, this would call the Hotjar API\r\n    // For now, we'll simulate it with mock data\r\n    \r\n    console.log('Fetching session recordings with filters:', filters);\r\n    \r\n    // Simulate API call\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    \r\n    // Generate mock recordings\r\n    const recordings = Array.from({ length: 25 }).map((_, index) => {\r\n      const recordingDate = new Date(\r\n        new Date(startDate).getTime() + \r\n        Math.random() * (new Date(endDate).getTime() - new Date(startDate).getTime())\r\n      );\r\n      \r\n      const duration = Math.floor(Math.random() * 600) + 30; // 30s to 10min\r\n      const userType = Math.random() > 0.3 ? 'returning' : 'new';\r\n      const device = ['desktop', 'mobile', 'tablet'][Math.floor(Math.random() * 3)];\r\n      \r\n      const pages = [];\r\n      const numPages = Math.floor(Math.random() * 5) + 1;\r\n      const possiblePages = ['dashboard', 'search', 'profile', 'settings', 'tour_creation', 'tour_details', 'checkout'];\r\n      \r\n      for (let i = 0; i < numPages; i++) {\r\n        const page = possiblePages[Math.floor(Math.random() * possiblePages.length)];\r\n        if (!pages.includes(page)) {\r\n          pages.push(page);\r\n        }\r\n      }\r\n      \r\n      return {\r\n        id: `hj-${(10000000 + index).toString(16)}`, // Mock Hotjar recording ID\r\n        date: recordingDate.toISOString(),\r\n        duration: duration,\r\n        userId: Math.random() > 0.2 ? `user_${Math.floor(Math.random() * 1000)}` : null,\r\n        userType: userType,\r\n        device: device,\r\n        browser: ['Chrome', 'Firefox', 'Safari', 'Edge'][Math.floor(Math.random() * 4)],\r\n        country: ['United States', 'United Kingdom', 'Canada', 'Germany', 'France', 'Japan', 'Australia'][Math.floor(Math.random() * 7)],\r\n        pages: pages,\r\n        url: `https://example.com/${pages[0]}`\r\n      };\r\n    });\r\n    \r\n    // Apply filters\r\n    let filteredRecordings = [...recordings];\r\n    \r\n    if (filters.userType && filters.userType !== 'all') {\r\n      filteredRecordings = filteredRecordings.filter(r => r.userType === filters.userType);\r\n    }\r\n    \r\n    if (filters.device && filters.device !== 'all') {\r\n      filteredRecordings = filteredRecordings.filter(r => r.device === filters.device);\r\n    }\r\n    \r\n    if (filters.duration && filters.duration !== 'all') {\r\n      switch(filters.duration) {\r\n        case 'short':\r\n          filteredRecordings = filteredRecordings.filter(r => r.duration < 60);\r\n          break;\r\n        case 'medium':\r\n          filteredRecordings = filteredRecordings.filter(r => r.duration >= 60 && r.duration <= 300);\r\n          break;\r\n        case 'long':\r\n          filteredRecordings = filteredRecordings.filter(r => r.duration > 300);\r\n          break;\r\n      }\r\n    }\r\n    \r\n    if (filters.page && filters.page !== 'all') {\r\n      filteredRecordings = filteredRecordings.filter(r => r.pages.includes(filters.page));\r\n    }\r\n    \r\n    if (filters.search) {\r\n      const searchLower = filters.search.toLowerCase();\r\n      filteredRecordings = filteredRecordings.filter(r => \r\n        (r.userId && r.userId.toLowerCase().includes(searchLower)) ||\r\n        r.pages.some(p => p.toLowerCase().includes(searchLower)) ||\r\n        r.url.toLowerCase().includes(searchLower)\r\n      );\r\n    }\r\n    \r\n    // Sort by date (newest first)\r\n    filteredRecordings.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n    \r\n    // Handle pagination\r\n    const page = filters.page || 1;\r\n    const limit = filters.limit || 10;\r\n    const offset = (page - 1) * limit;\r\n    \r\n    const paginatedRecordings = filteredRecordings.slice(offset, offset + limit);\r\n    \r\n    return {\r\n      recordings: paginatedRecordings,\r\n      total: filteredRecordings.length\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Get heatmap data for a specific page and interaction type\r\n   * @param {string} pageId - ID of the page to get data for\r\n   * @param {string} interactionType - Type of interaction (clicks, moves, scrolls, etc.)\r\n   * @param {string} startDate - Start date in ISO format\r\n   * @param {string} endDate - End date in ISO format\r\n   * @param {string} userSegment - User segment to filter by\r\n   * @returns {Promise<Object>} Heatmap data\r\n   */\r\n  async getHeatmapData(pageId, interactionType, startDate, endDate, userSegment) {\r\n    // This would normally call the Hotjar API\r\n    console.log(`Fetching heatmap data for page ${pageId} and interaction type ${interactionType}`);\r\n    \r\n    // Simulate API call\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    \r\n    // Generate mock heatmap data\r\n    const width = 1200;\r\n    const height = 1600;\r\n    const numPoints = Math.floor(Math.random() * 200) + 100;\r\n    \r\n    const interactions = Array.from({ length: numPoints }).map(() => {\r\n      let x, y;\r\n      \r\n      // Create clusters to simulate realistic interaction patterns\r\n      if (Math.random() < 0.7) {\r\n        // 70% chance of being in a cluster\r\n        const clusterX = Math.floor(Math.random() * 5) * (width / 5) + (width / 10);\r\n        const clusterY = Math.floor(Math.random() * 8) * (height / 8) + (height / 16);\r\n        \r\n        x = Math.floor(clusterX + (Math.random() - 0.5) * (width / 5));\r\n        y = Math.floor(clusterY + (Math.random() - 0.5) * (height / 8));\r\n      } else {\r\n        // 30% chance of being random\r\n        x = Math.floor(Math.random() * width);\r\n        y = Math.floor(Math.random() * height);\r\n      }\r\n      \r\n      return {\r\n        x: x,\r\n        y: y,\r\n        value: Math.floor(Math.random() * 10) + 1 // 1-10 intensity\r\n      };\r\n    });\r\n    \r\n    // Get a screenshot URL (this would be fetched from Hotjar in real implementation)\r\n    const screenshotUrl = `/screenshots/${pageId}.png`;\r\n    \r\n    return {\r\n      screenshot: screenshotUrl,\r\n      interactions: interactions\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Get interaction metrics for a specific page and interaction type\r\n   * @param {string} pageId - ID of the page to get data for\r\n   * @param {string} interactionType - Type of interaction (clicks, moves, scrolls, etc.)\r\n   * @param {string} startDate - Start date in ISO format\r\n   * @param {string} endDate - End date in ISO format\r\n   * @param {string} userSegment - User segment to filter by\r\n   * @returns {Promise<Object>} Interaction metrics\r\n   */\r\n  async getInteractionMetrics(pageId, interactionType, startDate, endDate, userSegment) {\r\n    // This would normally call the Hotjar API\r\n    console.log(`Fetching interaction metrics for page ${pageId} and interaction type ${interactionType}`);\r\n    \r\n    // Simulate API call\r\n    await new Promise(resolve => setTimeout(resolve, 500));\r\n    \r\n    // Generate mock metrics\r\n    return {\r\n      totalInteractions: Math.floor(Math.random() * 5000) + 1000,\r\n      uniqueUsers: Math.floor(Math.random() * 500) + 100,\r\n      averageTimeSpent: Math.floor(Math.random() * 60) + 10,\r\n      mostInteractedElement: ['Search Button', 'Login Form', 'Navigation Menu', 'Feature Card', 'Pricing Table'][Math.floor(Math.random() * 5)]\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Get UX metrics for evaluation\r\n   * @param {string} startDate - Start date in ISO format\r\n   * @param {string} endDate - End date in ISO format\r\n   * @param {string} benchmark - Benchmark to compare against\r\n   * @returns {Promise<Object>} UX metrics data\r\n   */\r\n  async getUXMetrics(startDate, endDate, benchmark = 'industry') {\r\n    console.log(`Fetching UX metrics from ${startDate} to ${endDate} with benchmark ${benchmark}`);\r\n    \r\n    // Simulate API call\r\n    await new Promise(resolve => setTimeout(resolve, 800));\r\n    \r\n    // Generate mock metrics\r\n    return {\r\n      timeOnTask: { \r\n        value: Math.floor(Math.random() * 60) + 20, \r\n        trend: ['up', 'down', 'stable'][Math.floor(Math.random() * 3)],\r\n        loading: false, \r\n        error: null \r\n      },\r\n      successRate: { \r\n        value: Math.floor(Math.random() * 30) + 70, \r\n        trend: ['up', 'stable', 'down'][Math.floor(Math.random() * 3)],\r\n        loading: false, \r\n        error: null \r\n      },\r\n      errorRate: { \r\n        value: Math.floor(Math.random() * 10) + 1, \r\n        trend: ['down', 'stable', 'up'][Math.floor(Math.random() * 3)],\r\n        loading: false, \r\n        error: null \r\n      }, \r\n      satisfactionScore: { \r\n        value: Math.floor(Math.random() * 3) + 7, \r\n        trend: ['up', 'stable', 'down'][Math.floor(Math.random() * 3)],\r\n        loading: false, \r\n        error: null \r\n      },\r\n      taskCompletionTime: { \r\n        value: Math.floor(Math.random() * 50) + 20, \r\n        trend: ['down', 'stable', 'up'][Math.floor(Math.random() * 3)],\r\n        loading: false, \r\n        error: null \r\n      }\r\n    };\r\n  }\r\n  \r\n  /**\r\n   * Get component usage statistics\r\n   * @param {string} startDate - Start date in ISO format\r\n   * @param {string} endDate - End date in ISO format\r\n   * @returns {Promise<Array>} Component usage statistics\r\n   */\r\n  async getComponentUsageStats(startDate, endDate) {\r\n    console.log(`Fetching component usage stats from ${startDate} to ${endDate}`);\r\n    \r\n    // Simulate API call\r\n    await new Promise(resolve => setTimeout(resolve, 600));\r\n    \r\n    // Generate mock component stats\r\n    const components = [\r\n      'Search Form',\r\n      'Navigation Menu',\r\n      'Tour Card',\r\n      'Checkout Form',\r\n      'User Profile',\r\n      'Settings Panel',\r\n      'Login Modal',\r\n      'Feedback Widget',\r\n      'Feature Request Form',\r\n      'Survey Component'\r\n    ];\r\n    \r\n    return components.map((name, index) => ({\r\n      id: index + 1,\r\n      name,\r\n      usageCount: Math.floor(Math.random() * 1000) + 100,\r\n      avgTimeSpent: Math.floor(Math.random() * 60) + 5,\r\n      errorRate: Math.floor(Math.random() * 10),\r\n      satisfaction: Math.floor(Math.random() * 3) + 7\r\n    }));\r\n  }\r\n  \r\n  /**\r\n   * Get UX metrics time series data for charts\r\n   * @param {string} startDate - Start date in ISO format\r\n   * @param {string} endDate - End date in ISO format\r\n   * @returns {Promise<Object>} Time series data for charts\r\n   */\r\n  async getUXMetricsTimeSeries(startDate, endDate) {\r\n    console.log(`Fetching UX metrics time series from ${startDate} to ${endDate}`);\r\n    \r\n    // Simulate API call\r\n    await new Promise(resolve => setTimeout(resolve, 700));\r\n    \r\n    // Calculate number of days between dates\r\n    const start = new Date(startDate);\r\n    const end = new Date(endDate);\r\n    const daysDiff = Math.round((end - start) / (1000 * 60 * 60 * 24));\r\n    const numPoints = Math.min(daysDiff, 30); // Cap at 30 data points\r\n    \r\n    // Generate date labels\r\n    const labels = Array.from({ length: numPoints }).map((_, i) => {\r\n      const date = new Date(start);\r\n      date.setDate(date.getDate() + Math.round(i * (daysDiff / numPoints)));\r\n      return date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\r\n    });\r\n    \r\n    // Generate datasets\r\n    return {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: 'Success Rate (%)',\r\n          data: Array.from({ length: numPoints }).map(() => Math.floor(Math.random() * 30) + 70),\r\n          borderColor: '#4caf50',\r\n          backgroundColor: 'rgba(76, 175, 80, 0.1)',\r\n          tension: 0.4,\r\n          fill: true\r\n        },\r\n        {\r\n          label: 'Error Rate (%)',\r\n          data: Array.from({ length: numPoints }).map(() => Math.floor(Math.random() * 10) + 1),\r\n          borderColor: '#f44336',\r\n          backgroundColor: 'rgba(244, 67, 54, 0.1)',\r\n          tension: 0.4,\r\n          fill: true\r\n        },\r\n        {\r\n          label: 'Satisfaction Score',\r\n          data: Array.from({ length: numPoints }).map(() => Math.floor(Math.random() * 3) + 7),\r\n          borderColor: '#2196f3',\r\n          backgroundColor: 'rgba(33, 150, 243, 0.1)',\r\n          tension: 0.4,\r\n          fill: true\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\n// Create singleton instance\r\nconst analyticsService = new AnalyticsService();\r\n\r\nexport default analyticsService; ","// extracted by mini-css-extract-plugin\nexport default {\"chartContainer\":\"Analytics_chartContainer__u776k\",\"chartHeader\":\"Analytics_chartHeader__xSg8D\",\"controlsRow\":\"Analytics_controlsRow__c2eY3\",\"viewSelector\":\"Analytics_viewSelector__EIY65\",\"loadingIndicator\":\"Analytics_loadingIndicator__+jkKD\",\"errorMessage\":\"Analytics_errorMessage__ml3B7\",\"customTooltip\":\"Analytics_customTooltip__QADST\",\"tooltipLabel\":\"Analytics_tooltipLabel__NbXB0\",\"tooltipContent\":\"Analytics_tooltipContent__4VPB1\",\"metricControls\":\"Analytics_metricControls__ft1E+\",\"metricCheckbox\":\"Analytics_metricCheckbox__-Y48a\",\"insightPanel\":\"Analytics_insightPanel__4gUd2\",\"insightColumns\":\"Analytics_insightColumns__z-cAI\",\"insightGrid\":\"Analytics_insightGrid__yJ0yl\",\"insightItem\":\"Analytics_insightItem__Hyci+\",\"insightSubtext\":\"Analytics_insightSubtext__0X5NZ\",\"insightList\":\"Analytics_insightList__YzLuN\",\"pieChartWrapper\":\"Analytics_pieChartWrapper__3yqjj\",\"centerLabel\":\"Analytics_centerLabel__AMvwA\",\"centerValue\":\"Analytics_centerValue__ktQmz\",\"centerPercent\":\"Analytics_centerPercent__ZQoWL\",\"heatmapControls\":\"Analytics_heatmapControls__juQXl\",\"controlGroup\":\"Analytics_controlGroup__I+QQo\",\"heatmapContainer\":\"Analytics_heatmapContainer__S3M3b\",\"heatmapCanvas\":\"Analytics_heatmapCanvas__QmU28\",\"backButton\":\"Analytics_backButton__AqBZt\"};","/**\r\n * SessionRecordingService\r\n * Handles session recording playback, events, and interactions\r\n */\r\nimport axios from 'axios';\r\nimport { API_BASE_URL } from '../../../config/api';\r\n\r\nclass SessionRecordingService {\r\n  /**\r\n   * Fetch all session recordings with optional filtering\r\n   * @param {Object} filters - Optional filters (userId, dateRange, deviceType)\r\n   * @returns {Promise<Array>} - List of session recordings\r\n   */\r\n  static async getSessionRecordings(filters = {}) {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/session-recordings`, {\r\n        params: filters\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error fetching session recordings:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fetch a specific session recording by ID\r\n   * @param {string} sessionId - The ID of the session recording\r\n   * @returns {Promise<Object>} - Session recording data including events\r\n   */\r\n  static async getSessionRecording(sessionId) {\r\n    try {\r\n      const response = await axios.get(`${API_BASE_URL}/session-recordings/${sessionId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error fetching session recording ${sessionId}:`, error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a bookmark to a session recording\r\n   * @param {string} sessionId - The ID of the session recording\r\n   * @param {Object} bookmark - Bookmark data (time, label)\r\n   * @returns {Promise<Object>} - Created bookmark\r\n   */\r\n  static async addBookmark(sessionId, bookmark) {\r\n    try {\r\n      const response = await axios.post(\r\n        `${API_BASE_URL}/session-recordings/${sessionId}/bookmarks`, \r\n        bookmark\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error adding bookmark:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Report an issue at a specific point in a session recording\r\n   * @param {string} sessionId - The ID of the session recording\r\n   * @param {Object} issue - Issue data (time, description, screenshot)\r\n   * @returns {Promise<Object>} - Created issue\r\n   */\r\n  static async reportIssue(sessionId, issue) {\r\n    try {\r\n      const response = await axios.post(\r\n        `${API_BASE_URL}/session-recordings/${sessionId}/issues`, \r\n        issue\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error reporting issue:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Export session data for download\r\n   * @param {string} sessionId - The ID of the session recording\r\n   * @returns {Promise<Blob>} - Binary data of the export file\r\n   */\r\n  static async exportSessionData(sessionId) {\r\n    try {\r\n      const response = await axios.get(\r\n        `${API_BASE_URL}/session-recordings/${sessionId}/export`,\r\n        { responseType: 'blob' }\r\n      );\r\n      \r\n      // Create a download link and trigger download\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', `session-${sessionId}.json`);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error exporting session data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start recording a user session\r\n   * @param {Object} options - Recording options (captureEvents, captureScreen, etc)\r\n   * @returns {Promise<Object>} - Created session data with ID\r\n   */\r\n  static async startRecording(options = {}) {\r\n    try {\r\n      const metadata = {\r\n        timestamp: new Date().toISOString(),\r\n        userAgent: navigator.userAgent,\r\n        device: this.detectDevice(),\r\n        browser: this.detectBrowser(),\r\n        screenSize: {\r\n          width: window.innerWidth,\r\n          height: window.innerHeight\r\n        },\r\n        ...options\r\n      };\r\n      \r\n      const response = await axios.post(`${API_BASE_URL}/session-recordings`, {\r\n        metadata,\r\n        events: []\r\n      });\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error starting session recording:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add an event to the current recording session\r\n   * @param {string} sessionId - The ID of the session recording\r\n   * @param {Object} event - Event data (type, time, payload)\r\n   * @returns {Promise<Object>} - Updated session data\r\n   */\r\n  static async recordEvent(sessionId, event) {\r\n    try {\r\n      const response = await axios.post(\r\n        `${API_BASE_URL}/session-recordings/${sessionId}/events`,\r\n        event\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error recording event:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop the current recording session\r\n   * @param {string} sessionId - The ID of the session recording\r\n   * @returns {Promise<Object>} - Updated session data\r\n   */\r\n  static async stopRecording(sessionId) {\r\n    try {\r\n      const response = await axios.put(\r\n        `${API_BASE_URL}/session-recordings/${sessionId}/stop`\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Error stopping recording:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Helper method to detect device type\r\n   * @returns {string} - Device type\r\n   */\r\n  static detectDevice() {\r\n    const userAgent = navigator.userAgent;\r\n    if (/Android/i.test(userAgent)) return 'Android';\r\n    if (/iPhone|iPad|iPod/i.test(userAgent)) return 'iOS';\r\n    if (/Windows Phone/i.test(userAgent)) return 'Windows Phone';\r\n    if (/Mac/i.test(userAgent)) return 'Mac';\r\n    if (/Windows/i.test(userAgent)) return 'Windows';\r\n    if (/Linux/i.test(userAgent)) return 'Linux';\r\n    return 'Unknown';\r\n  }\r\n\r\n  /**\r\n   * Helper method to detect browser\r\n   * @returns {string} - Browser name and version\r\n   */\r\n  static detectBrowser() {\r\n    const userAgent = navigator.userAgent;\r\n    let browser = 'Unknown';\r\n    \r\n    if (userAgent.indexOf('Firefox') > -1) {\r\n      browser = 'Firefox';\r\n    } else if (userAgent.indexOf('SamsungBrowser') > -1) {\r\n      browser = 'Samsung';\r\n    } else if (userAgent.indexOf('Opera') > -1 || userAgent.indexOf('OPR') > -1) {\r\n      browser = 'Opera';\r\n    } else if (userAgent.indexOf('Edge') > -1 || userAgent.indexOf('Edg') > -1) {\r\n      browser = 'Edge';\r\n    } else if (userAgent.indexOf('Chrome') > -1) {\r\n      browser = 'Chrome';\r\n    } else if (userAgent.indexOf('Safari') > -1) {\r\n      browser = 'Safari';\r\n    } else if (userAgent.indexOf('MSIE') > -1 || userAgent.indexOf('Trident') > -1) {\r\n      browser = 'Internet Explorer';\r\n    }\r\n    \r\n    return browser;\r\n  }\r\n}\r\n\r\nexport default SessionRecordingService; ","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  CircularProgress,\r\n  Button,\r\n  Slider,\r\n  IconButton,\r\n  Grid,\r\n  Divider,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Tooltip,\r\n  Alert,\r\n  Chip,\r\n  Stack\r\n} from '@mui/material';\r\nimport {\r\n  PlayArrow,\r\n  Pause,\r\n  FastForward,\r\n  FastRewind,\r\n  SkipNext,\r\n  SkipPrevious,\r\n  Fullscreen,\r\n  FullscreenExit,\r\n  BugReport,\r\n  Bookmark,\r\n  Flag,\r\n  Download,\r\n  Speed,\r\n  ZoomIn,\r\n  ZoomOut,\r\n  Refresh,\r\n  ArrowBack\r\n} from '@mui/icons-material';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// Import the service for session recordings\r\nimport sessionRecordingService from '../../services/SessionRecordingService';\r\n\r\n/**\r\n * SessionRecording component\r\n * Displays recorded user sessions with playback controls and analysis tools\r\n */\r\nconst SessionRecording = ({ sessionId, onEventMarked, onAnalysisComplete, onBack }) => {\r\n  const theme = useTheme();\r\n  const playerRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  // State management\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [session, setSession] = useState(null);\r\n  const [isPlaying, setIsPlaying] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(0);\r\n  const [duration, setDuration] = useState(0);\r\n  const [playbackSpeed, setPlaybackSpeed] = useState(1);\r\n  const [isFullscreen, setIsFullscreen] = useState(false);\r\n  const [currentEvent, setCurrentEvent] = useState(null);\r\n  const [markers, setMarkers] = useState([]);\r\n  const [selectedFilter, setSelectedFilter] = useState('all');\r\n  const [bookmarks, setBookmarks] = useState([]);\r\n  const [issues, setIssues] = useState([]);\r\n  const [zoom, setZoom] = useState(1);\r\n  const [availableSessions, setAvailableSessions] = useState([]);\r\n  const [selectedSessionId, setSelectedSessionId] = useState(sessionId || '');\r\n  const [currentFrameIndex, setCurrentFrameIndex] = useState(0);\r\n  const [flaggedEvents, setFlaggedEvents] = useState([]);\r\n  \r\n  const timerRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n\r\n  // Fetch the session recording data\r\n  useEffect(() => {\r\n    const fetchSession = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const data = await sessionRecordingService.getSessionById(sessionId);\r\n        setSession(data);\r\n        setDuration(data.duration);\r\n        setMarkers(data.events || []);\r\n        setBookmarks(data.bookmarks || []);\r\n        setIssues(data.issues || []);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Failed to load session recording: ' + err.message);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchSession();\r\n  }, [sessionId]);\r\n\r\n  // Initialize the canvas for session replay\r\n  useEffect(() => {\r\n    if (session && canvasRef.current) {\r\n      const initializePlayer = async () => {\r\n        try {\r\n          await sessionRecordingService.initializePlayer(canvasRef.current, session);\r\n        } catch (err) {\r\n          setError('Failed to initialize player: ' + err.message);\r\n        }\r\n      };\r\n\r\n      initializePlayer();\r\n    }\r\n  }, [session, canvasRef]);\r\n\r\n  // Update time tracking during playback\r\n  useEffect(() => {\r\n    let intervalId;\r\n    \r\n    if (isPlaying) {\r\n      intervalId = setInterval(() => {\r\n        setCurrentTime(prevTime => {\r\n          const newTime = prevTime + 0.1 * playbackSpeed;\r\n          \r\n          // Check if we've reached an event\r\n          const nearestEvent = markers.find(\r\n            event => Math.abs(event.timestamp - newTime) < 0.2\r\n          );\r\n          \r\n          if (nearestEvent && (!currentEvent || currentEvent.id !== nearestEvent.id)) {\r\n            setCurrentEvent(nearestEvent);\r\n          }\r\n          \r\n          // Check if we've reached the end\r\n          if (newTime >= duration) {\r\n            setIsPlaying(false);\r\n            return duration;\r\n          }\r\n          \r\n          return newTime;\r\n        });\r\n      }, 100);\r\n    }\r\n\r\n    return () => {\r\n      if (intervalId) {\r\n        clearInterval(intervalId);\r\n      }\r\n    };\r\n  }, [isPlaying, duration, playbackSpeed, markers, currentEvent]);\r\n\r\n  // When current time changes, update the visual playback\r\n  useEffect(() => {\r\n    if (session) {\r\n      sessionRecordingService.seekToTime(currentTime);\r\n    }\r\n  }, [currentTime, session]);\r\n\r\n  // Play/pause handling\r\n  const handlePlayPause = () => {\r\n    if (isPlaying) {\r\n      sessionRecordingService.pause();\r\n    } else {\r\n      sessionRecordingService.play(playbackSpeed);\r\n    }\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  // Time navigation\r\n  const handleSeek = (_, newValue) => {\r\n    setCurrentTime(newValue);\r\n  };\r\n\r\n  // Jump forward/backward\r\n  const handleJump = (seconds) => {\r\n    const newTime = Math.max(0, Math.min(currentTime + seconds, duration));\r\n    setCurrentTime(newTime);\r\n  };\r\n\r\n  // Speed change\r\n  const handleSpeedChange = (event) => {\r\n    const newSpeed = parseFloat(event.target.value);\r\n    setPlaybackSpeed(newSpeed);\r\n    if (isPlaying) {\r\n      sessionRecordingService.setPlaybackSpeed(newSpeed);\r\n    }\r\n  };\r\n\r\n  // Filter session events\r\n  const handleFilterChange = (event) => {\r\n    setSelectedFilter(event.target.value);\r\n  };\r\n\r\n  // Add a bookmark at the current time\r\n  const handleAddBookmark = () => {\r\n    const newBookmark = {\r\n      id: `bookmark-${Date.now()}`,\r\n      timestamp: currentTime,\r\n      label: `Bookmark at ${formatTime(currentTime)}`,\r\n      type: 'bookmark',\r\n    };\r\n    \r\n    const updatedBookmarks = [...bookmarks, newBookmark];\r\n    setBookmarks(updatedBookmarks);\r\n    \r\n    // Save bookmark through service\r\n    sessionRecordingService.addBookmark(sessionId, newBookmark);\r\n    \r\n    if (onEventMarked) {\r\n      onEventMarked(newBookmark);\r\n    }\r\n  };\r\n\r\n  // Report an issue at the current time\r\n  const handleReportIssue = () => {\r\n    const newIssue = {\r\n      id: `issue-${Date.now()}`,\r\n      timestamp: currentTime,\r\n      label: `Issue at ${formatTime(currentTime)}`,\r\n      type: 'issue',\r\n    };\r\n    \r\n    const updatedIssues = [...issues, newIssue];\r\n    setIssues(updatedIssues);\r\n    \r\n    // Save issue through service\r\n    sessionRecordingService.reportIssue(sessionId, newIssue);\r\n    \r\n    if (onEventMarked) {\r\n      onEventMarked(newIssue);\r\n    }\r\n  };\r\n\r\n  // Toggle fullscreen mode\r\n  const handleToggleFullscreen = () => {\r\n    if (playerRef.current) {\r\n      if (!isFullscreen) {\r\n        if (playerRef.current.requestFullscreen) {\r\n          playerRef.current.requestFullscreen();\r\n        } else if (playerRef.current.mozRequestFullScreen) {\r\n          playerRef.current.mozRequestFullScreen();\r\n        } else if (playerRef.current.webkitRequestFullscreen) {\r\n          playerRef.current.webkitRequestFullscreen();\r\n        } else if (playerRef.current.msRequestFullscreen) {\r\n          playerRef.current.msRequestFullscreen();\r\n        }\r\n      } else {\r\n        if (document.exitFullscreen) {\r\n          document.exitFullscreen();\r\n        } else if (document.mozCancelFullScreen) {\r\n          document.mozCancelFullScreen();\r\n        } else if (document.webkitExitFullscreen) {\r\n          document.webkitExitFullscreen();\r\n        } else if (document.msExitFullscreen) {\r\n          document.msExitFullscreen();\r\n        }\r\n      }\r\n      setIsFullscreen(!isFullscreen);\r\n    }\r\n  };\r\n\r\n  // Export session data\r\n  const handleExportSession = () => {\r\n    sessionRecordingService.exportSessionData(sessionId);\r\n  };\r\n\r\n  // Format time display (mm:ss)\r\n  const formatTime = (timeInSeconds) => {\r\n    const minutes = Math.floor(timeInSeconds / 60);\r\n    const seconds = Math.floor(timeInSeconds % 60);\r\n    return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  // Filter events based on selection\r\n  const filteredEvents = () => {\r\n    if (selectedFilter === 'all') {\r\n      return [...markers, ...bookmarks, ...issues].sort((a, b) => a.timestamp - b.timestamp);\r\n    } else if (selectedFilter === 'clicks') {\r\n      return markers.filter(event => event.type === 'click');\r\n    } else if (selectedFilter === 'scrolls') {\r\n      return markers.filter(event => event.type === 'scroll');\r\n    } else if (selectedFilter === 'inputs') {\r\n      return markers.filter(event => event.type === 'input');\r\n    } else if (selectedFilter === 'bookmarks') {\r\n      return bookmarks;\r\n    } else if (selectedFilter === 'issues') {\r\n      return issues;\r\n    }\r\n    return [];\r\n  };\r\n\r\n  // Jump to a specific event\r\n  const jumpToEvent = (event) => {\r\n    setCurrentTime(event.timestamp);\r\n    setCurrentEvent(event);\r\n  };\r\n\r\n  const handleZoomChange = (newZoom) => {\r\n    setZoom(Math.max(0.5, Math.min(2, newZoom)));\r\n  };\r\n\r\n  // Load session data\r\n  useEffect(() => {\r\n    if (!selectedSessionId) {\r\n      // Load available sessions if no specific session is selected\r\n      sessionRecordingService.getAvailableSessions()\r\n        .then(data => {\r\n          setAvailableSessions(data);\r\n          if (data.length > 0 && !sessionId) {\r\n            setSelectedSessionId(data[0].id);\r\n          }\r\n          setLoading(false);\r\n        })\r\n        .catch(err => {\r\n          setError('Failed to load available sessions');\r\n          setLoading(false);\r\n        });\r\n      \r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    setIsPlaying(false);\r\n    setCurrentTime(0);\r\n    setCurrentFrameIndex(0);\r\n    \r\n    sessionRecordingService.getSessionById(selectedSessionId)\r\n      .then(data => {\r\n        setSession(data);\r\n        setDuration(data.duration);\r\n        setMarkers(data.events || []);\r\n        setBookmarks(data.bookmarks || []);\r\n        setIssues(data.issues || []);\r\n        setLoading(false);\r\n      })\r\n      .catch(err => {\r\n        setError('Failed to load session recording');\r\n        setLoading(false);\r\n      });\r\n      \r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current);\r\n      }\r\n    };\r\n  }, [selectedSessionId, sessionId]);\r\n  \r\n  // Playback logic\r\n  useEffect(() => {\r\n    if (isPlaying && session) {\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current);\r\n      }\r\n      \r\n      timerRef.current = setInterval(() => {\r\n        setCurrentTime(prev => {\r\n          const newTime = prev + (0.1 * playbackSpeed);\r\n          \r\n          // Check if we need to update the current frame\r\n          if (session.frames && session.frames.length > 0) {\r\n            const frameTimestamps = session.frames.map((frame, index) => ({\r\n              index,\r\n              time: (new Date(frame.timestamp).getTime() - new Date(session.startTime).getTime()) / 1000\r\n            }));\r\n            \r\n            const nextFrameIndex = frameTimestamps.findIndex(frame => frame.time > newTime);\r\n            if (nextFrameIndex > 0) {\r\n              setCurrentFrameIndex(nextFrameIndex - 1);\r\n            } else if (nextFrameIndex === -1 && newTime > frameTimestamps[frameTimestamps.length - 1].time) {\r\n              setCurrentFrameIndex(frameTimestamps.length - 1);\r\n            }\r\n          }\r\n          \r\n          // If we reached the end, stop playback\r\n          if (newTime >= session.duration) {\r\n            setIsPlaying(false);\r\n            clearInterval(timerRef.current);\r\n            return session.duration;\r\n          }\r\n          \r\n          return newTime;\r\n        });\r\n      }, 100);\r\n    } else if (timerRef.current) {\r\n      clearInterval(timerRef.current);\r\n    }\r\n    \r\n    return () => {\r\n      if (timerRef.current) {\r\n        clearInterval(timerRef.current);\r\n      }\r\n    };\r\n  }, [isPlaying, session, playbackSpeed]);\r\n  \r\n  const handlePlay = () => {\r\n    setIsPlaying(true);\r\n  };\r\n  \r\n  const handlePause = () => {\r\n    setIsPlaying(false);\r\n  };\r\n  \r\n  const handleNextFrame = () => {\r\n    if (session && session.frames && currentFrameIndex < session.frames.length - 1) {\r\n      const nextIndex = currentFrameIndex + 1;\r\n      setCurrentFrameIndex(nextIndex);\r\n      \r\n      // Update current time based on frame timestamp\r\n      const frameTime = (new Date(session.frames[nextIndex].timestamp).getTime() - new Date(session.startTime).getTime()) / 1000;\r\n      setCurrentTime(frameTime);\r\n    }\r\n  };\r\n  \r\n  const handlePrevFrame = () => {\r\n    if (session && session.frames && currentFrameIndex > 0) {\r\n      const prevIndex = currentFrameIndex - 1;\r\n      setCurrentFrameIndex(prevIndex);\r\n      \r\n      // Update current time based on frame timestamp\r\n      const frameTime = (new Date(session.frames[prevIndex].timestamp).getTime() - new Date(session.startTime).getTime()) / 1000;\r\n      setCurrentTime(frameTime);\r\n    }\r\n  };\r\n  \r\n  const handleSessionChange = (event) => {\r\n    setSelectedSessionId(event.target.value);\r\n  };\r\n\r\n  const getCurrentEvents = () => {\r\n    if (!session || !session.events) return [];\r\n    \r\n    // Get events within 2 seconds of current time\r\n    const currentTimeMs = new Date(session.startTime).getTime() + (currentTime * 1000);\r\n    const lowerBound = currentTimeMs - 2000;\r\n    const upperBound = currentTimeMs + 2000;\r\n    \r\n    return session.events.filter(event => {\r\n      const eventTime = new Date(event.timestamp).getTime();\r\n      return eventTime >= lowerBound && eventTime <= upperBound;\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', p: 3 }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Alert severity=\"error\" sx={{ mt: 2 }}>\r\n        {error}\r\n      </Alert>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper elevation={3} sx={{ p: 2, borderRadius: 2 }}>\r\n      <Typography variant=\"h5\" component=\"h2\" gutterBottom>\r\n        Session Recording\r\n      </Typography>\r\n      \r\n      {session && (\r\n        <Box>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            User: {session.userId} • Duration: {formatTime(duration)} • Date: {new Date(session.timestamp).toLocaleString()}\r\n          </Typography>\r\n          \r\n          {/* Session Replay Canvas */}\r\n          <Box \r\n            ref={playerRef}\r\n            sx={{\r\n              position: 'relative',\r\n              width: '100%',\r\n              height: '500px',\r\n              bgcolor: 'black',\r\n              borderRadius: 1,\r\n              overflow: 'hidden'\r\n            }}\r\n          >\r\n            <canvas \r\n              ref={canvasRef} \r\n              style={{ \r\n                width: '100%', \r\n                height: '100%', \r\n                objectFit: 'contain' \r\n              }}\r\n            />\r\n            \r\n            {/* Current event overlay */}\r\n            {currentEvent && (\r\n              <Box\r\n                sx={{\r\n                  position: 'absolute',\r\n                  bottom: 16,\r\n                  right: 16,\r\n                  bgcolor: 'rgba(0, 0, 0, 0.6)',\r\n                  color: 'white',\r\n                  p: 1,\r\n                  borderRadius: 1,\r\n                  maxWidth: '30%'\r\n                }}\r\n              >\r\n                <Typography variant=\"body2\">\r\n                  {currentEvent.type}: {currentEvent.label || currentEvent.value}\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          \r\n          {/* Playback Controls */}\r\n          <Box sx={{ mt: 2 }}>\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n              <Grid item>\r\n                <IconButton onClick={() => handleJump(-30)}>\r\n                  <SkipPrevious />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item>\r\n                <IconButton onClick={() => handleJump(-5)}>\r\n                  <FastRewind />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item>\r\n                <IconButton onClick={handlePlayPause} color=\"primary\">\r\n                  {isPlaying ? <Pause /> : <PlayArrow />}\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item>\r\n                <IconButton onClick={() => handleJump(5)}>\r\n                  <FastForward />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item>\r\n                <IconButton onClick={() => handleJump(30)}>\r\n                  <SkipNext />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs>\r\n                <Slider\r\n                  value={currentTime}\r\n                  min={0}\r\n                  max={duration}\r\n                  onChange={handleSeek}\r\n                  sx={{ mx: 2 }}\r\n                />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"body2\">\r\n                  {formatTime(currentTime)} / {formatTime(duration)}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item>\r\n                <FormControl variant=\"standard\" sx={{ minWidth: 80 }}>\r\n                  <InputLabel id=\"speed-select-label\">Speed</InputLabel>\r\n                  <Select\r\n                    labelId=\"speed-select-label\"\r\n                    value={playbackSpeed}\r\n                    onChange={handleSpeedChange}\r\n                    startAdornment={<Speed fontSize=\"small\" sx={{ mr: 0.5 }} />}\r\n                  >\r\n                    <MenuItem value={0.5}>0.5x</MenuItem>\r\n                    <MenuItem value={1}>1x</MenuItem>\r\n                    <MenuItem value={1.5}>1.5x</MenuItem>\r\n                    <MenuItem value={2}>2x</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Grid>\r\n              <Grid item>\r\n                <Tooltip title=\"Toggle fullscreen\">\r\n                  <IconButton onClick={handleToggleFullscreen}>\r\n                    {isFullscreen ? <FullscreenExit /> : <Fullscreen />}\r\n                  </IconButton>\r\n                </Tooltip>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          \r\n          <Box sx={{ mt: 3 }}>\r\n            <Grid container spacing={3}>\r\n              {/* Analysis Tools */}\r\n              <Grid item xs={12} md={8}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Session Analysis\r\n                </Typography>\r\n                <Box sx={{ mb: 2 }}>\r\n                  <Button \r\n                    variant=\"outlined\" \r\n                    startIcon={<Bookmark />}\r\n                    onClick={handleAddBookmark}\r\n                    sx={{ mr: 1 }}\r\n                  >\r\n                    Add Bookmark\r\n                  </Button>\r\n                  <Button \r\n                    variant=\"outlined\" \r\n                    color=\"error\" \r\n                    startIcon={<BugReport />}\r\n                    onClick={handleReportIssue}\r\n                    sx={{ mr: 1 }}\r\n                  >\r\n                    Report Issue\r\n                  </Button>\r\n                  <Button \r\n                    variant=\"outlined\" \r\n                    startIcon={<Download />}\r\n                    onClick={handleExportSession}\r\n                  >\r\n                    Export Data\r\n                  </Button>\r\n                </Box>\r\n                \r\n                <Paper sx={{ p: 2, bgcolor: theme.palette.background.default }}>\r\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n                    <Typography variant=\"subtitle1\">\r\n                      Session Metrics\r\n                    </Typography>\r\n                    {session.metrics && (\r\n                      <Chip \r\n                        label={`Score: ${session.metrics.overallScore}/100`}\r\n                        color={\r\n                          session.metrics.overallScore > 80 ? 'success' : \r\n                          session.metrics.overallScore > 60 ? 'info' : 'warning'\r\n                        }\r\n                      />\r\n                    )}\r\n                  </Box>\r\n                  \r\n                  {session.metrics && (\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={6} md={3}>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">Page Views</Typography>\r\n                        <Typography variant=\"h6\">{session.metrics.pageViews}</Typography>\r\n                      </Grid>\r\n                      <Grid item xs={6} md={3}>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">Time on Task</Typography>\r\n                        <Typography variant=\"h6\">{formatTime(session.metrics.timeOnTask)}</Typography>\r\n                      </Grid>\r\n                      <Grid item xs={6} md={3}>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">Error Count</Typography>\r\n                        <Typography variant=\"h6\" color={session.metrics.errorCount > 2 ? 'error.main' : 'text.primary'}>\r\n                          {session.metrics.errorCount}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={6} md={3}>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">Click Count</Typography>\r\n                        <Typography variant=\"h6\">{session.metrics.clickCount}</Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  )}\r\n                </Paper>\r\n              </Grid>\r\n              \r\n              {/* Event Timeline */}\r\n              <Grid item xs={12} md={4}>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 1 }}>\r\n                  <Typography variant=\"h6\">\r\n                    Event Timeline\r\n                  </Typography>\r\n                  <FormControl variant=\"standard\" size=\"small\">\r\n                    <Select\r\n                      value={selectedFilter}\r\n                      onChange={handleFilterChange}\r\n                      sx={{ minWidth: 120 }}\r\n                    >\r\n                      <MenuItem value=\"all\">All Events</MenuItem>\r\n                      <MenuItem value=\"clicks\">Clicks</MenuItem>\r\n                      <MenuItem value=\"scrolls\">Scrolls</MenuItem>\r\n                      <MenuItem value=\"inputs\">Inputs</MenuItem>\r\n                      <MenuItem value=\"bookmarks\">Bookmarks</MenuItem>\r\n                      <MenuItem value=\"issues\">Issues</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                </Box>\r\n                \r\n                <Paper \r\n                  sx={{ \r\n                    height: 300, \r\n                    overflow: 'auto',\r\n                    p: 1,\r\n                    bgcolor: theme.palette.background.default\r\n                  }}\r\n                >\r\n                  {filteredEvents().length === 0 ? (\r\n                    <Typography variant=\"body2\" sx={{ p: 2, color: 'text.secondary' }}>\r\n                      No events found for the selected filter.\r\n                    </Typography>\r\n                  ) : (\r\n                    filteredEvents().map((event) => (\r\n                      <Box \r\n                        key={event.id}\r\n                        sx={{\r\n                          p: 1.5,\r\n                          mb: 1,\r\n                          borderRadius: 1,\r\n                          bgcolor: \r\n                            event.type === 'issue' ? 'error.light' :\r\n                            event.type === 'bookmark' ? 'info.light' : 'background.paper',\r\n                          display: 'flex',\r\n                          alignItems: 'center',\r\n                          justifyContent: 'space-between',\r\n                          cursor: 'pointer',\r\n                          '&:hover': {\r\n                            bgcolor: \r\n                              event.type === 'issue' ? 'error.main' :\r\n                              event.type === 'bookmark' ? 'info.main' : 'action.hover',\r\n                          }\r\n                        }}\r\n                        onClick={() => jumpToEvent(event)}\r\n                      >\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                          {event.type === 'click' && <Flag fontSize=\"small\" sx={{ mr: 1 }} />}\r\n                          {event.type === 'scroll' && <Flag fontSize=\"small\" sx={{ mr: 1 }} />}\r\n                          {event.type === 'input' && <Flag fontSize=\"small\" sx={{ mr: 1 }} />}\r\n                          {event.type === 'bookmark' && <Bookmark fontSize=\"small\" color=\"info\" sx={{ mr: 1 }} />}\r\n                          {event.type === 'issue' && <BugReport fontSize=\"small\" color=\"error\" sx={{ mr: 1 }} />}\r\n                          <Typography variant=\"body2\">\r\n                            {event.label || event.type}\r\n                          </Typography>\r\n                        </Box>\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          {formatTime(event.timestamp)}\r\n                        </Typography>\r\n                      </Box>\r\n                    ))\r\n                  )}\r\n                </Paper>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nSessionRecording.propTypes = {\r\n  sessionId: PropTypes.string.isRequired,\r\n  onEventMarked: PropTypes.func,\r\n  onAnalysisComplete: PropTypes.func,\r\n  onBack: PropTypes.func\r\n};\r\n\r\nexport default SessionRecording; ","import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// Simplified approach without relying on Material-UI components\r\nimport styles from './Analytics.module.css';\r\nimport analyticsService from '../../services/analytics/AnalyticsService';\r\n\r\n/**\r\n * HeatmapVisualization component\r\n * Displays user interaction heatmaps on app pages/screens\r\n * Helps identify which UI elements receive most attention from users\r\n */\r\nconst HeatmapVisualization = ({ onBack }) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [pages, setPages] = useState([]);\r\n  const [selectedPage, setSelectedPage] = useState('');\r\n  const [heatmapType, setHeatmapType] = useState('clicks');\r\n  const [heatmapData, setHeatmapData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [intensity, setIntensity] = useState(0.7);\r\n  const [radius, setRadius] = useState(30);\r\n  \r\n  const canvasRef = useRef(null);\r\n  const imageRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    // Fetch available pages for heatmap visualization\r\n    const fetchPages = async () => {\r\n      try {\r\n        const data = await analyticsService.getHeatmapPagesList();\r\n        setPages(data);\r\n        if (data.length > 0) {\r\n          setSelectedPage(data[0].id);\r\n        }\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError('Failed to load pages list');\r\n        setLoading(false);\r\n        console.error('Error fetching pages list:', err);\r\n      }\r\n    };\r\n    \r\n    fetchPages();\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    if (selectedPage) {\r\n      setLoading(true);\r\n      setHeatmapData(null);\r\n      \r\n      const fetchData = async () => {\r\n        try {\r\n          const data = await analyticsService.getHeatmapData(selectedPage, heatmapType);\r\n          setHeatmapData(data);\r\n          setLoading(false);\r\n        } catch (err) {\r\n          setError('Failed to load heatmap data');\r\n          setLoading(false);\r\n          console.error('Error fetching heatmap data:', err);\r\n        }\r\n      };\r\n      \r\n      fetchData();\r\n    }\r\n  }, [selectedPage, heatmapType]);\r\n  \r\n  useEffect(() => {\r\n    if (heatmapData && canvasRef.current && imageRef.current) {\r\n      const img = imageRef.current;\r\n      \r\n      if (img.complete) {\r\n        drawHeatmap();\r\n      } else {\r\n        img.onload = drawHeatmap;\r\n      }\r\n    }\r\n  }, [heatmapData, intensity, radius]);\r\n  \r\n  const drawHeatmap = () => {\r\n    if (!canvasRef.current || !heatmapData) return;\r\n    \r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const { width, height } = heatmapData.viewport;\r\n    \r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    \r\n    // Draw screenshot as background\r\n    if (imageRef.current && imageRef.current.complete) {\r\n      ctx.drawImage(imageRef.current, 0, 0, width, height);\r\n      // Add slight overlay to make heatmap more visible\r\n      ctx.fillStyle = 'rgba(255, 255, 255, 0.2)';\r\n      ctx.fillRect(0, 0, width, height);\r\n    } else {\r\n      // Fallback if image fails to load\r\n      ctx.fillStyle = '#f5f5f5';\r\n      ctx.fillRect(0, 0, width, height);\r\n      \r\n      ctx.fillStyle = '#ccc';\r\n      ctx.font = '24px Arial';\r\n      ctx.textAlign = 'center';\r\n      ctx.fillText(`Screenshot of ${heatmapData.pageUrl}`, width / 2, height / 2);\r\n    }\r\n    \r\n    // Find maximum value for normalization\r\n    const maxValue = Math.max(...heatmapData.data.map(point => point.value));\r\n    \r\n    // Draw heatmap points\r\n    heatmapData.data.forEach(point => {\r\n      const { x, y, value } = point;\r\n      const normalizedValue = value / maxValue;\r\n      \r\n      // Create gradient for heatmap point\r\n      const gradient = ctx.createRadialGradient(x, y, 0, x, y, radius);\r\n      \r\n      if (heatmapType === 'clicks') {\r\n        gradient.addColorStop(0, `rgba(255, 0, 0, ${normalizedValue * intensity})`);\r\n        gradient.addColorStop(1, 'rgba(255, 0, 0, 0)');\r\n      } else if (heatmapType === 'moves') {\r\n        gradient.addColorStop(0, `rgba(0, 0, 255, ${normalizedValue * intensity})`);\r\n        gradient.addColorStop(1, 'rgba(0, 0, 255, 0)');\r\n      } else { // views\r\n        gradient.addColorStop(0, `rgba(0, 255, 0, ${normalizedValue * intensity})`);\r\n        gradient.addColorStop(1, 'rgba(0, 255, 0, 0)');\r\n      }\r\n      \r\n      ctx.fillStyle = gradient;\r\n      ctx.beginPath();\r\n      ctx.arc(x, y, radius, 0, 2 * Math.PI);\r\n      ctx.fill();\r\n    });\r\n    \r\n    // Add overlay to show combined heatmap more clearly\r\n    ctx.globalCompositeOperation = 'multiply';\r\n    ctx.globalCompositeOperation = 'source-over';\r\n  };\r\n  \r\n  const handlePageChange = (event) => {\r\n    setSelectedPage(event.target.value);\r\n  };\r\n  \r\n  const handleTypeChange = (event) => {\r\n    setHeatmapType(event.target.value);\r\n  };\r\n  \r\n  const handleIntensityChange = (event) => {\r\n    setIntensity(parseFloat(event.target.value));\r\n  };\r\n  \r\n  const handleRadiusChange = (event) => {\r\n    setRadius(parseInt(event.target.value, 10));\r\n  };\r\n  \r\n  const handleExport = () => {\r\n    if (!canvasRef.current) return;\r\n    \r\n    // Create a temporary link element\r\n    const link = document.createElement('a');\r\n    link.download = `heatmap-${selectedPage}-${heatmapType}.png`;\r\n    link.href = canvasRef.current.toDataURL('image/png');\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    document.body.removeChild(link);\r\n  };\r\n  \r\n  if (loading && !heatmapData) {\r\n    return <div className={styles.loadingIndicator}>Loading heatmap data...</div>;\r\n  }\r\n  \r\n  if (error) {\r\n    return (\r\n      <div className={styles.chartContainer}>\r\n        <div className={styles.errorMessage}>{error}</div>\r\n        <button onClick={onBack} className={styles.viewSelector}>Back to Analytics</button>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className={styles.chartContainer}>\r\n      <div className={styles.chartHeader}>\r\n        <h3>User Interaction Heatmap</h3>\r\n        <div className={styles.controlsRow}>\r\n          <select \r\n            value={selectedPage} \r\n            onChange={handlePageChange}\r\n            className={styles.viewSelector}\r\n          >\r\n            {pages.map(page => (\r\n              <option key={page.id} value={page.id}>{page.name}</option>\r\n            ))}\r\n          </select>\r\n          \r\n          <select \r\n            value={heatmapType} \r\n            onChange={handleTypeChange}\r\n            className={styles.viewSelector}\r\n          >\r\n            <option value=\"clicks\">Clicks</option>\r\n            <option value=\"moves\">Mouse Movements</option>\r\n            <option value=\"views\">View Time</option>\r\n          </select>\r\n          \r\n          <button \r\n            onClick={handleExport} \r\n            className={styles.viewSelector}\r\n          >\r\n            Export\r\n          </button>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className={styles.heatmapControls}>\r\n        <div className={styles.controlGroup}>\r\n          <label>Intensity:</label>\r\n          <input \r\n            type=\"range\" \r\n            min=\"0.1\" \r\n            max=\"1\" \r\n            step=\"0.1\" \r\n            value={intensity}\r\n            onChange={handleIntensityChange} \r\n          />\r\n          <span>{intensity}</span>\r\n        </div>\r\n        \r\n        <div className={styles.controlGroup}>\r\n          <label>Radius:</label>\r\n          <input \r\n            type=\"range\" \r\n            min=\"10\" \r\n            max=\"50\" \r\n            step=\"5\" \r\n            value={radius}\r\n            onChange={handleRadiusChange} \r\n          />\r\n          <span>{radius}px</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className={styles.heatmapContainer}>\r\n        {/* Hidden image for screenshot */}\r\n        <img \r\n          ref={imageRef} \r\n          src={heatmapData?.screenshot || \"https://via.placeholder.com/1280x720?text=Loading+Screenshot\"} \r\n          alt=\"Page screenshot\" \r\n          style={{ display: 'none' }} \r\n          crossOrigin=\"anonymous\"\r\n        />\r\n        \r\n        {/* Canvas for drawing heatmap */}\r\n        <canvas \r\n          ref={canvasRef} \r\n          className={styles.heatmapCanvas}\r\n        />\r\n      </div>\r\n      \r\n      {heatmapData && (\r\n        <div className={styles.insightPanel}>\r\n          <h4>Interaction Insights</h4>\r\n          <div className={styles.insightGrid}>\r\n            <div className={styles.insightItem}>\r\n              <h5>Most Active Area</h5>\r\n              <p>\r\n                The area with highest activity is around \r\n                coordinates ({heatmapData.data[0]?.x || 0}, {heatmapData.data[0]?.y || 0})\r\n              </p>\r\n            </div>\r\n            \r\n            <div className={styles.insightItem}>\r\n              <h5>Activity Summary</h5>\r\n              <p>\r\n                {heatmapData.data.length} {heatmapType} tracked on this page\r\n              </p>\r\n            </div>\r\n            \r\n            <div className={styles.insightItem}>\r\n              <h5>Page URL</h5>\r\n              <p>{heatmapData.pageUrl}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      \r\n      <div className={styles.backButton}>\r\n        <button onClick={onBack} className={styles.viewSelector}>\r\n          Back to Dashboard\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeatmapVisualization.propTypes = {\r\n  onBack: PropTypes.func.isRequired\r\n};\r\n\r\nexport default HeatmapVisualization; ","import React, { useState, useEffect } from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  CircularProgress,\r\n  Grid,\r\n  Typography,\r\n  Paper,\r\n  Tabs,\r\n  Tab,\r\n  Alert,\r\n  Button,\r\n  Divider,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Chip,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  ButtonGroup,\r\n  IconButton\r\n} from '@mui/material';\r\nimport {\r\n  DownloadOutlined as DownloadIcon,\r\n  NotificationsActive as AlertIcon,\r\n  TrendingUp as TrendingUpIcon,\r\n  Check as CheckIcon,\r\n  Error as ErrorIcon,\r\n  ArrowUpward as TrendUpIcon,\r\n  ArrowDownward as TrendDownIcon,\r\n  Info as InfoIcon,\r\n  FileDownload as ExportIcon,\r\n  Refresh as RefreshIcon,\r\n  Person,\r\n  Devices,\r\n  BarChart,\r\n  Ballot,\r\n  Timeline,\r\n  Map,\r\n  VideoLibrary,\r\n  Whatshot\r\n} from '@mui/icons-material';\r\nimport {\r\n  AreaChart,\r\n  Area,\r\n  BarChart as RechartsBarChart,\r\n  Bar,\r\n  LineChart,\r\n  Line,\r\n  PieChart,\r\n  Pie,\r\n  Cell,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip as RechartsTooltip,\r\n  Legend,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\n\r\nimport analyticsService from '../../services/analytics/AnalyticsService';\r\nimport authService from '../../services/AuthService';\r\nimport UserActivityChart from './UserActivityChart';\r\nimport FeedbackSentimentChart from './FeedbackSentimentChart';\r\nimport FeatureUsageChart from './FeatureUsageChart';\r\nimport DeviceDistribution from './DeviceDistribution';\r\nimport SessionRecording from './SessionRecording';\r\nimport HeatmapVisualization from './HeatmapVisualization';\r\n\r\n/**\r\n * Analytics Dashboard Component\r\n * Displays beta program usage metrics and insights\r\n */\r\nconst AnalyticsDashboard = () => {\r\n  const theme = useTheme();\r\n  \r\n  // State\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [userActivity, setUserActivity] = useState([]);\r\n  const [featureUsage, setFeatureUsage] = useState([]);\r\n  const [feedbackSentiment, setFeedbackSentiment] = useState([]);\r\n  const [retentionData, setRetentionData] = useState([]);\r\n  const [geographicData, setGeographicData] = useState([]);\r\n  const [deviceData, setDeviceData] = useState([]);\r\n  const [browserData, setBrowserData] = useState([]);\r\n  const [issueData, setIssueData] = useState([]);\r\n  const [anomalies, setAnomalies] = useState([]);\r\n  const [exportFormat, setExportFormat] = useState('json');\r\n  const [timeRange, setTimeRange] = useState('7days');\r\n  const [dashboardData, setDashboardData] = useState(null);\r\n  const [showSessionRecordings, setShowSessionRecordings] = useState(false);\r\n  const [showHeatmaps, setShowHeatmaps] = useState(false);\r\n  \r\n  // Colors for charts\r\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8', '#82CA9D', '#FFC658'];\r\n  const SENTIMENT_COLORS = {\r\n    positive: '#4caf50',\r\n    neutral: '#9e9e9e', \r\n    negative: '#f44336'\r\n  };\r\n\r\n  // Chart colors\r\n  const colors = {\r\n    primary: theme.palette.primary.main,\r\n    secondary: theme.palette.secondary.main,\r\n    success: theme.palette.success.main,\r\n    warning: theme.palette.warning.main,\r\n    error: theme.palette.error.main,\r\n    info: theme.palette.info.main,\r\n    pieColors: [\r\n      '#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#A4DE6C',\r\n      '#8884D8', '#83A6ED', '#8DD1E1', '#D0ED57', '#F7DC6F'\r\n    ]\r\n  };\r\n\r\n  // Check admin status and initialize data\r\n  useEffect(() => {\r\n    const checkAdmin = async () => {\r\n      try {\r\n        const adminStatus = await authService.isAdmin();\r\n        setIsAdmin(adminStatus);\r\n        \r\n        if (adminStatus) {\r\n          // Initialize analytics tracking\r\n          analyticsService.initGA4();\r\n          \r\n          // Load dashboard data\r\n          await loadDashboardData();\r\n        } else {\r\n          setError('Admin access required to view analytics');\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error checking admin status:', err);\r\n        setError('Failed to verify admin access');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    checkAdmin();\r\n  }, []);\r\n\r\n  // Load all dashboard data\r\n  const loadDashboardData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // Load all data in parallel\r\n      const [\r\n        userActivityData,\r\n        featureUsageData,\r\n        feedbackSentimentData,\r\n        retentionData,\r\n        geographicData,\r\n        deviceData,\r\n        browserData,\r\n        issueData,\r\n        anomaliesData\r\n      ] = await Promise.all([\r\n        analyticsService.getUserActivity(),\r\n        analyticsService.getFeatureUsage(),\r\n        analyticsService.getFeedbackSentiment(),\r\n        analyticsService.getRetentionData(),\r\n        analyticsService.getGeographicData(),\r\n        analyticsService.getDeviceData(),\r\n        analyticsService.getBrowserData(),\r\n        analyticsService.getIssueData(),\r\n        analyticsService.detectAnomalies()\r\n      ]);\r\n      \r\n      // Update state with data\r\n      setUserActivity(userActivityData);\r\n      setFeatureUsage(featureUsageData);\r\n      setFeedbackSentiment(feedbackSentimentData);\r\n      setRetentionData(retentionData);\r\n      setGeographicData(geographicData);\r\n      setDeviceData(deviceData);\r\n      setBrowserData(browserData);\r\n      setIssueData(issueData);\r\n      setAnomalies(anomaliesData);\r\n      \r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error('Error loading dashboard data:', err);\r\n      setError('Failed to load analytics data');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle tab change\r\n  const handleTabChange = (event, newValue) => {\r\n    setActiveTab(newValue);\r\n  };\r\n\r\n  // Handle export format change\r\n  const handleExportFormatChange = (event) => {\r\n    setExportFormat(event.target.value);\r\n  };\r\n\r\n  // Handle export data\r\n  const handleExportData = async () => {\r\n    try {\r\n      const exportData = await analyticsService.exportData(exportFormat);\r\n      \r\n      // Create a download link\r\n      const dataStr = typeof exportData.data === 'string' \r\n        ? exportData.data \r\n        : JSON.stringify(exportData.data, null, 2);\r\n      \r\n      const blob = new Blob([dataStr], { type: exportData.contentType });\r\n      const url = URL.createObjectURL(blob);\r\n      \r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = exportData.filename;\r\n      a.click();\r\n      \r\n      URL.revokeObjectURL(url);\r\n    } catch (err) {\r\n      console.error('Error exporting data:', err);\r\n      setError('Failed to export data');\r\n    }\r\n  };\r\n\r\n  // Load analytics data\r\n  useEffect(() => {\r\n    loadAnalytics();\r\n  }, [timeRange]);\r\n  \r\n  // Load analytics data based on time range\r\n  const loadAnalytics = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      \r\n      // In a real implementation, this would be an API call\r\n      // const data = await analyticsService.getAnalytics(timeRange);\r\n      \r\n      // Mock data for demo\r\n      setTimeout(() => {\r\n        // Generate data based on selected time range\r\n        const data = generateMockData(timeRange);\r\n        setDashboardData(data);\r\n        setLoading(false);\r\n      }, 800); // Simulate network delay\r\n      \r\n    } catch (err) {\r\n      console.error('Error loading analytics:', err);\r\n      setError('Failed to load analytics data. Please try again.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Handle time range change\r\n  const handleTimeRangeChange = (event) => {\r\n    setTimeRange(event.target.value);\r\n  };\r\n\r\n  // Format number with K, M suffixes\r\n  const formatNumber = (num) => {\r\n    if (num >= 1000000) {\r\n      return (num / 1000000).toFixed(1) + 'M';\r\n    }\r\n    if (num >= 1000) {\r\n      return (num / 1000).toFixed(1) + 'K';\r\n    }\r\n    return num;\r\n  };\r\n  \r\n  // Get trend indicator component\r\n  const TrendIndicator = ({ value, previousValue }) => {\r\n    const percentChange = previousValue \r\n      ? ((value - previousValue) / previousValue) * 100\r\n      : 0;\r\n      \r\n    if (Math.abs(percentChange) < 0.1) {\r\n      return null;\r\n    }\r\n    \r\n    const isPositive = percentChange > 0;\r\n    \r\n    return (\r\n      <Box \r\n        component=\"span\" \r\n        sx={{ \r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          color: isPositive ? colors.success : colors.error,\r\n          ml: 1,\r\n          fontSize: '0.875rem'\r\n        }}\r\n      >\r\n        {isPositive ? <TrendUpIcon fontSize=\"small\" /> : <TrendDownIcon fontSize=\"small\" />}\r\n        {Math.abs(percentChange).toFixed(1)}%\r\n      </Box>\r\n    );\r\n  };\r\n  \r\n  // Mock data generation\r\n  const generateMockData = (timeRange) => {\r\n    let days = 7;\r\n    \r\n    switch (timeRange) {\r\n      case '30days':\r\n        days = 30;\r\n        break;\r\n      case '90days':\r\n        days = 90;\r\n        break;\r\n      case '7days':\r\n      default:\r\n        days = 7;\r\n        break;\r\n    }\r\n    \r\n    // User activity chart data\r\n    const activityData = Array.from({ length: days }).map((_, i) => {\r\n      const date = new Date();\r\n      date.setDate(date.getDate() - (days - i - 1));\r\n      \r\n      return {\r\n        date: date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),\r\n        activeUsers: Math.floor(Math.random() * 50) + 20,\r\n        newUsers: Math.floor(Math.random() * 10) + 1,\r\n        sessions: Math.floor(Math.random() * 100) + 50\r\n      };\r\n    });\r\n    \r\n    // Generate summary metrics\r\n    const currentActiveUsers = activityData.reduce((sum, day) => sum + day.activeUsers, 0);\r\n    const currentNewUsers = activityData.reduce((sum, day) => sum + day.newUsers, 0);\r\n    \r\n    // Previous period for comparison\r\n    const previousActiveUsers = Math.floor(currentActiveUsers * (Math.random() * 0.4 + 0.8));\r\n    const previousNewUsers = Math.floor(currentNewUsers * (Math.random() * 0.4 + 0.8));\r\n    \r\n    // Feedback data\r\n    const feedbackData = [\r\n      { category: 'UI/UX', count: Math.floor(Math.random() * 30) + 15 },\r\n      { category: 'Features', count: Math.floor(Math.random() * 40) + 20 },\r\n      { category: 'Performance', count: Math.floor(Math.random() * 25) + 10 },\r\n      { category: 'Bugs', count: Math.floor(Math.random() * 20) + 5 },\r\n      { category: 'Other', count: Math.floor(Math.random() * 15) + 5 },\r\n    ];\r\n    \r\n    // Feature usage data\r\n    const featureUsageData = [\r\n      { name: 'Route Planning', usage: Math.floor(Math.random() * 80) + 50 },\r\n      { name: 'Map Exploration', usage: Math.floor(Math.random() * 70) + 40 },\r\n      { name: 'Itinerary Builder', usage: Math.floor(Math.random() * 60) + 30 },\r\n      { name: 'Recommendations', usage: Math.floor(Math.random() * 50) + 30 },\r\n      { name: 'Sharing', usage: Math.floor(Math.random() * 40) + 20 },\r\n    ];\r\n    \r\n    // Device breakdown\r\n    const deviceBreakdown = [\r\n      { name: 'Desktop', value: Math.floor(Math.random() * 60) + 30 },\r\n      { name: 'Mobile', value: Math.floor(Math.random() * 40) + 20 },\r\n      { name: 'Tablet', value: Math.floor(Math.random() * 20) + 10 },\r\n    ];\r\n    \r\n    // Top requested features\r\n    const requestedFeatures = [\r\n      { \r\n        id: 1, \r\n        feature: 'Offline Maps Support', \r\n        votes: Math.floor(Math.random() * 40) + 30,\r\n        status: 'planned'\r\n      },\r\n      { \r\n        id: 2, \r\n        feature: 'Dark Mode', \r\n        votes: Math.floor(Math.random() * 35) + 25,\r\n        status: 'in_progress'\r\n      },\r\n      { \r\n        id: 3, \r\n        feature: 'Route Sharing', \r\n        votes: Math.floor(Math.random() * 30) + 20,\r\n        status: 'planned'\r\n      },\r\n      { \r\n        id: 4, \r\n        feature: 'Weather Integration', \r\n        votes: Math.floor(Math.random() * 25) + 15,\r\n        status: 'under_review'\r\n      },\r\n      { \r\n        id: 5, \r\n        feature: 'Translation Support', \r\n        votes: Math.floor(Math.random() * 20) + 10,\r\n        status: 'under_review'\r\n      },\r\n    ];\r\n    \r\n    // Geography data (country distribution)\r\n    const geoData = [\r\n      { country: 'United States', users: Math.floor(Math.random() * 100) + 50 },\r\n      { country: 'United Kingdom', users: Math.floor(Math.random() * 50) + 20 },\r\n      { country: 'Canada', users: Math.floor(Math.random() * 40) + 15 },\r\n      { country: 'Australia', users: Math.floor(Math.random() * 30) + 10 },\r\n      { country: 'Germany', users: Math.floor(Math.random() * 25) + 10 },\r\n      { country: 'France', users: Math.floor(Math.random() * 20) + 10 },\r\n      { country: 'Japan', users: Math.floor(Math.random() * 15) + 5 },\r\n      { country: 'Other', users: Math.floor(Math.random() * 40) + 20 },\r\n    ];\r\n    \r\n    return {\r\n      activityData,\r\n      feedbackData,\r\n      featureUsageData,\r\n      deviceBreakdown,\r\n      requestedFeatures,\r\n      geoData,\r\n      summary: {\r\n        activeUsers: {\r\n          current: currentActiveUsers,\r\n          previous: previousActiveUsers\r\n        },\r\n        newUsers: {\r\n          current: currentNewUsers,\r\n          previous: previousNewUsers\r\n        },\r\n        feedbackCount: feedbackData.reduce((sum, item) => sum + item.count, 0),\r\n        surveyResponses: Math.floor(Math.random() * 200) + 50,\r\n        avgSessionDuration: Math.floor(Math.random() * 15) + 5, // minutes\r\n      }\r\n    };\r\n  };\r\n  \r\n  // Get status color\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'planned':\r\n        return colors.info;\r\n      case 'in_progress':\r\n        return colors.success;\r\n      case 'under_review':\r\n        return colors.warning;\r\n      case 'completed':\r\n        return colors.primary;\r\n      default:\r\n        return theme.palette.grey[500];\r\n    }\r\n  };\r\n  \r\n  // Get status label\r\n  const getStatusLabel = (status) => {\r\n    switch (status) {\r\n      case 'planned':\r\n        return 'Planned';\r\n      case 'in_progress':\r\n        return 'In Progress';\r\n      case 'under_review':\r\n        return 'Under Review';\r\n      case 'completed':\r\n        return 'Completed';\r\n      default:\r\n        return status;\r\n    }\r\n  };\r\n\r\n  const handleShowSessionRecordings = () => {\r\n    setShowSessionRecordings(true);\r\n    setShowHeatmaps(false);\r\n  };\r\n\r\n  const handleShowHeatmaps = () => {\r\n    setShowHeatmaps(true);\r\n    setShowSessionRecordings(false);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setShowSessionRecordings(false);\r\n    setShowHeatmaps(false);\r\n  };\r\n\r\n  if (showSessionRecordings) {\r\n    return <SessionRecording onBack={handleBack} />;\r\n  }\r\n\r\n  if (showHeatmaps) {\r\n    return <HeatmapVisualization onBack={handleBack} />;\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      {/* Dashboard Header */}\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          Beta Analytics Dashboard\r\n        </Typography>\r\n        \r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          {/* Time Range Selector */}\r\n          <FormControl size=\"small\" sx={{ minWidth: 120, mr: 2 }}>\r\n            <InputLabel id=\"time-range-label\">Time Range</InputLabel>\r\n            <Select\r\n              labelId=\"time-range-label\"\r\n              id=\"time-range-select\"\r\n              value={timeRange}\r\n              label=\"Time Range\"\r\n              onChange={handleTimeRangeChange}\r\n            >\r\n              <MenuItem value=\"7days\">Last 7 Days</MenuItem>\r\n              <MenuItem value=\"30days\">Last 30 Days</MenuItem>\r\n              <MenuItem value=\"90days\">Last 90 Days</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          \r\n          {/* Refresh Button */}\r\n          <Button\r\n            startIcon={<RefreshIcon />}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            onClick={loadAnalytics}\r\n            disabled={loading}\r\n          >\r\n            Refresh\r\n          </Button>\r\n          \r\n          {/* Export Button */}\r\n          <Button\r\n            startIcon={<DownloadIcon />}\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            sx={{ ml: 1 }}\r\n            disabled={loading}\r\n          >\r\n            Export\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      \r\n      {/* UX Audit Tools */}\r\n      <Paper elevation={1} sx={{ p: 2, mb: 3 }}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          UX Audit Tools\r\n        </Typography>\r\n        <Box sx={{ display: 'flex', gap: 2 }}>\r\n          <Button \r\n            variant=\"outlined\" \r\n            startIcon={<VideoLibrary />}\r\n            onClick={handleShowSessionRecordings}\r\n          >\r\n            Session Recordings\r\n          </Button>\r\n          <Button \r\n            variant=\"outlined\" \r\n            startIcon={<Whatshot />}\r\n            onClick={handleShowHeatmaps}\r\n          >\r\n            Heatmap Visualization\r\n          </Button>\r\n        </Box>\r\n      </Paper>\r\n      \r\n      {/* Error message */}\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      \r\n      {/* Loading State */}\r\n      {loading ? (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', py: 8 }}>\r\n          <CircularProgress size={60} />\r\n        </Box>\r\n      ) : dashboardData ? (\r\n        <>\r\n          {/* Summary Cards */}\r\n          <Grid container spacing={3} sx={{ mb: 4 }}>\r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">\r\n                    Active Users\r\n                  </Typography>\r\n                  <Box sx={{ display: 'flex', alignItems: 'baseline' }}>\r\n                    <Typography variant=\"h4\" component=\"div\">\r\n                      {formatNumber(dashboardData.summary.activeUsers.current)}\r\n                    </Typography>\r\n                    <TrendIndicator \r\n                      value={dashboardData.summary.activeUsers.current} \r\n                      previousValue={dashboardData.summary.activeUsers.previous} \r\n                    />\r\n                  </Box>\r\n                  <Typography variant=\"caption\" color=\"textSecondary\">\r\n                    vs. previous period\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">\r\n                    New Users\r\n                  </Typography>\r\n                  <Box sx={{ display: 'flex', alignItems: 'baseline' }}>\r\n                    <Typography variant=\"h4\" component=\"div\">\r\n                      {formatNumber(dashboardData.summary.newUsers.current)}\r\n                    </Typography>\r\n                    <TrendIndicator \r\n                      value={dashboardData.summary.newUsers.current} \r\n                      previousValue={dashboardData.summary.newUsers.previous} \r\n                    />\r\n                  </Box>\r\n                  <Typography variant=\"caption\" color=\"textSecondary\">\r\n                    vs. previous period\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">\r\n                    Feedback Submissions\r\n                  </Typography>\r\n                  <Typography variant=\"h4\" component=\"div\">\r\n                    {formatNumber(dashboardData.summary.feedbackCount)}\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"textSecondary\">\r\n                    across all categories\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={6} md={3}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography color=\"textSecondary\" gutterBottom variant=\"body2\">\r\n                    Avg. Session Duration\r\n                  </Typography>\r\n                  <Typography variant=\"h4\" component=\"div\">\r\n                    {dashboardData.summary.avgSessionDuration} min\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"textSecondary\">\r\n                    time spent per session\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n          \r\n          {/* Tabs for different analytics views */}\r\n          <Paper sx={{ mb: 4 }}>\r\n            <Tabs\r\n              value={activeTab}\r\n              onChange={handleTabChange}\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              variant=\"fullWidth\"\r\n            >\r\n              <Tab icon={<BarChart />} label=\"Overview\" />\r\n              <Tab icon={<Person />} label=\"User Activity\" />\r\n              <Tab icon={<Devices />} label=\"Devices\" />\r\n              <Tab icon={<Ballot />} label=\"Feedback\" />\r\n            </Tabs>\r\n            \r\n            {/* Tab Content */}\r\n            <Box sx={{ p: 3 }}>\r\n              {/* Overview Tab */}\r\n              {activeTab === 0 && (\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      User Activity Trends\r\n                    </Typography>\r\n                    <Paper variant=\"outlined\" sx={{ p: 2, height: 400 }}>\r\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                        <LineChart\r\n                          data={dashboardData.activityData}\r\n                          margin={{ top: 20, right: 30, left: 20, bottom: 10 }}\r\n                        >\r\n                          <CartesianGrid strokeDasharray=\"3 3\" />\r\n                          <XAxis \r\n                            dataKey=\"date\" \r\n                            tick={{ fontSize: 12 }}\r\n                          />\r\n                          <YAxis tick={{ fontSize: 12 }} />\r\n                          <RechartsTooltip />\r\n                          <Legend />\r\n                          <Line\r\n                            type=\"monotone\"\r\n                            dataKey=\"activeUsers\"\r\n                            name=\"Active Users\"\r\n                            stroke={colors.primary}\r\n                            activeDot={{ r: 8 }}\r\n                            strokeWidth={2}\r\n                          />\r\n                          <Line\r\n                            type=\"monotone\"\r\n                            dataKey=\"newUsers\"\r\n                            name=\"New Users\"\r\n                            stroke={colors.secondary}\r\n                            strokeWidth={2}\r\n                          />\r\n                          <Line\r\n                            type=\"monotone\"\r\n                            dataKey=\"sessions\"\r\n                            name=\"Sessions\"\r\n                            stroke={colors.info}\r\n                            strokeWidth={2}\r\n                          />\r\n                        </LineChart>\r\n                      </ResponsiveContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Device Distribution\r\n                    </Typography>\r\n                    <Paper variant=\"outlined\" sx={{ p: 2, height: 300 }}>\r\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                        <PieChart>\r\n                          <Pie\r\n                            data={dashboardData.deviceBreakdown}\r\n                            cx=\"50%\"\r\n                            cy=\"50%\"\r\n                            labelLine={false}\r\n                            outerRadius={80}\r\n                            fill=\"#8884d8\"\r\n                            dataKey=\"value\"\r\n                            nameKey=\"name\"\r\n                            label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\r\n                          >\r\n                            {dashboardData.deviceBreakdown.map((entry, index) => (\r\n                              <Cell \r\n                                key={`cell-${index}`} \r\n                                fill={colors.pieColors[index % colors.pieColors.length]} \r\n                              />\r\n                            ))}\r\n                          </Pie>\r\n                          <RechartsTooltip />\r\n                          <Legend />\r\n                        </PieChart>\r\n                      </ResponsiveContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Geographic Distribution\r\n                    </Typography>\r\n                    <Paper variant=\"outlined\" sx={{ p: 2, height: 300 }}>\r\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                        <RechartsBarChart\r\n                          data={dashboardData.geoData}\r\n                          layout=\"vertical\"\r\n                          margin={{ top: 5, right: 30, left: 70, bottom: 5 }}\r\n                        >\r\n                          <CartesianGrid strokeDasharray=\"3 3\" />\r\n                          <XAxis type=\"number\" />\r\n                          <YAxis \r\n                            dataKey=\"country\" \r\n                            type=\"category\" \r\n                            tick={{ fontSize: 12 }}\r\n                          />\r\n                          <RechartsTooltip />\r\n                          <RechartsBarChart.Bar \r\n                            dataKey=\"users\" \r\n                            name=\"Users\" \r\n                            fill={colors.primary}\r\n                          />\r\n                        </RechartsBarChart>\r\n                      </ResponsiveContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n              \r\n              {/* User Activity Tab */}\r\n              {activeTab === 1 && (\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      User Activity Trends\r\n                    </Typography>\r\n                    <Paper variant=\"outlined\" sx={{ p: 2, height: 400 }}>\r\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                        <LineChart\r\n                          data={dashboardData.activityData}\r\n                          margin={{ top: 20, right: 30, left: 20, bottom: 10 }}\r\n                        >\r\n                          <CartesianGrid strokeDasharray=\"3 3\" />\r\n                          <XAxis \r\n                            dataKey=\"date\" \r\n                            tick={{ fontSize: 12 }}\r\n                          />\r\n                          <YAxis tick={{ fontSize: 12 }} />\r\n                          <RechartsTooltip />\r\n                          <Legend />\r\n                          <Line\r\n                            type=\"monotone\"\r\n                            dataKey=\"activeUsers\"\r\n                            name=\"Active Users\"\r\n                            stroke={colors.primary}\r\n                            activeDot={{ r: 8 }}\r\n                            strokeWidth={2}\r\n                          />\r\n                          <Line\r\n                            type=\"monotone\"\r\n                            dataKey=\"newUsers\"\r\n                            name=\"New Users\"\r\n                            stroke={colors.secondary}\r\n                            strokeWidth={2}\r\n                          />\r\n                          <Line\r\n                            type=\"monotone\"\r\n                            dataKey=\"sessions\"\r\n                            name=\"Sessions\"\r\n                            stroke={colors.info}\r\n                            strokeWidth={2}\r\n                          />\r\n                        </LineChart>\r\n                      </ResponsiveContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Device Distribution\r\n                    </Typography>\r\n                    <Paper variant=\"outlined\" sx={{ p: 2, height: 300 }}>\r\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                        <PieChart>\r\n                          <Pie\r\n                            data={dashboardData.deviceBreakdown}\r\n                            cx=\"50%\"\r\n                            cy=\"50%\"\r\n                            labelLine={false}\r\n                            outerRadius={80}\r\n                            fill=\"#8884d8\"\r\n                            dataKey=\"value\"\r\n                            nameKey=\"name\"\r\n                            label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\r\n                          >\r\n                            {dashboardData.deviceBreakdown.map((entry, index) => (\r\n                              <Cell \r\n                                key={`cell-${index}`} \r\n                                fill={colors.pieColors[index % colors.pieColors.length]} \r\n                              />\r\n                            ))}\r\n                          </Pie>\r\n                          <RechartsTooltip />\r\n                          <Legend />\r\n                        </PieChart>\r\n                      </ResponsiveContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Geographic Distribution\r\n                    </Typography>\r\n                    <Paper variant=\"outlined\" sx={{ p: 2, height: 300 }}>\r\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                        <RechartsBarChart\r\n                          data={dashboardData.geoData}\r\n                          layout=\"vertical\"\r\n                          margin={{ top: 5, right: 30, left: 70, bottom: 5 }}\r\n                        >\r\n                          <CartesianGrid strokeDasharray=\"3 3\" />\r\n                          <XAxis type=\"number\" />\r\n                          <YAxis \r\n                            dataKey=\"country\" \r\n                            type=\"category\" \r\n                            tick={{ fontSize: 12 }}\r\n                          />\r\n                          <RechartsTooltip />\r\n                          <RechartsBarChart.Bar \r\n                            dataKey=\"users\" \r\n                            name=\"Users\" \r\n                            fill={colors.primary}\r\n                          />\r\n                        </RechartsBarChart>\r\n                      </ResponsiveContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n              \r\n              {/* Devices Tab */}\r\n              {activeTab === 2 && (\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Device Distribution\r\n                    </Typography>\r\n                    <Paper variant=\"outlined\" sx={{ p: 2, height: 400 }}>\r\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                        <PieChart>\r\n                          <Pie\r\n                            data={dashboardData.deviceBreakdown}\r\n                            cx=\"50%\"\r\n                            cy=\"50%\"\r\n                            labelLine={false}\r\n                            outerRadius={80}\r\n                            fill=\"#8884d8\"\r\n                            dataKey=\"value\"\r\n                            nameKey=\"name\"\r\n                            label={({ name, percent }) => `${name}: ${(percent * 100).toFixed(0)}%`}\r\n                          >\r\n                            {dashboardData.deviceBreakdown.map((entry, index) => (\r\n                              <Cell \r\n                                key={`cell-${index}`} \r\n                                fill={colors.pieColors[index % colors.pieColors.length]} \r\n                              />\r\n                            ))}\r\n                          </Pie>\r\n                          <RechartsTooltip />\r\n                          <Legend />\r\n                        </PieChart>\r\n                      </ResponsiveContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Geographic Distribution\r\n                    </Typography>\r\n                    <Paper variant=\"outlined\" sx={{ p: 2, height: 300 }}>\r\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                        <RechartsBarChart\r\n                          data={dashboardData.geoData}\r\n                          layout=\"vertical\"\r\n                          margin={{ top: 5, right: 30, left: 70, bottom: 5 }}\r\n                        >\r\n                          <CartesianGrid strokeDasharray=\"3 3\" />\r\n                          <XAxis type=\"number\" />\r\n                          <YAxis \r\n                            dataKey=\"country\" \r\n                            type=\"category\" \r\n                            tick={{ fontSize: 12 }}\r\n                          />\r\n                          <RechartsTooltip />\r\n                          <RechartsBarChart.Bar \r\n                            dataKey=\"users\" \r\n                            name=\"Users\" \r\n                            fill={colors.primary}\r\n                          />\r\n                        </RechartsBarChart>\r\n                      </ResponsiveContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n              \r\n              {/* Feedback Tab */}\r\n              {activeTab === 3 && (\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Feedback by Category\r\n                    </Typography>\r\n                    <Paper variant=\"outlined\" sx={{ p: 2, height: 300 }}>\r\n                      <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                        <PieChart>\r\n                          <Pie\r\n                            data={dashboardData.feedbackData}\r\n                            cx=\"50%\"\r\n                            cy=\"50%\"\r\n                            labelLine={false}\r\n                            outerRadius={80}\r\n                            fill=\"#8884d8\"\r\n                            dataKey=\"count\"\r\n                            nameKey=\"category\"\r\n                            label={({ category, percent }) => `${category}: ${(percent * 100).toFixed(0)}%`}\r\n                          >\r\n                            {dashboardData.feedbackData.map((entry, index) => (\r\n                              <Cell \r\n                                key={`cell-${index}`} \r\n                                fill={colors.pieColors[index % colors.pieColors.length]} \r\n                              />\r\n                            ))}\r\n                          </Pie>\r\n                          <RechartsTooltip />\r\n                          <Legend />\r\n                        </PieChart>\r\n                      </ResponsiveContainer>\r\n                    </Paper>\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12} md={6}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Top Requested Features\r\n                    </Typography>\r\n                    <TableContainer component={Paper} variant=\"outlined\" sx={{ height: 300 }}>\r\n                      <Table size=\"small\">\r\n                        <TableHead>\r\n                          <TableRow>\r\n                            <TableCell>Feature Request</TableCell>\r\n                            <TableCell align=\"center\">Votes</TableCell>\r\n                            <TableCell align=\"right\">Status</TableCell>\r\n                          </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                          {dashboardData.requestedFeatures.map((row) => (\r\n                            <TableRow key={row.id} hover>\r\n                              <TableCell>{row.feature}</TableCell>\r\n                              <TableCell align=\"center\">{row.votes}</TableCell>\r\n                              <TableCell align=\"right\">\r\n                                <Box sx={{ \r\n                                  display: 'inline-block', \r\n                                  bgcolor: getStatusColor(row.status),\r\n                                  color: '#fff',\r\n                                  px: 1.5,\r\n                                  py: 0.5,\r\n                                  borderRadius: 1,\r\n                                  fontSize: '0.75rem'\r\n                                }}>\r\n                                  {getStatusLabel(row.status)}\r\n                                </Box>\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          ))}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </TableContainer>\r\n                  </Grid>\r\n                  \r\n                  <Grid item xs={12}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Feedback Sentiment Analysis\r\n                    </Typography>\r\n                    <Paper variant=\"outlined\" sx={{ p: 2, height: 300 }}>\r\n                      <Box sx={{ \r\n                        display: 'flex', \r\n                        justifyContent: 'center', \r\n                        alignItems: 'center',\r\n                        flexDirection: 'column',\r\n                        height: '100%',\r\n                        color: 'text.secondary'\r\n                      }}>\r\n                        <Typography variant=\"body1\" sx={{ mb: 2 }}>\r\n                          Sentiment Analysis Coming Soon\r\n                        </Typography>\r\n                        <Typography variant=\"body2\">\r\n                          This feature will analyze the sentiment of user feedback to identify trends in user satisfaction.\r\n                        </Typography>\r\n                      </Box>\r\n                    </Paper>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n            </Box>\r\n          </Paper>\r\n          \r\n          {/* Notes and Disclaimers */}\r\n          <Paper variant=\"outlined\" sx={{ p: 2, mb: 2 }}>\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              <InfoIcon fontSize=\"small\" sx={{ verticalAlign: 'middle', mr: 1 }} />\r\n              This dashboard shows analytics for the beta program. Data is updated daily. For real-time analytics, please use the export feature.\r\n            </Typography>\r\n          </Paper>\r\n        </>\r\n      ) : (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', py: 8 }}>\r\n          <Typography>No data available</Typography>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AnalyticsDashboard; ","import React, { useState, useEffect, lazy, Suspense } from 'react';\r\nimport { \r\n  Container, \r\n  Box, \r\n  Typography, \r\n  Paper, \r\n  Grid,\r\n  Button,\r\n  Tabs,\r\n  Tab,\r\n  CircularProgress,\r\n  Alert,\r\n  useMediaQuery,\r\n  Chip\r\n} from '@mui/material';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport RegistrationForm from './RegistrationForm';\r\nimport OnboardingFlow from './OnboardingFlow';\r\nimport authService from '../services/AuthService';\r\nimport { Role, Permission, AccessControl } from './auth';\r\nimport { PERMISSIONS, ROLES } from '../services/PermissionsService';\r\nimport { useCurrentPermissions } from '../hooks';\r\nimport axios from 'axios';\r\nimport UserPermissionsCard from './user/UserPermissionsCard';\r\n// Import the feature request components\r\nimport { FeatureRequestBoard } from './feature-request';\r\n// Import the community components\r\nimport { BetaCommunityForum } from './community';\r\n// Placeholder imports for components to be implemented later\r\n// import FeedbackWidget from './FeedbackWidget';\r\n// import SurveyList from './SurveyList';\r\nimport { AnalyticsDashboard } from './analytics';\r\n\r\n// Lazy load FeedbackWidget and AnalyticsDashboard to reduce initial bundle size\r\nconst FeedbackWidget = lazy(() => import('./feedback/FeedbackWidget'));\r\n\r\n/**\r\n * Beta Portal main component\r\n * Provides the main interface for beta testers to register, provide feedback,\r\n * participate in surveys, and view their dashboard.\r\n * Uses RBAC components for conditional rendering.\r\n */\r\nconst BetaPortal = () => {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\r\n  const { isAdmin, isModerator, isLoading: permissionsLoading } = useCurrentPermissions();\r\n  \r\n  // State\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [error, setError] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [showOnboarding, setShowOnboarding] = useState(false);\r\n  const [onboardingCode, setOnboardingCode] = useState('');\r\n  const [isAdminState, setIsAdmin] = useState(false);\r\n\r\n  // Configure axios to include the auth token in requests\r\n  useEffect(() => {\r\n    const token = authService.getToken();\r\n    if (token) {\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    } else {\r\n      delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n  }, [isAuthenticated]);\r\n\r\n  // Use AuthService to check authentication status\r\n  useEffect(() => {\r\n    const checkAuthStatus = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const userData = await authService.checkAuthStatus();\r\n        \r\n        if (userData) {\r\n          setUser(userData);\r\n          setIsAuthenticated(true);\r\n          setIsAdmin(userData.roles && userData.roles.includes('admin'));\r\n          \r\n          // Check if onboarding is needed\r\n          if (userData.needsOnboarding) {\r\n            setShowOnboarding(true);\r\n            // If user registered with a beta code, use it for onboarding\r\n            if (userData.betaCode) {\r\n              setOnboardingCode(userData.betaCode);\r\n            }\r\n          }\r\n          \r\n          // Set up authentication header\r\n          const token = authService.getToken();\r\n          if (token) {\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n          }\r\n        } else {\r\n          setIsAuthenticated(false);\r\n          setUser(null);\r\n          delete axios.defaults.headers.common['Authorization'];\r\n        }\r\n      } catch (err) {\r\n        console.error('Authentication error:', err);\r\n        setError('Failed to authenticate. Please try again.');\r\n        setIsAuthenticated(false);\r\n        setUser(null);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuthStatus();\r\n  }, []);\r\n\r\n  // Handle successful registration\r\n  const handleRegisterSuccess = (userData) => {\r\n    setUser(userData);\r\n    setIsAuthenticated(true);\r\n    setIsAdmin(userData.roles && userData.roles.includes('admin'));\r\n    \r\n    // If beta code was used during registration, pass it to onboarding\r\n    if (userData.betaCode) {\r\n      setOnboardingCode(userData.betaCode);\r\n    }\r\n    \r\n    // Show onboarding for new users\r\n    setShowOnboarding(true);\r\n  };\r\n  \r\n  // Handle onboarding completion\r\n  const handleOnboardingComplete = async (data) => {\r\n    try {\r\n      // Update user data after onboarding\r\n      const updatedUser = {\r\n        ...user,\r\n        needsOnboarding: false,\r\n        profile: data.profile,\r\n        preferences: data.preferences\r\n      };\r\n      \r\n      setUser(updatedUser);\r\n      setShowOnboarding(false);\r\n      \r\n      // Refresh user data from server\r\n      const refreshedUser = await authService.refreshUserData();\r\n      if (refreshedUser) {\r\n        setUser(refreshedUser);\r\n      }\r\n    } catch (err) {\r\n      console.error('Error updating user after onboarding:', err);\r\n      // Still hide onboarding flow even if there's an error\r\n      setShowOnboarding(false);\r\n    }\r\n  };\r\n\r\n  // Handle tab change\r\n  const handleTabChange = (event, newValue) => {\r\n    setActiveTab(newValue);\r\n  };\r\n\r\n  // Handle logout\r\n  const handleLogout = async () => {\r\n    try {\r\n      await authService.logout();\r\n      setIsAuthenticated(false);\r\n      setUser(null);\r\n      setActiveTab(0);\r\n      delete axios.defaults.headers.common['Authorization'];\r\n    } catch (err) {\r\n      console.error('Logout error:', err);\r\n      setError('Failed to log out. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Show loading state\r\n  if (isLoading || permissionsLoading) {\r\n    return (\r\n      <Container maxWidth=\"md\" sx={{ py: 8, textAlign: 'center' }}>\r\n        <CircularProgress size={60} />\r\n        <Typography variant=\"h6\" sx={{ mt: 2 }}>\r\n          Loading Beta Portal...\r\n        </Typography>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  // Show onboarding flow for new users\r\n  if (isAuthenticated && showOnboarding) {\r\n    return (\r\n      <OnboardingFlow \r\n        initialCode={onboardingCode}\r\n        onComplete={handleOnboardingComplete}\r\n      />\r\n    );\r\n  }\r\n\r\n  // Main portal content\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Box sx={{ my: 4 }}>\r\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\">\r\n          TourGuideAI Beta Program\r\n        </Typography>\r\n        \r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ mb: 3 }}>{error}</Alert>\r\n        )}\r\n\r\n        {isAuthenticated ? (\r\n          // Authenticated user view\r\n          <Box>\r\n            <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\r\n              <Box>\r\n                <Typography variant=\"h6\">\r\n                  Welcome, {user.name || user.email}\r\n                </Typography>\r\n                \r\n                <Box sx={{ mt: 1 }}>\r\n                  <Role role={ROLES.ADMIN}>\r\n                    <Chip \r\n                      label=\"Admin\" \r\n                      color=\"error\" \r\n                      size=\"small\" \r\n                      sx={{ mr: 1 }}\r\n                    />\r\n                  </Role>\r\n                  \r\n                  <Role role={ROLES.MODERATOR}>\r\n                    <Chip \r\n                      label=\"Moderator\" \r\n                      color=\"warning\" \r\n                      size=\"small\" \r\n                      sx={{ mr: 1 }}\r\n                    />\r\n                  </Role>\r\n                  \r\n                  <Chip \r\n                    label=\"Beta Tester\" \r\n                    color=\"primary\" \r\n                    size=\"small\" \r\n                  />\r\n                </Box>\r\n              </Box>\r\n              \r\n              <Box>\r\n                <AccessControl role={[ROLES.ADMIN, ROLES.MODERATOR]}>\r\n                  <Button \r\n                    variant=\"outlined\" \r\n                    color=\"primary\" \r\n                    component={Link} \r\n                    to=\"/admin\" \r\n                    sx={{ mr: 2 }}\r\n                  >\r\n                    Admin Panel\r\n                  </Button>\r\n                </AccessControl>\r\n                \r\n                <Button variant=\"outlined\" color=\"primary\" onClick={handleLogout}>\r\n                  Logout\r\n                </Button>\r\n              </Box>\r\n            </Box>\r\n\r\n            <Paper elevation={3} sx={{ mb: 4 }}>\r\n              <Tabs \r\n                value={activeTab} \r\n                onChange={handleTabChange} \r\n                variant={isMobile ? \"scrollable\" : \"fullWidth\"}\r\n                scrollButtons={isMobile ? \"auto\" : false}\r\n                centered={!isMobile}\r\n              >\r\n                <Tab label=\"Dashboard\" />\r\n                <Tab label=\"Provide Feedback\" />\r\n                <Tab label=\"Surveys\" />\r\n                <Tab label=\"Feature Requests\" />\r\n                <Tab label=\"Community\" />\r\n                \r\n                {isAdmin && <Tab label=\"Analytics\" />}\r\n                \r\n                <Tab label=\"Resources\" />\r\n              </Tabs>\r\n\r\n              <Box sx={{ p: 3 }}>\r\n                {activeTab === 0 && (\r\n                  <Box>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Beta Tester Dashboard\r\n                    </Typography>\r\n                    <Grid container spacing={3}>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Paper elevation={2} sx={{ p: 2 }}>\r\n                          <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                            User Information\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            <strong>Name:</strong> {user.name}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            <strong>Email:</strong> {user.email}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            <strong>Role:</strong> {user.role}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            <strong>Member Since:</strong> {new Date(user.registrationDate).toLocaleDateString()}\r\n                          </Typography>\r\n                        </Paper>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Paper elevation={2} sx={{ p: 2 }}>\r\n                          <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                            Beta Activity\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            <strong>Feedback Submitted:</strong> 0\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            <strong>Surveys Completed:</strong> 0\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            <strong>Features Tested:</strong> 0\r\n                          </Typography>\r\n                        </Paper>\r\n                      </Grid>\r\n                      \r\n                      <Grid item xs={12}>\r\n                        <UserPermissionsCard />\r\n                      </Grid>\r\n                      \r\n                      <AccessControl role={[ROLES.ADMIN, ROLES.MODERATOR]}>\r\n                        <Grid item xs={12}>\r\n                          <Paper elevation={2} sx={{ p: 2, bgcolor: isAdmin ? 'error.50' : 'warning.50' }}>\r\n                            <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                              Administrative Tools\r\n                            </Typography>\r\n                            <Box sx={{ mt: 1, display: 'flex', gap: 2 }}>\r\n                              <Permission permission={PERMISSIONS.CREATE_INVITE}>\r\n                                <Button \r\n                                  variant=\"contained\" \r\n                                  size=\"small\" \r\n                                  component={Link} \r\n                                  to=\"/admin/invite-codes\"\r\n                                >\r\n                                  Manage Invite Codes\r\n                                </Button>\r\n                              </Permission>\r\n                              \r\n                              <Role role={ROLES.ADMIN}>\r\n                                <Button \r\n                                  variant=\"contained\" \r\n                                  color=\"error\"\r\n                                  size=\"small\" \r\n                                  component={Link} \r\n                                  to=\"/admin\"\r\n                                >\r\n                                  Admin Dashboard\r\n                                </Button>\r\n                              </Role>\r\n                            </Box>\r\n                          </Paper>\r\n                        </Grid>\r\n                      </AccessControl>\r\n                    </Grid>\r\n                  </Box>\r\n                )}\r\n                {activeTab === 1 && (\r\n                  <Box>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Provide Your Feedback\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" paragraph>\r\n                      Your feedback is essential for improving TourGuideAI. Please share your thoughts, report bugs, or suggest new features.\r\n                    </Typography>\r\n                    \r\n                    <Grid container spacing={3}>\r\n                      <Grid item xs={12}>\r\n                        <Paper elevation={2} sx={{ p: 3 }}>\r\n                          <Suspense fallback={<CircularProgress />}>\r\n                            <FeedbackWidget />\r\n                          </Suspense>\r\n                        </Paper>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                )}\r\n                {activeTab === 2 && (\r\n                  <Typography variant=\"body1\">\r\n                    Surveys will be implemented in subsequent tasks.\r\n                  </Typography>\r\n                )}\r\n                {activeTab === 3 && (\r\n                  <Box>\r\n                    <Typography variant=\"body1\" paragraph>\r\n                      Request new features or vote on existing requests to help us prioritize development.\r\n                    </Typography>\r\n                    <FeatureRequestBoard featureService={{}} />\r\n                  </Box>\r\n                )}\r\n                {activeTab === 4 && (\r\n                  <Box sx={{ my: 3 }}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Connect with other beta testers\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n                      Discuss features, share ideas, and connect with other beta testers in our community forum.\r\n                    </Typography>\r\n                    <BetaCommunityForum />\r\n                  </Box>\r\n                )}\r\n                {activeTab === 5 && isAdmin && (\r\n                  <Box sx={{ my: 3 }}>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Beta Program Analytics\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n                      View insights and metrics about the beta program, including user activity, feature usage, and feedback trends.\r\n                    </Typography>\r\n                    <AnalyticsDashboard />\r\n                  </Box>\r\n                )}\r\n                {activeTab === (\r\n                  isAdmin || isModerator ? 6 : 5\r\n                ) && (\r\n                  <Box>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      Beta Program Resources\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" paragraph>\r\n                      Access documentation, guides, and resources for the beta program.\r\n                    </Typography>\r\n                    \r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Paper elevation={2} sx={{ p: 2 }}>\r\n                          <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                            Getting Started\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" paragraph>\r\n                            A guide to help you get started with TourGuideAI's beta program.\r\n                          </Typography>\r\n                          <Button size=\"small\" variant=\"outlined\">View Guide</Button>\r\n                        </Paper>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={6}>\r\n                        <Paper elevation={2} sx={{ p: 2 }}>\r\n                          <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                            Providing Effective Feedback\r\n                          </Typography>\r\n                          <Typography variant=\"body2\" paragraph>\r\n                            Learn how to provide feedback that helps us improve TourGuideAI.\r\n                          </Typography>\r\n                          <Button size=\"small\" variant=\"outlined\">View Guide</Button>\r\n                        </Paper>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            </Paper>\r\n          </Box>\r\n        ) : (\r\n          // Non-authenticated view - Registration Form\r\n          <Box sx={{ mt: 4 }}>\r\n            <Paper elevation={3} sx={{ p: 4 }}>\r\n              <Typography variant=\"h5\" component=\"h2\" gutterBottom align=\"center\">\r\n                Join Our Beta Program\r\n              </Typography>\r\n              <Typography variant=\"body1\" paragraph align=\"center\">\r\n                Get early access to TourGuideAI and help shape the future of travel planning.\r\n              </Typography>\r\n              \r\n              <RegistrationForm onSuccess={handleRegisterSuccess} />\r\n            </Paper>\r\n          </Box>\r\n        )}\r\n      </Box>\r\n      \r\n      {/* Floating feedback widget for authenticated users */}\r\n      {isAuthenticated && (\r\n        <Suspense fallback={null}>\r\n          <FeedbackWidget />\r\n        </Suspense>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BetaPortal; ","/**\r\n * Invite Code Service\r\n * Handles invite code management for beta program administrators\r\n */\r\n\r\nimport apiClient from '../../../core/api';\r\nimport { getAuthHeaders } from './AuthService';\r\nimport emailService from './EmailService';\r\n\r\n// Base path for invite code endpoints\r\nconst API_BASE_URL = '/api/invite-codes';\r\n\r\nclass InviteCodeService {\r\n  /**\r\n   * Generate a new invite code\r\n   * @param {Object} options - Options for generating the code\r\n   * @param {boolean} options.sendEmail - Whether to send an email with the code\r\n   * @param {string} options.recipientEmail - Email to send the code to\r\n   * @returns {Promise<Object>} - The generated invite code\r\n   */\r\n  async generateCode(options = {}) {\r\n    try {\r\n      const { sendEmail, recipientEmail } = options;\r\n      \r\n      const response = await apiClient.post(\r\n        `${API_BASE_URL}/generate`, \r\n        { sendEmail, recipientEmail },\r\n        { headers: getAuthHeaders() }\r\n      );\r\n      \r\n      return response.data.inviteCode;\r\n    } catch (error) {\r\n      console.error('Error generating invite code:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get all invite codes\r\n   * @returns {Promise<Array>} - List of all invite codes\r\n   */\r\n  async getAllCodes() {\r\n    try {\r\n      const response = await apiClient.get(\r\n        API_BASE_URL,\r\n        { headers: getAuthHeaders() }\r\n      );\r\n      return response.data.codes || [];\r\n    } catch (error) {\r\n      console.error('Error getting invite codes:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Validate an invite code\r\n   * @param {string} code - The code to validate\r\n   * @returns {Promise<boolean>} - Whether the code is valid\r\n   */\r\n  async validateCode(code) {\r\n    try {\r\n      const response = await apiClient.post(\r\n        `${API_BASE_URL}/validate`, \r\n        { code }\r\n      );\r\n      return response.data.valid;\r\n    } catch (error) {\r\n      console.error('Error validating invite code:', error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Invalidate an invite code\r\n   * @param {string} code - The code to invalidate\r\n   * @returns {Promise<boolean>} - Whether the operation was successful\r\n   */\r\n  async invalidateCode(code) {\r\n    try {\r\n      const response = await apiClient.post(\r\n        `${API_BASE_URL}/invalidate`, \r\n        { code },\r\n        { headers: getAuthHeaders() }\r\n      );\r\n      return !!response.data.message;\r\n    } catch (error) {\r\n      console.error('Error invalidating invite code:', error);\r\n      return false;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Send an existing invite code via email\r\n   * @param {string} code - The invite code to send\r\n   * @param {string} email - The recipient's email address\r\n   * @returns {Promise<boolean>} - Whether the email was sent successfully\r\n   */\r\n  async sendInviteCodeEmail(code, email) {\r\n    try {\r\n      const response = await apiClient.post(\r\n        `${API_BASE_URL}/send`, \r\n        { code, email },\r\n        { headers: getAuthHeaders() }\r\n      );\r\n      return response.data.emailSent;\r\n    } catch (error) {\r\n      console.error('Error sending invite code email:', error);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n\r\nexport default new InviteCodeService(); ","/**\r\n * Email Service\r\n * \r\n * Service for handling email-related operations in the beta program\r\n */\r\n\r\nimport apiClient from '../../../core/services/apiClient';\r\nimport { getAuthHeaders } from './AuthService';\r\n\r\nconst API_BASE_URL = '/api/emails';\r\n\r\n/**\r\n * Request email verification\r\n * \r\n * Resends the verification email to the current user\r\n * \r\n * @returns {Promise<Object>} Response data\r\n */\r\nconst requestEmailVerification = async () => {\r\n  try {\r\n    const response = await apiClient.post(\r\n      `${API_BASE_URL}/resend-verification`,\r\n      {},\r\n      { headers: getAuthHeaders() }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error requesting email verification:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Verify email with token\r\n * \r\n * @param {string} token - Email verification token\r\n * @returns {Promise<Object>} Response data with token and user info\r\n */\r\nconst verifyEmail = async (token) => {\r\n  try {\r\n    const response = await apiClient.post(`${API_BASE_URL}/verify`, { token });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error verifying email:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Request password reset\r\n * \r\n * @param {string} email - User's email address\r\n * @returns {Promise<Object>} Response data\r\n */\r\nconst requestPasswordReset = async (email) => {\r\n  try {\r\n    const response = await apiClient.post('/auth/request-password-reset', { email });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error requesting password reset:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Reset password with token\r\n * \r\n * @param {string} token - Password reset token\r\n * @param {string} newPassword - New password\r\n * @returns {Promise<Object>} Response data\r\n */\r\nconst resetPassword = async (token, newPassword) => {\r\n  try {\r\n    const response = await apiClient.post('/auth/reset-password', { token, newPassword });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error resetting password:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n/**\r\n * Send invitation code to email\r\n * \r\n * @param {string} code - Invitation code\r\n * @param {string} email - Recipient email address\r\n * @returns {Promise<Object>} Response data\r\n */\r\nconst sendInviteCode = async (code, email) => {\r\n  try {\r\n    const response = await apiClient.post(\r\n      `${API_BASE_URL}/send-invite`,\r\n      { email, code },\r\n      { headers: getAuthHeaders() }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error sending invitation code:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nconst emailService = {\r\n  requestEmailVerification,\r\n  verifyEmail,\r\n  requestPasswordReset,\r\n  resetPassword,\r\n  sendInviteCode\r\n};\r\n\r\nexport default emailService; "],"names":["_ref","onSuccess","formValues","setFormValues","useState","name","email","password","confirmPassword","betaCode","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","errors","setErrors","formError","setFormError","formSuccess","setFormSuccess","isSubmitting","setIsSubmitting","passwordRequirements","id","label","test","length","checkPasswordRequirements","map","req","fulfilled","handleInputChange","e","value","target","_jsxs","Box","component","onSubmit","async","preventDefault","validateForm","newErrors","trim","filter","Object","keys","authService","validateBetaCode","result","register","setTimeout","error","console","response","data","apiError","type","message","noValidate","children","_jsx","Alert","severity","sx","mb","Grid","container","spacing","item","xs","TextField","fullWidth","onChange","helperText","disabled","required","InputProps","endAdornment","InputAdornment","position","IconButton","onClick","handleTogglePasswordVisibility","edge","VisibilityOff","Visibility","renderPasswordRequirements","requirements","mt","Typography","variant","color","sm","FormHelperText","display","alignItems","handleToggleConfirmPasswordVisibility","Divider","my","inputProps","maxLength","Button","CircularProgress","size","onError","code","setCode","loading","setLoading","setError","success","setSuccess","helpOpen","setHelpOpen","validationState","setValidationState","isValidCodeFormat","codeValue","Card","maxWidth","mx","boxShadow","borderRadius","CardContent","gutterBottom","align","paragraph","action","ClearIcon","fontSize","event","apiHelpers","post","valid","userData","err","newCode","includes","indexOf","margin","placeholder","CheckCircleIcon","ErrorIcon","Collapse","in","justifyContent","startIcon","HelpIcon","minWidth","CardActions","pb","_validation$name","_validation$name2","_validation$email","_validation$email2","_validation$username","_validation$username2","initialData","onComplete","formData","setFormData","username","profilePicture","preview","setPreview","validating","setValidating","validation","setValidation","useEffect","reader","FileReader","onloadend","readAsDataURL","handleChange","prev","validateEmail","validateUsername","showFeedback","arguments","undefined","get","encodeURIComponent","available","nameValid","emailValid","usernameValid","getFieldFeedback","fieldName","CloseIcon","log","URL","createObjectURL","textAlign","Avatar","src","width","height","bgcolor","charAt","toUpperCase","gap","PhotoCameraIcon","hidden","accept","file","files","startsWith","handleRemoveProfilePicture","startAdornment","initialPreferences","defaultPreferences","notifications","push","digest","privacy","dataSharing","analyticsCollection","feedbackSharing","features","earlyAccess","betaFeatures","experimentalFeatures","preferences","setPreferences","handleToggleChange","section","checked","Paper","p","NotificationsIcon","mr","FormGroup","FormControlLabel","control","Switch","ml","FormControl","FormLabel","RadioGroup","row","Radio","SecurityIcon","Tooltip","title","InfoIcon","BetaIcon","handleRadioChange","userName","keyFeatures","icon","ChatIcon","description","MapIcon","ExploreIcon","FeedbackIcon","nextSteps","feature","index","elevation","transition","transform","fontWeight","List","step","React","ListItem","ListItemIcon","ListItemText","primary","PersonIcon","handleGetStarted","py","OnboardingPaper","styled","theme","padding","marginTop","marginBottom","shadows","shape","StepContainer","_ref2","minHeight","ButtonContainer","_ref3","_ref4","initialCode","steps","activeStep","setActiveStep","setBetaCode","userProfile","setUserProfile","displayName","jobTitle","company","bio","notificationEmail","dataSharingLevel","tourPreferences","interestTopics","validateAndProceed","inviteCodeService","validateCode","handleCodeRedemption","handleProfileSetup","profileData","handlePreferencesSetup","preferencesData","handleFinishOnboarding","updateUserProfile","onboardingCompleted","profile","Container","Stepper","Step","StepLabel","CodeRedemptionForm","UserProfileSetup","PreferencesSetup","WelcomeScreen","onFinish","getStepContent","handleBack","prevStep","handleNext","useCurrentPermissions","permissions","setPermissions","roles","setRoles","isAdmin","setIsAdmin","isModerator","setIsModerator","isBetaTester","setIsBetaTester","isLoading","setIsLoading","permissionsService","initialize","allPermissions","getAllPermissions","allRoles","getAllRoles","fetchPermissions","hasPermission","permission","hasRole","role","hasAnyPermission","permissionList","hasAllPermissions","UserPermissionsCard","groupedPermissions","forEach","category","split","verticalAlign","Chip","VerifiedUserIcon","GppBadIcon","dense","entries","perms","textTransform","LockIcon","primaryTypographyProps","API_BASE_URL","process","getFeatureRequests","filters","status","votes","userId","createdAt","updatedAt","comments","tags","implementationDifficulty","businessValue","plannedReleaseVersion","assignedDeveloper","estimatedCompletion","implementedVersion","releaseDate","request","search","toLowerCase","some","tag","sort","a","b","sortBy","Date","Error","getFeatureRequestById","requestId","mockComments","content","likes","this","find","r","c","submitFeatureRequest","requestData","newRequest","now","toISOString","Promise","resolve","voteOnFeatureRequest","isUpvote","addComment","newComment","getCategories","updateFeatureRequestStatus","statusData","getAnalytics","totalRequests","requestsByStatus","new","under_review","planned","in_progress","implemented","declined","requestsByCategory","topVotedRequests","implementationTimeline","month","count","featureService","CATEGORIES","STATUSES","REQUESTED","UNDER_REVIEW","PLANNED","IN_PROGRESS","IMPLEMENTED","REJECTED","setFeatures","activeTab","setActiveTab","showAddDialog","setShowAddDialog","setSortBy","setFilters","newFeature","setNewFeature","formErrors","setFormErrors","loadFeatures","userVoted","createdBy","avatar","handleOpenAddDialog","handleCloseAddDialog","handleFeatureInputChange","handleFilterChange","getStatusIcon","ImplementedIcon","PlannedIcon","RejectedIcon","getStatusLabel","getStatusColor","filteredFeatures","sortedFeatures","Dialog","open","onClose","DialogTitle","DialogContent","InputLabel","Select","labelId","MenuItem","onKeyUp","endsWith","slice","flexWrap","onDelete","t","handleRemoveTag","multiline","rows","DialogActions","mockNewFeature","AddIcon","borderBottom","borderColor","Tabs","handleTabChange","newValue","Tab","FilterIcon","values","top","right","zIndex","flexDirection","borderRight","featureId","handleVote","ArrowUpIcon","LabelIcon","alt","dateString","toLocaleDateString","year","day","CommentIcon","BetaCommunityForum","discussions","setDiscussions","searchQuery","setSearchQuery","sortOption","setSortOption","menuAnchorEl","setMenuAnchorEl","selectedDiscussion","setSelectedDiscussion","showCreateDialog","setShowCreateDialog","newDiscussion","setNewDiscussion","loadDiscussions","author","upvotes","commentCount","pinned","bookmarked","handleMenuClose","handleBookmark","discussionId","disc","handleSortChange","option","handleCreateDialogOpen","handleCreateDialogClose","handleNewDiscussionChange","filteredDiscussions","discussion","query","sortedDiscussions","handleCreateDiscussion","newDiscussionObj","md","SearchIcon","endIcon","SortIcon","currentTarget","Menu","anchorEl","Boolean","border","handleMenuOpen","MoreVertIcon","ListItemAvatar","ThumbUpIcon","handleUpvote","BookmarkedIcon","BookmarkIcon","mockData","userActivity","date","featureUsage","usage","growth","feedbackSentiment","positive","neutral","negative","retentionData","week","rate","geographicData","region","users","deviceData","percentage","browserData","issueData","resolved","anomalyThresholds","initGA4","setupEventListeners","window","addEventListener","trackEvent","page_title","document","page_location","location","href","page_path","pathname","tagName","getAttribute","button_id","button_text","innerText","eventName","eventParams","gtag","getUserActivity","days","getFeatureUsage","limit","getFeedbackSentiment","getRetentionData","getGeographicData","getDeviceData","getBrowserData","getIssueData","detectAnomalies","anomalies","i","prevCount","percentChange","Math","abs","toFixed","feedbackData","total","negativePercentage","exportData","format","allData","exportDate","exportFormat","filename","contentType","getSessionRecordings","startDate","endDate","recordings","Array","from","_","recordingDate","getTime","random","duration","floor","userType","device","pages","numPages","possiblePages","page","toString","browser","country","url","filteredRecordings","searchLower","offset","getHeatmapData","pageId","interactionType","userSegment","numPoints","screenshot","interactions","x","y","clusterX","clusterY","getInteractionMetrics","totalInteractions","uniqueUsers","averageTimeSpent","mostInteractedElement","getUXMetrics","benchmark","timeOnTask","trend","successRate","errorRate","satisfactionScore","taskCompletionTime","getComponentUsageStats","usageCount","avgTimeSpent","satisfaction","getUXMetricsTimeSeries","start","end","daysDiff","round","min","labels","setDate","getDate","datasets","backgroundColor","tension","fill","axios","params","getSessionRecording","sessionId","addBookmark","bookmark","reportIssue","issue","exportSessionData","responseType","Blob","link","createElement","setAttribute","body","appendChild","click","remove","startRecording","options","metadata","timestamp","userAgent","navigator","detectDevice","detectBrowser","screenSize","innerWidth","innerHeight","events","recordEvent","stopRecording","put","onEventMarked","onAnalysisComplete","onBack","useTheme","playerRef","useRef","canvasRef","session","setSession","isPlaying","setIsPlaying","currentTime","setCurrentTime","setDuration","playbackSpeed","setPlaybackSpeed","isFullscreen","setIsFullscreen","currentEvent","setCurrentEvent","markers","setMarkers","selectedFilter","setSelectedFilter","bookmarks","setBookmarks","issues","setIssues","zoom","setZoom","availableSessions","setAvailableSessions","selectedSessionId","setSelectedSessionId","currentFrameIndex","setCurrentFrameIndex","flaggedEvents","setFlaggedEvents","timerRef","sessionRecordingService","getSessionById","fetchSession","current","initializePlayer","intervalId","setInterval","prevTime","newTime","nearestEvent","clearInterval","seekToTime","handleJump","seconds","max","formatTime","timeInSeconds","minutes","padStart","filteredEvents","then","catch","getAvailableSessions","frames","frameTimestamps","frame","time","startTime","nextFrameIndex","findIndex","toLocaleString","ref","overflow","style","objectFit","bottom","SkipPrevious","FastRewind","handlePlayPause","pause","play","Pause","PlayArrow","FastForward","SkipNext","Slider","handleSeek","newSpeed","parseFloat","Speed","handleToggleFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","FullscreenExit","Fullscreen","Bookmark","handleAddBookmark","newBookmark","updatedBookmarks","BugReport","handleReportIssue","newIssue","updatedIssues","Download","handleExportSession","palette","background","default","metrics","overallScore","pageViews","errorCount","clickCount","cursor","jumpToEvent","Flag","_heatmapData$data$","_heatmapData$data$2","setPages","selectedPage","setSelectedPage","heatmapType","setHeatmapType","heatmapData","setHeatmapData","intensity","setIntensity","radius","setRadius","imageRef","analyticsService","getHeatmapPagesList","fetchPages","fetchData","img","complete","drawHeatmap","onload","canvas","ctx","getContext","viewport","drawImage","fillStyle","fillRect","font","fillText","pageUrl","maxValue","point","normalizedValue","gradient","createRadialGradient","addColorStop","beginPath","arc","PI","globalCompositeOperation","className","styles","handleExport","download","toDataURL","removeChild","parseInt","crossOrigin","AnalyticsDashboard","setUserActivity","setFeatureUsage","setFeedbackSentiment","setRetentionData","setGeographicData","setDeviceData","setBrowserData","setIssueData","setAnomalies","setExportFormat","timeRange","setTimeRange","dashboardData","setDashboardData","showSessionRecordings","setShowSessionRecordings","showHeatmaps","setShowHeatmaps","colors","main","secondary","warning","info","pieColors","adminStatus","loadDashboardData","checkAdmin","userActivityData","featureUsageData","feedbackSentimentData","anomaliesData","all","loadAnalytics","generateMockData","formatNumber","num","TrendIndicator","previousValue","isPositive","TrendUpIcon","TrendDownIcon","activityData","activeUsers","newUsers","sessions","currentActiveUsers","reduce","sum","currentNewUsers","previousActiveUsers","previousNewUsers","deviceBreakdown","requestedFeatures","geoData","summary","previous","feedbackCount","surveyResponses","avgSessionDuration","grey","SessionRecording","HeatmapVisualization","RefreshIcon","DownloadIcon","VideoLibrary","handleShowSessionRecordings","Whatshot","handleShowHeatmaps","_Fragment","indicatorColor","textColor","BarChart","Person","Devices","Ballot","ResponsiveContainer","LineChart","left","CartesianGrid","strokeDasharray","XAxis","dataKey","tick","YAxis","RechartsTooltip","Legend","Line","stroke","activeDot","strokeWidth","PieChart","Pie","cx","cy","labelLine","outerRadius","nameKey","percent","entry","Cell","RechartsBarChart","layout","Bar","_ref5","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","hover","px","FeedbackWidget","lazy","BetaPortal","isMobile","useMediaQuery","breakpoints","down","permissionsLoading","isAuthenticated","setIsAuthenticated","user","setUser","showOnboarding","setShowOnboarding","onboardingCode","setOnboardingCode","isAdminState","token","getToken","defaults","headers","common","checkAuthStatus","needsOnboarding","handleOnboardingComplete","updatedUser","refreshedUser","refreshUserData","OnboardingFlow","Role","ROLES","ADMIN","MODERATOR","AccessControl","Link","to","logout","scrollButtons","centered","registrationDate","Permission","PERMISSIONS","CREATE_INVITE","Suspense","fallback","FeatureRequestBoard","RegistrationForm","generateCode","sendEmail","recipientEmail","apiClient","getAuthHeaders","inviteCode","getAllCodes","codes","invalidateCode","sendInviteCodeEmail","emailSent","requestEmailVerification","verifyEmail","requestPasswordReset","resetPassword","newPassword","sendInviteCode"],"sourceRoot":""}