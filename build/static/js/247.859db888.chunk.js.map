{"version":3,"file":"static/js/247.859db888.chunk.js","mappings":"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","sources":["components/ApiStatus.js","pages/ChatPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getStatus } from '../core/api/openaiApi';\r\n\r\n/**\r\n * ApiStatus component - displays the status of the API connections\r\n */\r\nconst ApiStatus = () => {\r\n  const [apiStatus, setApiStatus] = useState({\r\n    openai: false,\r\n    maps: false,\r\n    checking: true,\r\n    error: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    const checkApiStatus = async () => {\r\n      try {\r\n        const status = await getStatus();\r\n        setApiStatus({\r\n          openai: status.isConfigured,\r\n          maps: !!process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\r\n          checking: false,\r\n          error: null\r\n        });\r\n      } catch (error) {\r\n        setApiStatus({\r\n          openai: false,\r\n          maps: false,\r\n          checking: false,\r\n          error: error.message\r\n        });\r\n      }\r\n    };\r\n\r\n    checkApiStatus();\r\n  }, []);\r\n\r\n  if (apiStatus.checking) {\r\n    return <div className=\"api-status\">Checking API status...</div>;\r\n  }\r\n\r\n  if (apiStatus.error) {\r\n    return (\r\n      <div className=\"api-status api-status-error\">\r\n        <h3>API Status Error</h3>\r\n        <p>{apiStatus.error}</p>\r\n        <p>Please check your API configuration in the .env file.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"api-status\">\r\n      <h3>API Status</h3>\r\n      <ul>\r\n        <li className={apiStatus.openai ? \"api-connected\" : \"api-disconnected\"}>\r\n          OpenAI API: {apiStatus.openai ? \"Connected\" : \"Not Connected\"}\r\n          {!apiStatus.openai && (\r\n            <p className=\"api-help\">\r\n              Please set your OpenAI API key in the .env file (REACT_APP_OPENAI_API_KEY).\r\n            </p>\r\n          )}\r\n        </li>\r\n        <li className={apiStatus.maps ? \"api-connected\" : \"api-disconnected\"}>\r\n          Google Maps API: {apiStatus.maps ? \"Connected\" : \"Not Connected\"}\r\n          {!apiStatus.maps && (\r\n            <p className=\"api-help\">\r\n              Please set your Google Maps API key in the .env file (REACT_APP_GOOGLE_MAPS_API_KEY).\r\n            </p>\r\n          )}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApiStatus; ","import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/ChatPage.css';\r\nimport * as openaiApi from '../core/api/openaiApi';\r\nimport ApiStatus from '../components/ApiStatus';\r\n\r\n// Mock data for live pop-up window and route rankboard\r\nconst mockPopups = [\r\n  {\r\n    user_profile: 'https://randomuser.me/api/portraits/men/1.jpg',\r\n    user_name: 'uid001',\r\n    user_route_id: 'uid001-1',\r\n    upvotes: 100,\r\n    user_route_name: 'A 3-day US travel plan',\r\n    created_date: '2025-01-01'\r\n  },\r\n  {\r\n    user_profile: 'https://randomuser.me/api/portraits/women/2.jpg',\r\n    user_name: 'uid002',\r\n    user_route_id: 'uid002-1',\r\n    upvotes: 85,\r\n    user_route_name: 'Paris weekend getaway',\r\n    created_date: '2025-01-02'\r\n  },\r\n  {\r\n    user_profile: 'https://randomuser.me/api/portraits/men/3.jpg',\r\n    user_name: 'uid003',\r\n    user_route_id: 'uid003-1',\r\n    upvotes: 72,\r\n    user_route_name: 'Tokyo adventure',\r\n    created_date: '2025-01-03'\r\n  }\r\n];\r\n\r\nconst mockRankboard = [\r\n  {\r\n    upvote_rank_number: 1,\r\n    user_profile: 'https://randomuser.me/api/portraits/men/1.jpg',\r\n    user_name: 'uid001',\r\n    user_route_id: 'uid001-1',\r\n    upvotes: 100,\r\n    user_route_name: 'A 3-day US travel plan',\r\n    created_date: '2025-01-01'\r\n  },\r\n  {\r\n    upvote_rank_number: 2,\r\n    user_profile: 'https://randomuser.me/api/portraits/women/2.jpg',\r\n    user_name: 'uid002',\r\n    user_route_id: 'uid002-1',\r\n    upvotes: 85,\r\n    user_route_name: 'Paris weekend getaway',\r\n    created_date: '2025-01-02'\r\n  },\r\n  {\r\n    upvote_rank_number: 3,\r\n    user_profile: 'https://randomuser.me/api/portraits/men/3.jpg',\r\n    user_name: 'uid003',\r\n    user_route_id: 'uid003-1',\r\n    upvotes: 72,\r\n    user_route_name: 'Tokyo adventure',\r\n    created_date: '2025-01-03'\r\n  },\r\n  {\r\n    upvote_rank_number: 4,\r\n    user_profile: 'https://randomuser.me/api/portraits/women/4.jpg',\r\n    user_name: 'uid004',\r\n    user_route_id: 'uid004-1',\r\n    upvotes: 65,\r\n    user_route_name: 'Rome historical tour',\r\n    created_date: '2025-01-04'\r\n  },\r\n  {\r\n    upvote_rank_number: 5,\r\n    user_profile: 'https://randomuser.me/api/portraits/men/5.jpg',\r\n    user_name: 'uid005',\r\n    user_route_id: 'uid005-1',\r\n    upvotes: 58,\r\n    user_route_name: 'Barcelona beach vacation',\r\n    created_date: '2025-01-05'\r\n  }\r\n];\r\n\r\n// Function to generate random background color for pop-ups\r\nconst getRandomColor = () => {\r\n  const colors = [\r\n    '#ffcdd2', '#f8bbd0', '#e1bee7', '#d1c4e9', '#c5cae9', \r\n    '#bbdefb', '#b3e5fc', '#b2ebf2', '#b2dfdb', '#c8e6c9', \r\n    '#dcedc8', '#f0f4c3', '#fff9c4', '#ffecb3', '#ffe0b2'\r\n  ];\r\n  return colors[Math.floor(Math.random() * colors.length)];\r\n};\r\n\r\nconst ChatPage = () => {\r\n  const navigate = useNavigate();\r\n  const [userInput, setUserInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Real implementation for user_route_generate using OpenAI API\r\n  const handleGenerateRoute = async () => {\r\n    if (!userInput.trim()) return;\r\n    \r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // 1. Recognize the intent from user input\r\n      const intentResponse = await openaiApi.recognizeTextIntent(userInput);\r\n      \r\n      // 2. Generate a route based on the recognized intent\r\n      const routeResponse = await openaiApi.generateRoute(userInput);\r\n      \r\n      // 3. Navigate to map page with the generated route data\r\n      navigate('/map', { \r\n        state: { \r\n          userQuery: userInput, \r\n          intentData: intentResponse,\r\n          routeData: routeResponse\r\n        } \r\n      });\r\n    } catch (err) {\r\n      console.error('Error generating route:', err);\r\n      setError('Failed to generate route. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  // Real implementation for user_route_generate_randomly using OpenAI API\r\n  const handleFeelLucky = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    \r\n    try {\r\n      // 1. Generate a random route\r\n      const randomRouteResponse = await openaiApi.generateRandomRoute();\r\n      \r\n      // 2. Navigate to map page with the randomly generated route\r\n      navigate('/map', { \r\n        state: { \r\n          userQuery: 'Random destination', \r\n          intentData: null,\r\n          routeData: randomRouteResponse\r\n        } \r\n      });\r\n    } catch (err) {\r\n      console.error('Error generating random route:', err);\r\n      setError('Failed to generate random route. Please try again.');\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  \r\n  const handlePopupClick = (routeId) => {\r\n    navigate('/map', { state: { routeId } });\r\n  };\r\n  \r\n  const handleRankItemClick = (routeId) => {\r\n    navigate('/map', { state: { routeId } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-page\">\r\n      {/* Element 1: Title */}\r\n      <h1 className=\"page-title\">Your personal tour guide!</h1>\r\n      \r\n      {/* API Status component */}\r\n      <ApiStatus />\r\n      \r\n      <div className=\"chat-container\">\r\n        <div className=\"input-section\">\r\n          {/* Element 2: Input Box */}\r\n          <textarea\r\n            className=\"input-box\"\r\n            placeholder=\"Tell me about your dream vacation...\"\r\n            value={userInput}\r\n            onChange={(e) => setUserInput(e.target.value)}\r\n          />\r\n          \r\n          <div className=\"button-group\">\r\n            {/* Element 3: Generate Button */}\r\n            <button\r\n              className=\"btn btn-primary generate-btn\"\r\n              onClick={handleGenerateRoute}\r\n              disabled={!userInput.trim() || isLoading}\r\n            >\r\n              {isLoading ? 'Generating...' : 'Generate your first plan!'}\r\n            </button>\r\n            \r\n            {/* Element 4: Feel Lucky Button */}\r\n            <button\r\n              className=\"btn btn-secondary lucky-btn\"\r\n              onClick={handleFeelLucky}\r\n              disabled={!userInput.trim() || isLoading}\r\n            >\r\n              Feel lucky?\r\n            </button>\r\n          </div>\r\n          \r\n          {/* Error message */}\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n        </div>\r\n        \r\n        <div className=\"content-section\">\r\n          {/* Element 5: Live Pop-up Window */}\r\n          <div className=\"live-popup-section\">\r\n            <h2>Live Activity</h2>\r\n            <div className=\"popup-container\">\r\n              {mockPopups.map((popup, index) => (\r\n                <div\r\n                  key={index}\r\n                  className=\"popup-item\"\r\n                  style={{ backgroundColor: getRandomColor() }}\r\n                  onClick={() => handlePopupClick(popup.user_route_id)}\r\n                >\r\n                  <img src={popup.user_profile} alt={popup.user_name} className=\"user-avatar\" />\r\n                  <div className=\"popup-content\">\r\n                    <p className=\"user-name\">{popup.user_name}</p>\r\n                    <p className=\"route-name\">{popup.user_route_name}</p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Element 6: Route Rankboard */}\r\n          <div className=\"rankboard-section\">\r\n            <h2>Top Routes</h2>\r\n            <div className=\"rankboard-container\">\r\n              <div className=\"top-three\">\r\n                {mockRankboard.slice(0, 3).map((item) => (\r\n                  <div key={item.upvote_rank_number} className=\"medal-item\" onClick={() => handleRankItemClick(item.user_route_id)}>\r\n                    <div className={`medal rank-${item.upvote_rank_number}`}>\r\n                      <img src={item.user_profile} alt={item.user_name} className=\"user-avatar\" />\r\n                      <div className=\"upvote-badge\">{item.upvotes}</div>\r\n                    </div>\r\n                    <p className=\"user-name\">{item.user_name}</p>\r\n                    <p className=\"route-name\">{item.user_route_name}</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              \r\n              <div className=\"other-ranks\">\r\n                {mockRankboard.slice(3).map((item) => (\r\n                  <div key={item.upvote_rank_number} className=\"rank-item\" onClick={() => handleRankItemClick(item.user_route_id)}>\r\n                    <div className=\"rank-number\">{item.upvote_rank_number}</div>\r\n                    <div className=\"rank-details\">\r\n                      <p className=\"route-name\">{item.user_route_name}</p>\r\n                      <p className=\"upvotes\">{item.upvotes} upvotes</p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatPage; "],"names":["ApiStatus","apiStatus","setApiStatus","useState","openai","maps","checking","error","useEffect","async","status","getStatus","isConfigured","message","checkApiStatus","_jsx","className","children","_jsxs","mockPopups","user_profile","user_name","user_route_id","upvotes","user_route_name","created_date","mockRankboard","upvote_rank_number","getRandomColor","colors","Math","floor","random","length","ChatPage","navigate","useNavigate","userInput","setUserInput","isLoading","setIsLoading","setError","handleRankItemClick","routeId","state","placeholder","value","onChange","e","target","onClick","trim","intentResponse","openaiApi","routeResponse","userQuery","intentData","routeData","err","console","disabled","randomRouteResponse","map","popup","index","style","backgroundColor","handlePopupClick","src","alt","slice","item"],"sourceRoot":""}