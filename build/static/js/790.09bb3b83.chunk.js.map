{"version":3,"file":"static/js/790.09bb3b83.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/CardHeader/cardHeaderClasses.js","../node_modules/@mui/material/CardHeader/CardHeader.js","../node_modules/@mui/material/CardActions/cardActionsClasses.js","../node_modules/@mui/material/CardActions/CardActions.js","features/beta-program/components/admin/AdminDashboard.jsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardHeaderUtilityClass(slot) {\n  return generateUtilityClass('MuiCardHeader', slot);\n}\nconst cardHeaderClasses = generateUtilityClasses('MuiCardHeader', ['root', 'avatar', 'action', 'content', 'title', 'subheader']);\nexport default cardHeaderClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"action\", \"avatar\", \"className\", \"component\", \"disableTypography\", \"subheader\", \"subheaderTypographyProps\", \"title\", \"titleTypographyProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport Typography from '../Typography';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport styled from '../styles/styled';\nimport cardHeaderClasses, { getCardHeaderUtilityClass } from './cardHeaderClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    avatar: ['avatar'],\n    action: ['action'],\n    content: ['content'],\n    title: ['title'],\n    subheader: ['subheader']\n  };\n  return composeClasses(slots, getCardHeaderUtilityClass, classes);\n};\nconst CardHeaderRoot = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Root',\n  overridesResolver: (props, styles) => _extends({\n    [`& .${cardHeaderClasses.title}`]: styles.title,\n    [`& .${cardHeaderClasses.subheader}`]: styles.subheader\n  }, styles.root)\n})({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 16\n});\nconst CardHeaderAvatar = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Avatar',\n  overridesResolver: (props, styles) => styles.avatar\n})({\n  display: 'flex',\n  flex: '0 0 auto',\n  marginRight: 16\n});\nconst CardHeaderAction = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Action',\n  overridesResolver: (props, styles) => styles.action\n})({\n  flex: '0 0 auto',\n  alignSelf: 'flex-start',\n  marginTop: -4,\n  marginRight: -8,\n  marginBottom: -4\n});\nconst CardHeaderContent = styled('div', {\n  name: 'MuiCardHeader',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})({\n  flex: '1 1 auto'\n});\nconst CardHeader = /*#__PURE__*/React.forwardRef(function CardHeader(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardHeader'\n  });\n  const {\n      action,\n      avatar,\n      className,\n      component = 'div',\n      disableTypography = false,\n      subheader: subheaderProp,\n      subheaderTypographyProps,\n      title: titleProp,\n      titleTypographyProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    disableTypography\n  });\n  const classes = useUtilityClasses(ownerState);\n  let title = titleProp;\n  if (title != null && title.type !== Typography && !disableTypography) {\n    title = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'h5',\n      className: classes.title,\n      component: \"span\",\n      display: \"block\"\n    }, titleTypographyProps, {\n      children: title\n    }));\n  }\n  let subheader = subheaderProp;\n  if (subheader != null && subheader.type !== Typography && !disableTypography) {\n    subheader = /*#__PURE__*/_jsx(Typography, _extends({\n      variant: avatar ? 'body2' : 'body1',\n      className: classes.subheader,\n      color: \"text.secondary\",\n      component: \"span\",\n      display: \"block\"\n    }, subheaderTypographyProps, {\n      children: subheader\n    }));\n  }\n  return /*#__PURE__*/_jsxs(CardHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    as: component,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: [avatar && /*#__PURE__*/_jsx(CardHeaderAvatar, {\n      className: classes.avatar,\n      ownerState: ownerState,\n      children: avatar\n    }), /*#__PURE__*/_jsxs(CardHeaderContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: [title, subheader]\n    }), action && /*#__PURE__*/_jsx(CardHeaderAction, {\n      className: classes.action,\n      ownerState: ownerState,\n      children: action\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardHeader.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The action to display in the card header.\n   */\n  action: PropTypes.node,\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.node,\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, `subheader` and `title` won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `title` text, and optional `subheader` text\n   * with the Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  subheader: PropTypes.node,\n  /**\n   * These props will be forwarded to the subheader\n   * (as long as disableTypography is not `true`).\n   */\n  subheaderTypographyProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The content of the component.\n   */\n  title: PropTypes.node,\n  /**\n   * These props will be forwarded to the title\n   * (as long as disableTypography is not `true`).\n   */\n  titleTypographyProps: PropTypes.object\n} : void 0;\nexport default CardHeader;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(style) ~ :not(style)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import React from 'react';\r\nimport { \r\n  Container, \r\n  Typography, \r\n  Grid, \r\n  Paper, \r\n  Box, \r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardActions,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText\r\n} from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AccessControl, Permission, Role } from '../auth';\r\nimport { PERMISSIONS } from '../../services/PermissionsService';\r\n\r\n/**\r\n * Admin Dashboard Component\r\n * Central administrative interface with role-based content visibility\r\n */\r\nconst AdminDashboard = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const mockUsers = [\r\n    { id: 1, name: 'John Doe', email: 'john@example.com', role: 'BETA_TESTER', lastActive: '2023-10-15' },\r\n    { id: 2, name: 'Jane Smith', email: 'jane@example.com', role: 'BETA_TESTER', lastActive: '2023-10-12' },\r\n    { id: 3, name: 'Mike Johnson', email: 'mike@example.com', role: 'MODERATOR', lastActive: '2023-10-16' },\r\n  ];\r\n\r\n  const mockStats = {\r\n    totalUsers: 254,\r\n    activeBetaTesters: 178,\r\n    pendingInvites: 25,\r\n    activeInviteCodes: 42,\r\n    totalFeedback: 156,\r\n    bugReports: 23\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 8 }}>\r\n      <Box sx={{ mb: 4 }}>\r\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n          Admin Dashboard\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n          Manage your beta program, users, and application settings\r\n        </Typography>\r\n      </Box>\r\n      \r\n      <Grid container spacing={3}>\r\n        {/* Stats Overview */}\r\n        <Grid item xs={12}>\r\n          <Paper elevation={2} sx={{ p: 3, mb: 3 }}>\r\n            <Typography variant=\"h6\" gutterBottom>System Overview</Typography>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6} sm={4} md={2}>\r\n                <Box sx={{ textAlign: 'center', p: 2 }}>\r\n                  <Typography variant=\"h4\">{mockStats.totalUsers}</Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">Total Users</Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={6} sm={4} md={2}>\r\n                <Box sx={{ textAlign: 'center', p: 2 }}>\r\n                  <Typography variant=\"h4\">{mockStats.activeBetaTesters}</Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">Active Testers</Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={6} sm={4} md={2}>\r\n                <Box sx={{ textAlign: 'center', p: 2 }}>\r\n                  <Typography variant=\"h4\">{mockStats.pendingInvites}</Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">Pending Invites</Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={6} sm={4} md={2}>\r\n                <Box sx={{ textAlign: 'center', p: 2 }}>\r\n                  <Typography variant=\"h4\">{mockStats.activeInviteCodes}</Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">Active Codes</Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={6} sm={4} md={2}>\r\n                <Box sx={{ textAlign: 'center', p: 2 }}>\r\n                  <Typography variant=\"h4\">{mockStats.totalFeedback}</Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">Total Feedback</Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={6} sm={4} md={2}>\r\n                <Box sx={{ textAlign: 'center', p: 2 }}>\r\n                  <Typography variant=\"h4\">{mockStats.bugReports}</Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">Bug Reports</Typography>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n        </Grid>\r\n        \r\n        {/* Quick Actions */}\r\n        <Grid item xs={12} md={4}>\r\n          <Card>\r\n            <CardHeader title=\"Quick Actions\" />\r\n            <Divider />\r\n            <CardContent>\r\n              <List>\r\n                <Permission permission={PERMISSIONS.CREATE_INVITE}>\r\n                  <ListItem button onClick={() => navigate('/admin/invite-codes')}>\r\n                    <ListItemText \r\n                      primary=\"Manage Invite Codes\" \r\n                      secondary=\"Create and manage beta invitation codes\"\r\n                    />\r\n                  </ListItem>\r\n                </Permission>\r\n                \r\n                <Role role=\"ADMIN\">\r\n                  <ListItem button>\r\n                    <ListItemText \r\n                      primary=\"User Management\" \r\n                      secondary=\"Manage user accounts and roles\"\r\n                    />\r\n                  </ListItem>\r\n                </Role>\r\n                \r\n                <AccessControl permission={PERMISSIONS.MANAGE_FEEDBACK}>\r\n                  <ListItem button>\r\n                    <ListItemText \r\n                      primary=\"Review Feedback\" \r\n                      secondary=\"View and respond to user feedback\"\r\n                    />\r\n                  </ListItem>\r\n                </AccessControl>\r\n                \r\n                <Role role=\"ADMIN\">\r\n                  <ListItem button>\r\n                    <ListItemText \r\n                      primary=\"System Settings\" \r\n                      secondary=\"Configure application settings\"\r\n                    />\r\n                  </ListItem>\r\n                </Role>\r\n              </List>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        \r\n        {/* Recent Activity */}\r\n        <Grid item xs={12} md={8}>\r\n          <Card>\r\n            <CardHeader title=\"Recent Activity\" />\r\n            <Divider />\r\n            <CardContent sx={{ maxHeight: 350, overflow: 'auto' }}>\r\n              <List>\r\n                <ListItem>\r\n                  <ListItemText \r\n                    primary=\"New beta tester registered\" \r\n                    secondary=\"John Smith joined the beta program • 2 hours ago\"\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText \r\n                    primary=\"Feedback submitted\" \r\n                    secondary=\"New feature suggestion received • 5 hours ago\"\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText \r\n                    primary=\"Invite code generated\" \r\n                    secondary=\"Admin created 5 new invitation codes • Yesterday\"\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText \r\n                    primary=\"Bug report\" \r\n                    secondary=\"Issue reported in chat feature • Yesterday\"\r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText \r\n                    primary=\"User role updated\" \r\n                    secondary=\"Jane Smith promoted to Moderator • 3 days ago\"\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n            </CardContent>\r\n            <Divider />\r\n            <CardActions>\r\n              <Button size=\"small\" color=\"primary\">View All Activity</Button>\r\n            </CardActions>\r\n          </Card>\r\n        </Grid>\r\n        \r\n        {/* Recent Users - Admin Only */}\r\n        <Role role=\"ADMIN\">\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <CardHeader title=\"Recent Users\" />\r\n              <Divider />\r\n              <CardContent>\r\n                <Grid container spacing={2}>\r\n                  {mockUsers.map(user => (\r\n                    <Grid item xs={12} sm={6} md={4} key={user.id}>\r\n                      <Paper elevation={1} sx={{ p: 2 }}>\r\n                        <Typography variant=\"subtitle1\">{user.name}</Typography>\r\n                        <Typography variant=\"body2\" color=\"text.secondary\">{user.email}</Typography>\r\n                        <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 1 }}>\r\n                          <Typography variant=\"caption\">Role: {user.role}</Typography>\r\n                          <Typography variant=\"caption\">Last active: {user.lastActive}</Typography>\r\n                        </Box>\r\n                      </Paper>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </CardContent>\r\n              <Divider />\r\n              <CardActions>\r\n                <Button size=\"small\" color=\"primary\">Manage Users</Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n        </Role>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard; "],"names":["getCardHeaderUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardHeaderRoot","styled","name","overridesResolver","props","styles","_extends","cardHeaderClasses","title","subheader","root","display","alignItems","padding","CardHeaderAvatar","avatar","flex","marginRight","CardHeaderAction","action","alignSelf","marginTop","marginBottom","CardHeaderContent","content","React","inProps","ref","useDefaultProps","className","component","disableTypography","subheaderProp","subheaderTypographyProps","titleProp","titleTypographyProps","other","_objectWithoutPropertiesLoose","ownerState","classes","composeClasses","useUtilityClasses","type","Typography","_jsx","variant","children","color","_jsxs","clsx","as","getCardActionsUtilityClass","CardActionsRoot","disableSpacing","spacing","_ref","marginLeft","slots","AdminDashboard","navigate","useNavigate","mockStats","Container","maxWidth","sx","mt","mb","Box","gutterBottom","Grid","container","item","xs","Paper","elevation","p","sm","md","textAlign","Card","CardHeader","Divider","CardContent","List","Permission","permission","PERMISSIONS","CREATE_INVITE","ListItem","button","onClick","ListItemText","primary","secondary","Role","role","AccessControl","MANAGE_FEEDBACK","maxHeight","overflow","CardActions","Button","size","id","email","lastActive","map","user","justifyContent"],"sourceRoot":""}